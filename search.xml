<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
    
    <entry>
      <title><![CDATA[180222]]></title>
      <url>/2018/02/22/dailyDiary/2018/180222/</url>
      <content type="html"><![CDATA[<script src=/js/crypto-js.js></script><script>
function doDecrypt(pwd, onError) {
	console.log("in doDecrypt");
	var txt = document.getElementById("enc_content").innerHTML;
	var plantext;
	try {
	  	var bytes = CryptoJS.AES.decrypt(txt, pwd);
		plaintext = bytes.toString(CryptoJS.enc.Utf8);
	} catch(err) {
		if(onError) {onError(err);}
		return;
	}
	document.getElementById("enc_content").innerHTML = plaintext;
	document.getElementById("enc_content").style.display = "block";
   document.getElementById("enc_passwd").style.display = "none";
}
</script>
<div id="enc_content" style="display:none">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</div><div id="enc_passwd"> <input id="enc_pwd_input" type="text" style="border-radius: 5px;border-style: groove;height: 30px;width: 50%;cursor: auto;font-size: 102%;color: currentColor;outline: none;text-overflow: initial;padding-left: 5px;" onkeydown="if (event.keyCode == 13) { decrypt(); return false;}"> <input type="submit" value="解&nbsp;密" onclick="decrypt()" style="width: 58px;height: 34px;border-radius: 5px;background-color: white;border-style: solid;color: currentColor;"><div id="enc_error" style="display: inline-block;color: #d84527;margin-left: 10px"></div>
<script>
var onError = function(error) {
	document.getElementById("enc_error").innerHTML = "password error!"
};
function decrypt() {
var passwd = document.getElementById("enc_pwd_input").value;
console.log(passwd);
doDecrypt(passwd, onError);
}
</script>
</div>]]></content>
      
        <categories>
            
            <category> dailyDiary </category>
            
        </categories>
        
        
        <tags>
            
            <tag> morningDiary </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[happy 2018]]></title>
      <url>/2018/02/22/essay/happy-2018/</url>
      <content type="html"><![CDATA[<script src=/js/crypto-js.js></script><script>
function doDecrypt(pwd, onError) {
	console.log("in doDecrypt");
	var txt = document.getElementById("enc_content").innerHTML;
	var plantext;
	try {
	  	var bytes = CryptoJS.AES.decrypt(txt, pwd);
		plaintext = bytes.toString(CryptoJS.enc.Utf8);
	} catch(err) {
		if(onError) {onError(err);}
		return;
	}
	document.getElementById("enc_content").innerHTML = plaintext;
	document.getElementById("enc_content").style.display = "block";
   document.getElementById("enc_passwd").style.display = "none";
}
</script>
<div id="enc_content" style="display:none">U2FsdGVkX1+4qzonNRZYUcyprLOb3+4mxTB2eM/xXi5Eo6FfFcbHjiNa7HNYLHwLbvXeK5lxiMWQQojmJTBHpOsx2VJ6maHJR3MhhSDzJH2rQBweepi6lT01oK0zIB8WWlvnThdzccTXdurrlnFUGC5E2lmbwMxQFB3nu5eeDVwuH4mhQ793MSKj4To6fr17/NdkQwmzU5xCi9F/hjgYXF8rBYFUYNyAANmhBwMgRoqjKIfOtZ336TIueP2RnIx5BQcaxzIfP1l7TYjvmILzJVXO1Y93InLWISR8TXyX/BHuHvqIm223iPxC6ZikaJ2b+o60Jophi8hKO0YhAD+OWmVsHVRLQ2XTwhZkGPynEpcMQ+JsTgPv0mt78E9xOLmQvCYpSeR+SCmnatjK6f5P1duAqI66JEcQU+COjEjC0pW2N30cUUptM/tAHNgVlCY+S2ygS/sqiq09Hrq7wPoJypHXWFAP5Js402STTtbrvTuKaq/OMJLh9lSD+Yg7nFtPV6LI6Dm5AJi9xY45GYz6MsHHmqOSIztWcRMIJEL23xA=</div><div id="enc_passwd"> <input id="enc_pwd_input" type="text" style="border-radius: 5px;border-style: groove;height: 30px;width: 50%;cursor: auto;font-size: 102%;color: currentColor;outline: none;text-overflow: initial;padding-left: 5px;" onkeydown="if (event.keyCode == 13) { decrypt(); return false;}"> <input type="submit" value="解&nbsp;密" onclick="decrypt()" style="width: 58px;height: 34px;border-radius: 5px;background-color: white;border-style: solid;color: currentColor;"><div id="enc_error" style="display: inline-block;color: #d84527;margin-left: 10px"></div>
<script>
var onError = function(error) {
	document.getElementById("enc_error").innerHTML = "password error!"
};
function decrypt() {
var passwd = document.getElementById("enc_pwd_input").value;
console.log(passwd);
doDecrypt(passwd, onError);
}
</script>
</div>]]></content>
      
        
    </entry>
    
    <entry>
      <title><![CDATA[react-virtualized库使用]]></title>
      <url>/2018/01/29/front-end/React/react-virtualized/</url>
      <content type="html"><![CDATA[<p>主要用于树的大数据展示。<br><a id="more"></a><br>参考库：<br><a href="https://github.com/diogofcunha/react-virtualized-tree" target="_blank" rel="external">diogofcunha/react-virtualized-tree</a><br>这个库将树的数据平铺后通过indent来生成树结构(其实还是<li>，只是视觉上不同)<br>TreeContainer将props传来的树形结构datasource使用getFlattenedTree转成list供Tree渲染，注意:<br><strong>当node未expanded的时候不返回node的children的list数据</strong></li></p>
<p><a href="TreeContainer"></a><br><a href="https://fritz-c.github.io/react-sortable-tree/" target="_blank" rel="external">React Sortable Tree</a><br>原理与上同<br><a href="https://github.com/Lodin/react-vtree" target="_blank" rel="external">react-vtree</a></p>
<p><a href="https://github.com/bvaughn/react-virtualized/issues/980" target="_blank" rel="external">Nested Autosizer / List</a>表明react-virtualized不能直接用于嵌套结构之中，必须把内部结构打平铺才能使用。antd的rc-tree在被使用时已经是深层嵌套的结构了，这时候再把TreeNode components打平铺太困难了…决定还是自己另起一棵树吧</p>
]]></content>
      
        
    </entry>
    
    <entry>
      <title><![CDATA[正则记录]]></title>
      <url>/2017/12/21/front-end/basic/%E6%AD%A3%E5%88%99%E8%AE%B0%E5%BD%95/</url>
      <content type="html"><![CDATA[<p>一些常用正则整理<br><a id="more"></a></p>
<h2 id="中文"><a href="#中文" class="headerlink" title="中文"></a>中文</h2><p>[\u4e00-\u9fa5]+</p>
<p>#<br>双引号内中文</p>
<p>查找:</p>
<ol>
<li>“.*?”,匹配双引号</li>
<li>“.<em>?[\u4e00-\u9fa5]+.</em>?”是否存在中文(必须在1的基础上筛选，否则会匹配到多句子)</li>
<li>替换: </li>
<li>Intl.get(‘system.service.offlineAuth’)</li>
</ol>
<h2 id="8-3系统记录"><a href="#8-3系统记录" class="headerlink" title="8.3系统记录"></a>8.3系统记录</h2><h3 id="定义与使用"><a href="#定义与使用" class="headerlink" title="定义与使用"></a>定义与使用</h3><p>定义: “PRODUCT_LICENSE_NOTICE” =&gt; ‘提示：如果您现在无法连接网络，请保存授权申请码：<br>，便于日后登录获取激活码。’<br>使用:  $this-&gt;view-&gt;notice = str_replace(““, $this-&gt;view-&gt;serial, $this-&gt;translate<em>system-&gt;</em>(‘PRODUCT_LICENSE_NOTICE’));</p>
<p>定义: “SYSTEM_ADMIN_LOG” =&gt; “登录名:{username},类型描述:{usertype},姓名:{name},邮件:{email},手机:{mobile},ukey状态:{ukey}”,<br>使用: $dscr = $option . ‘ ‘ .$usertype . ‘ ‘ . str<em>replace(array(“{username}”, “{usertype}”, “{name}”, “{email}”, “{mobile}”, “{ukey}”), array($paramArray[‘username’], $paramArray[‘usertype’], $paramArray[‘name’], $paramArray[‘email’], $paramArray[‘mobile’], $uksta), $this-&gt;t-&gt;</em>(‘SYSTEM_ADMIN_LOG’));</p>
<h3 id="转化使用"><a href="#转化使用" class="headerlink" title="转化使用"></a>转化使用</h3><ol>
<li>array变对象<br>“(.<em>?_.</em>?)”\s=&gt;\s”(.*?)”<br>$1: ‘$2’</li>
<li>连字变驼峰</li>
</ol>
]]></content>
      
        
    </entry>
    
    <entry>
      <title><![CDATA[work1212]]></title>
      <url>/2017/12/12/work/work1212/</url>
      <content type="html"><![CDATA[<script src=/js/crypto-js.js></script><script>
function doDecrypt(pwd, onError) {
	console.log("in doDecrypt");
	var txt = document.getElementById("enc_content").innerHTML;
	var plantext;
	try {
	  	var bytes = CryptoJS.AES.decrypt(txt, pwd);
		plaintext = bytes.toString(CryptoJS.enc.Utf8);
	} catch(err) {
		if(onError) {onError(err);}
		return;
	}
	document.getElementById("enc_content").innerHTML = plaintext;
	document.getElementById("enc_content").style.display = "block";
   document.getElementById("enc_passwd").style.display = "none";
}
</script>
<div id="enc_content" style="display:none">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</div><div id="enc_passwd"> <input id="enc_pwd_input" type="text" style="border-radius: 5px;border-style: groove;height: 30px;width: 50%;cursor: auto;font-size: 102%;color: currentColor;outline: none;text-overflow: initial;padding-left: 5px;" onkeydown="if (event.keyCode == 13) { decrypt(); return false;}"> <input type="submit" value="解&nbsp;密" onclick="decrypt()" style="width: 58px;height: 34px;border-radius: 5px;background-color: white;border-style: solid;color: currentColor;"><div id="enc_error" style="display: inline-block;color: #d84527;margin-left: 10px"></div>
<script>
var onError = function(error) {
	document.getElementById("enc_error").innerHTML = "password error!"
};
function decrypt() {
var passwd = document.getElementById("enc_pwd_input").value;
console.log(passwd);
doDecrypt(passwd, onError);
}
</script>
</div>]]></content>
      
        
    </entry>
    
    <entry>
      <title><![CDATA[171211]]></title>
      <url>/2017/12/11/dailyDiary/2017/171211/</url>
      <content type="html"><![CDATA[<script src=/js/crypto-js.js></script><script>
function doDecrypt(pwd, onError) {
	console.log("in doDecrypt");
	var txt = document.getElementById("enc_content").innerHTML;
	var plantext;
	try {
	  	var bytes = CryptoJS.AES.decrypt(txt, pwd);
		plaintext = bytes.toString(CryptoJS.enc.Utf8);
	} catch(err) {
		if(onError) {onError(err);}
		return;
	}
	document.getElementById("enc_content").innerHTML = plaintext;
	document.getElementById("enc_content").style.display = "block";
   document.getElementById("enc_passwd").style.display = "none";
}
</script>
<div id="enc_content" style="display:none">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</div><div id="enc_passwd"> <input id="enc_pwd_input" type="text" style="border-radius: 5px;border-style: groove;height: 30px;width: 50%;cursor: auto;font-size: 102%;color: currentColor;outline: none;text-overflow: initial;padding-left: 5px;" onkeydown="if (event.keyCode == 13) { decrypt(); return false;}"> <input type="submit" value="解&nbsp;密" onclick="decrypt()" style="width: 58px;height: 34px;border-radius: 5px;background-color: white;border-style: solid;color: currentColor;"><div id="enc_error" style="display: inline-block;color: #d84527;margin-left: 10px"></div>
<script>
var onError = function(error) {
	document.getElementById("enc_error").innerHTML = "password error!"
};
function decrypt() {
var passwd = document.getElementById("enc_pwd_input").value;
console.log(passwd);
doDecrypt(passwd, onError);
}
</script>
</div>]]></content>
      
        <categories>
            
            <category> dailyDiary </category>
            
        </categories>
        
        
        <tags>
            
            <tag> morningDiary </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[171206]]></title>
      <url>/2017/12/06/dailyDiary/2017/171206/</url>
      <content type="html"><![CDATA[<script src=/js/crypto-js.js></script><script>
function doDecrypt(pwd, onError) {
	console.log("in doDecrypt");
	var txt = document.getElementById("enc_content").innerHTML;
	var plantext;
	try {
	  	var bytes = CryptoJS.AES.decrypt(txt, pwd);
		plaintext = bytes.toString(CryptoJS.enc.Utf8);
	} catch(err) {
		if(onError) {onError(err);}
		return;
	}
	document.getElementById("enc_content").innerHTML = plaintext;
	document.getElementById("enc_content").style.display = "block";
   document.getElementById("enc_passwd").style.display = "none";
}
</script>
<div id="enc_content" style="display:none">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</div><div id="enc_passwd"> <input id="enc_pwd_input" type="text" style="border-radius: 5px;border-style: groove;height: 30px;width: 50%;cursor: auto;font-size: 102%;color: currentColor;outline: none;text-overflow: initial;padding-left: 5px;" onkeydown="if (event.keyCode == 13) { decrypt(); return false;}"> <input type="submit" value="解&nbsp;密" onclick="decrypt()" style="width: 58px;height: 34px;border-radius: 5px;background-color: white;border-style: solid;color: currentColor;"><div id="enc_error" style="display: inline-block;color: #d84527;margin-left: 10px"></div>
<script>
var onError = function(error) {
	document.getElementById("enc_error").innerHTML = "password error!"
};
function decrypt() {
var passwd = document.getElementById("enc_pwd_input").value;
console.log(passwd);
doDecrypt(passwd, onError);
}
</script>
</div>]]></content>
      
        <categories>
            
            <category> dailyDiary </category>
            
        </categories>
        
        
        <tags>
            
            <tag> morningDiary </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[171124]]></title>
      <url>/2017/11/24/dailyDiary/2017/171124/</url>
      <content type="html"><![CDATA[<script src=/js/crypto-js.js></script><script>
function doDecrypt(pwd, onError) {
	console.log("in doDecrypt");
	var txt = document.getElementById("enc_content").innerHTML;
	var plantext;
	try {
	  	var bytes = CryptoJS.AES.decrypt(txt, pwd);
		plaintext = bytes.toString(CryptoJS.enc.Utf8);
	} catch(err) {
		if(onError) {onError(err);}
		return;
	}
	document.getElementById("enc_content").innerHTML = plaintext;
	document.getElementById("enc_content").style.display = "block";
   document.getElementById("enc_passwd").style.display = "none";
}
</script>
<div id="enc_content" style="display:none">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</div><div id="enc_passwd"> <input id="enc_pwd_input" type="text" style="border-radius: 5px;border-style: groove;height: 30px;width: 50%;cursor: auto;font-size: 102%;color: currentColor;outline: none;text-overflow: initial;padding-left: 5px;" onkeydown="if (event.keyCode == 13) { decrypt(); return false;}"> <input type="submit" value="解&nbsp;密" onclick="decrypt()" style="width: 58px;height: 34px;border-radius: 5px;background-color: white;border-style: solid;color: currentColor;"><div id="enc_error" style="display: inline-block;color: #d84527;margin-left: 10px"></div>
<script>
var onError = function(error) {
	document.getElementById("enc_error").innerHTML = "password error!"
};
function decrypt() {
var passwd = document.getElementById("enc_pwd_input").value;
console.log(passwd);
doDecrypt(passwd, onError);
}
</script>
</div>]]></content>
      
        <categories>
            
            <category> dailyDiary </category>
            
        </categories>
        
        
        <tags>
            
            <tag> morningDiary </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Server push技术]]></title>
      <url>/2017/11/17/Tec/accumulation/im/</url>
      <content type="html"><![CDATA[<ol>
<li>客户端轮询，最为暴力的方案</li>
<li>COMET技术，一般实现为保持长连接+断开重连</li>
<li>Flash插件技术，可以基于Flash实现socket连接，如果是Flex还可以使用BlazeDS的messaging</li>
<li>HTML5/WebSocket，其它浏览器还好，但是IE不支持！<a id="more"></a>
<h2 id="websockt"><a href="#websockt" class="headerlink" title="websockt"></a>websockt</h2>socket.io与之关系?<br>WebSocket是为了HTML5应用方便与服务器双向通讯而设计的协议，HTTP握手然后转TCP协议，用于取代之前的Server Push、Comet、长轮询等老旧实现。</li>
</ol>
<h2 id="MQTT（推送）"><a href="#MQTT（推送）" class="headerlink" title="MQTT（推送）"></a>MQTT（推送）</h2><p>轻量级<br>适合做简单推送<br>MQTT是为了物联网场景设计的基于TCP的Pub/Sub协议，有许多为物联网优化的特性，比如适应不同网络的QoS、层级主题、遗言等等。<br>两者之所有有交集，是因为一个应用场景：如何通过HTML5应用来作为MQTT的客户端，以便接受设备消息或者向设备发送信息，那么MQTT over WebSocket自然成了最合理的途径了。</p>
<h2 id="XMPP"><a href="#XMPP" class="headerlink" title="XMPP"></a>XMPP</h2><p>IM聊天</p>
<h2 id="GCM"><a href="#GCM" class="headerlink" title="GCM"></a>GCM</h2><h2 id="野狗实时云"><a href="#野狗实时云" class="headerlink" title="野狗实时云"></a>野狗实时云</h2><p>许多免费服务，可以一试</p>
]]></content>
      
        
    </entry>
    
    <entry>
      <title><![CDATA[css自适应]]></title>
      <url>/2017/11/16/front-end/basic/cssAndHtml/cssauto/</url>
      <content type="html"><![CDATA[<p>css自适应</p>
<a id="more"></a>
<h2 id="自适应相关屏幕尺寸"><a href="#自适应相关屏幕尺寸" class="headerlink" title="自适应相关屏幕尺寸"></a>自适应相关屏幕尺寸</h2><figure class="highlight less"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// Media queries breakpoints</span></div><div class="line"><span class="comment">// Extra small screen / phone</span></div><div class="line"><span class="variable">@screen-xs              :</span> <span class="number">480px</span>;</div><div class="line"><span class="variable">@screen-xs-min          :</span> <span class="variable">@screen-xs</span>;</div><div class="line"></div><div class="line"><span class="comment">// Small screen / tablet</span></div><div class="line"><span class="variable">@screen-sm              :</span> <span class="number">768px</span>;</div><div class="line"><span class="variable">@screen-sm-min          :</span> <span class="variable">@screen-sm</span>;</div><div class="line"></div><div class="line"><span class="comment">// Medium screen / desktop</span></div><div class="line"><span class="variable">@screen-md              :</span> <span class="number">992px</span>;</div><div class="line"><span class="variable">@screen-md-min          :</span> <span class="variable">@screen-md</span>;</div><div class="line"></div><div class="line"><span class="comment">// Large screen / wide desktop</span></div><div class="line"><span class="variable">@screen-lg              :</span> <span class="number">1200px</span>;</div><div class="line"><span class="variable">@screen-lg-min          :</span> <span class="variable">@screen-lg</span>;</div><div class="line"></div><div class="line"><span class="comment">// Extra Large screen / full hd</span></div><div class="line"><span class="variable">@screen-xl              :</span> <span class="number">1600px</span>;</div><div class="line"><span class="variable">@screen-xl-min          :</span> <span class="variable">@screen-xl</span>;</div><div class="line"></div><div class="line"><span class="comment">// provide a maximum</span></div><div class="line"><span class="variable">@screen-xs-max          :</span> (<span class="variable">@screen-sm-min</span> - <span class="number">1px</span>);</div><div class="line"><span class="variable">@screen-sm-max          :</span> (<span class="variable">@screen-md-min</span> - <span class="number">1px</span>);</div><div class="line"><span class="variable">@screen-md-max          :</span> (<span class="variable">@screen-lg-min</span> - <span class="number">1px</span>);</div><div class="line"><span class="variable">@screen-lg-max          :</span> (<span class="variable">@screen-xl-min</span> - <span class="number">1px</span>);</div></pre></td></tr></table></figure>
<h2 id="使用示例"><a href="#使用示例" class="headerlink" title="使用示例"></a>使用示例</h2><figure class="highlight less"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div></pre></td><td class="code"><pre><div class="line"></div><div class="line"><span class="keyword">@media</span> screen and (<span class="attribute">max-width</span>: <span class="variable">@screen-xl</span>)  and (<span class="attribute">min-width</span>: <span class="variable">@screen-lg</span>) &#123;</div><div class="line">  <span class="selector-class">.activeCard</span> &#123;</div><div class="line">    <span class="attribute">margin-bottom</span>: <span class="number">24px</span>;</div><div class="line">  &#125;</div><div class="line">  <span class="selector-class">.members</span> &#123;</div><div class="line">    <span class="attribute">margin-bottom</span>: <span class="number">0</span>;</div><div class="line">  &#125;</div><div class="line">  <span class="selector-class">.pageHeaderExtra</span> &#123;</div><div class="line">    <span class="attribute">margin-left</span>: -<span class="number">44px</span>;</div><div class="line">    <span class="selector-tag">&amp;</span> &gt; <span class="selector-tag">div</span> &#123;</div><div class="line">      <span class="attribute">padding</span>: <span class="number">0</span> <span class="number">16px</span>;</div><div class="line">    &#125;</div><div class="line">  &#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">@media</span> screen and (<span class="attribute">max-width</span>: <span class="variable">@screen-lg</span>) &#123;</div><div class="line">  <span class="selector-class">.activeCard</span> &#123;</div><div class="line">    <span class="attribute">margin-bottom</span>: <span class="number">24px</span>;</div><div class="line">  &#125;</div><div class="line">  <span class="selector-class">.members</span> &#123;</div><div class="line">    <span class="attribute">margin-bottom</span>: <span class="number">0</span>;</div><div class="line">  &#125;</div><div class="line">  <span class="selector-class">.pageHeaderExtra</span> &#123;</div><div class="line">    <span class="attribute">float</span>: none;</div><div class="line">    <span class="attribute">margin-right</span>: <span class="number">0</span>;</div><div class="line">    <span class="selector-tag">&amp;</span> &gt; <span class="selector-tag">div</span> &#123;</div><div class="line">      <span class="attribute">padding</span>: <span class="number">0</span> <span class="number">16px</span>;</div><div class="line">      <span class="attribute">text-align</span>: left;</div><div class="line">      <span class="selector-tag">&amp;</span><span class="selector-pseudo">:after</span> &#123;</div><div class="line">        <span class="attribute">display</span>: none;</div><div class="line">      &#125;</div><div class="line">    &#125;</div><div class="line">  &#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">@media</span> screen and (<span class="attribute">max-width</span>: <span class="variable">@screen-md</span>) &#123;</div><div class="line">  <span class="selector-class">.pageHeaderExtra</span> &#123;</div><div class="line">    <span class="attribute">margin-left</span>: -<span class="number">16px</span>;</div><div class="line">  &#125;</div><div class="line">  <span class="selector-class">.projectList</span> &#123;</div><div class="line">    <span class="selector-class">.projectGrid</span> &#123;</div><div class="line">      <span class="attribute">width</span>: <span class="number">50%</span>;</div><div class="line">    &#125;</div><div class="line">  &#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">@media</span> screen and (<span class="attribute">max-width</span>: <span class="variable">@screen-sm</span>) &#123;</div><div class="line">  <span class="selector-class">.pageHeaderContent</span> &#123;</div><div class="line">    <span class="attribute">display</span>: block;</div><div class="line">    <span class="selector-class">.content</span> &#123;</div><div class="line">      <span class="attribute">margin-left</span>: <span class="number">0</span>;</div><div class="line">    &#125;</div><div class="line">  &#125;</div><div class="line">  <span class="selector-class">.pageHeaderExtra</span> &#123;</div><div class="line">    <span class="selector-tag">&amp;</span> &gt; <span class="selector-tag">div</span> &#123;</div><div class="line">      <span class="attribute">float</span>: none;</div><div class="line">    &#125;</div><div class="line">  &#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">@media</span> screen and (<span class="attribute">max-width</span>: <span class="variable">@screen-xs</span>) &#123;</div><div class="line">  <span class="selector-class">.projectList</span> &#123;</div><div class="line">    <span class="selector-class">.projectGrid</span> &#123;</div><div class="line">      <span class="attribute">width</span>: <span class="number">100%</span>;</div><div class="line">    &#125;</div><div class="line">  &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>]]></content>
      
        
    </entry>
    
    <entry>
      <title><![CDATA[171116]]></title>
      <url>/2017/11/16/dailyDiary/2017/171116/</url>
      <content type="html"><![CDATA[<script src=/js/crypto-js.js></script><script>
function doDecrypt(pwd, onError) {
	console.log("in doDecrypt");
	var txt = document.getElementById("enc_content").innerHTML;
	var plantext;
	try {
	  	var bytes = CryptoJS.AES.decrypt(txt, pwd);
		plaintext = bytes.toString(CryptoJS.enc.Utf8);
	} catch(err) {
		if(onError) {onError(err);}
		return;
	}
	document.getElementById("enc_content").innerHTML = plaintext;
	document.getElementById("enc_content").style.display = "block";
   document.getElementById("enc_passwd").style.display = "none";
}
</script>
<div id="enc_content" style="display:none">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</div><div id="enc_passwd"> <input id="enc_pwd_input" type="text" style="border-radius: 5px;border-style: groove;height: 30px;width: 50%;cursor: auto;font-size: 102%;color: currentColor;outline: none;text-overflow: initial;padding-left: 5px;" onkeydown="if (event.keyCode == 13) { decrypt(); return false;}"> <input type="submit" value="解&nbsp;密" onclick="decrypt()" style="width: 58px;height: 34px;border-radius: 5px;background-color: white;border-style: solid;color: currentColor;"><div id="enc_error" style="display: inline-block;color: #d84527;margin-left: 10px"></div>
<script>
var onError = function(error) {
	document.getElementById("enc_error").innerHTML = "password error!"
};
function decrypt() {
var passwd = document.getElementById("enc_pwd_input").value;
console.log(passwd);
doDecrypt(passwd, onError);
}
</script>
</div>]]></content>
      
        <categories>
            
            <category> dailyDiary </category>
            
        </categories>
        
        
        <tags>
            
            <tag> morningDiary </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Ant Pro源码笔记]]></title>
      <url>/2017/11/10/front-end/React/antd/antpro/</url>
      <content type="html"><![CDATA[<p>学习一些组件化设计思想<br><a id="more"></a></p>
<h1 id="样式使用"><a href="#样式使用" class="headerlink" title="样式使用"></a>样式使用</h1><ol>
<li>antd组件多用style行内样式</li>
<li>html标签多用less</li>
</ol>
<h1 id="方法定义"><a href="#方法定义" class="headerlink" title="方法定义"></a>方法定义</h1><ol>
<li>不用加bind<br>onChange={e =&gt; this.handleFieldChange(e, ‘name’, record.key)}</li>
<li></li>
</ol>
]]></content>
      
        
    </entry>
    
    <entry>
      <title><![CDATA[171110]]></title>
      <url>/2017/11/10/dailyDiary/2017/171110/</url>
      <content type="html"><![CDATA[<script src=/js/crypto-js.js></script><script>
function doDecrypt(pwd, onError) {
	console.log("in doDecrypt");
	var txt = document.getElementById("enc_content").innerHTML;
	var plantext;
	try {
	  	var bytes = CryptoJS.AES.decrypt(txt, pwd);
		plaintext = bytes.toString(CryptoJS.enc.Utf8);
	} catch(err) {
		if(onError) {onError(err);}
		return;
	}
	document.getElementById("enc_content").innerHTML = plaintext;
	document.getElementById("enc_content").style.display = "block";
   document.getElementById("enc_passwd").style.display = "none";
}
</script>
<div id="enc_content" style="display:none">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</div><div id="enc_passwd"> <input id="enc_pwd_input" type="text" style="border-radius: 5px;border-style: groove;height: 30px;width: 50%;cursor: auto;font-size: 102%;color: currentColor;outline: none;text-overflow: initial;padding-left: 5px;" onkeydown="if (event.keyCode == 13) { decrypt(); return false;}"> <input type="submit" value="解&nbsp;密" onclick="decrypt()" style="width: 58px;height: 34px;border-radius: 5px;background-color: white;border-style: solid;color: currentColor;"><div id="enc_error" style="display: inline-block;color: #d84527;margin-left: 10px"></div>
<script>
var onError = function(error) {
	document.getElementById("enc_error").innerHTML = "password error!"
};
function decrypt() {
var passwd = document.getElementById("enc_pwd_input").value;
console.log(passwd);
doDecrypt(passwd, onError);
}
</script>
</div>]]></content>
      
        <categories>
            
            <category> dailyDiary </category>
            
        </categories>
        
        
        <tags>
            
            <tag> morningDiary </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[浅谈Ract组件化]]></title>
      <url>/2017/11/09/front-end/React/Componentization/</url>
      <content type="html"><![CDATA[<p>组件开发和组件复用<br><a id="more"></a><br>定个目录明天写吧</p>
<ul>
<li>什么时候做通用组件，什么时候用高阶组件</li>
<li>组件复用到什么粒度<br>通用组件or高阶组件必然存在耦合，功能or样式的改动如何适配?<br>过于抽象得写很多无用代码<br>过细逻辑上耦合过重</li>
<li>国际化方案</li>
<li>组件样式在什么地方定义</li>
<li>业务中避免使用过多div</li>
<li>组件提供哪些props</li>
<li>组件划分到什么粒度</li>
<li>组件命名、组件文件结构?</li>
<li>工时估计，登登登登</li>
</ul>
<p>想想自己也没入错行~~~~</p>
<p>待学:<br>http协议、chrome调试()、后台<br>说好的5px，多1px、少1px都不是5px</p>
]]></content>
      
        
    </entry>
    
    <entry>
      <title><![CDATA[1109]]></title>
      <url>/2017/11/09/dailyDiary/2017/171109/</url>
      <content type="html"><![CDATA[<script src=/js/crypto-js.js></script><script>
function doDecrypt(pwd, onError) {
	console.log("in doDecrypt");
	var txt = document.getElementById("enc_content").innerHTML;
	var plantext;
	try {
	  	var bytes = CryptoJS.AES.decrypt(txt, pwd);
		plaintext = bytes.toString(CryptoJS.enc.Utf8);
	} catch(err) {
		if(onError) {onError(err);}
		return;
	}
	document.getElementById("enc_content").innerHTML = plaintext;
	document.getElementById("enc_content").style.display = "block";
   document.getElementById("enc_passwd").style.display = "none";
}
</script>
<div id="enc_content" style="display:none">U2FsdGVkX19CnbjUOyLSYVKzUi0MEGXBGozbu/aDo15v248mebuUm2TBpkpNCLRfZ/08rnJVoHgNJ8mleU1/0I/bztS4Td4gDOFqV42ZMyc43tIBS+n/aTfx5AqdiGI7AZUYC/5CofT3GsdUb4wTLtCcNWk6IDlLxl8wP0NPXdXzm4VRjXRcwkLNIUPpJIyijt4APrA+op9XWSVRUHVZ0m/5yDoj1zxYc9RmvYJZMlpLSZ506PWFaScJCNSi2HmPO1VcUKIJR9psv3V+ol1TTsflrLPRcXUKjgZTBMBC88ADfweqnGc7V6Iwh2sHlgAwF/+nEsa+Xq4HjNf/7chuQZvveDF0MJ26k88xMDGM2x6ofotWBLq1M11QCd1mWS58FYMEE7fdeJxjsJ+5uD/60b3d5qa6Bwkg/LN0ur1NY7hXsOOr/Ttvhw9yFYRRMDm7DNU0wvlUogdFK/LAsBi733pqUTYCxctr+CKIMLoRV6cqUA+H8DZCIOLGZH4cQmHxPT1h3dbfQVy/urvTHTaY9q6RkG6YezetRw8t8OKnLJlz0TruzNOMsUzmAbbi4rRzJM6r3Jps4HoOQoxH2MFCy5X9da/xisbDnTR+RGCnscimgl3Mt4uU0prIzd3h18TbPfSdvYyJxplcycRqx/m79hSemxubvg2ITxz4boa0DuOIfZ86IHjPDBUa+FIDIi7mFe5wzHCGZZBYlo4w83ZgmVFJM9IJCCYJ7KeyxkJMsvbTrlsQnjepPobEOviZtfETV4Ltp90rJLVy5CRYcxZYY79MehJ3wcJqvr0D66ob8xg4ef8+d0AMYcE5hARxLH/ssvXhvH9qPbmanN48iLbLy5x38wRHeLcZwKGPEHa3AcWfT5V+DAMFfEbLREGTzFMIz5c3ENlWTM21paYLGlbpVTpLjkWKP4nJTrCYkEMYiGHOHzATWUEZ4WE0U/mmxGxyNR9eN2+ouY/CAvwrhcx9gp1g5Qr2DLO+VEe+MP+WQrL4HziSB2pdEhui6MioHH5Xchs9cd9MwOfW54tjqgGA+bNz4QpcIJVMFc4pFY4Q0j56jJyqLViE41OxO61VMBN/eZsCuPx5SRDYGTFpPCs+NLEcs+rEVgkAwis1njJbdhEVK9V5NKQ4ZWyrN/3d8Xd4BaZQ29s/QshuGvsxrh57yjZRhUgUcMm9OIWFkouIs1hbTOmoMlqKb0Jx4tNDOH6LgvgrsS8s3wzBJGwTz3jkmmS+lX6VYPvbxSE1JyJXl06kIwMvLjJeKKlPVKquCmJhSpf9E3efRe/VK04/ppAOj5aymIQDzmSSB7B2n2Mi9e5VgRJdlaAok3HEph6z1N0x1sidVUHJ1Cbi68J3cNXQvIUFB1DHOgb2pcexiVXjjfIkMpax69XQPPbOG2boUdAw1BtfiA5KHC+sXw6TXLuT0maDuCIx82rXiPooYmBlGwmdS41hTvZsIAxcZwWd8JOaKcjOPN67JlDorBtHxG0pZ41vTiWsEuJxQnsCFUL0OscZ0Xa5tcwK5n5rhPjA6wlFFd4yyS7WcPsl+8wrOk2BXjcHOb/aiksniSYJpfseRTdtHUXftS0wXhWWnMeiY0HLXTS8WhvdY1UKcDhTtRbmIzIy+IHWXpYin/BfjdMUrIYSjeIXuoNZ+ZifawIDdcelI1jt9ijZVX3ilRzSaTAn4y9iN21H8YlUPLuHPSDqo4lpiVVBEyT6HYvKeImmYbL1mzgD8YHrCF5PsclP3RW8LQSY1VME1+TpUsAawrblkidwkRDKZXNrla8AvSWa2/B6yPrcDILsfDP2LTqiMe5h0BbsR0TI2mlkrKDFdpRxk6JVR9fpF5nrsnS/DX+bZbTM5Ozbh3xRkQ+d27pu7pnPzIHWb/Fyw+W/eqfTk24QohCEGJ/zag7mcGuL6LaotNmCy7DDint1iIh1HVvnStdc8tiBf+Zo2ep5ld69QsVNGRx0bB3rnNZrW+uHzb34rg6HrwFeMNBg5I8jI3kQ4M4hsG4K6jqvIkuLZz81JwNLbfnfGw7QbSmfdiIY5AyHISVIWbRWyeBGkDCf8ySPDhplbA==</div><div id="enc_passwd"> <input id="enc_pwd_input" type="text" style="border-radius: 5px;border-style: groove;height: 30px;width: 50%;cursor: auto;font-size: 102%;color: currentColor;outline: none;text-overflow: initial;padding-left: 5px;" onkeydown="if (event.keyCode == 13) { decrypt(); return false;}"> <input type="submit" value="解&nbsp;密" onclick="decrypt()" style="width: 58px;height: 34px;border-radius: 5px;background-color: white;border-style: solid;color: currentColor;"><div id="enc_error" style="display: inline-block;color: #d84527;margin-left: 10px"></div>
<script>
var onError = function(error) {
	document.getElementById("enc_error").innerHTML = "password error!"
};
function decrypt() {
var passwd = document.getElementById("enc_pwd_input").value;
console.log(passwd);
doDecrypt(passwd, onError);
}
</script>
</div>]]></content>
      
        <categories>
            
            <category> dailyDiary </category>
            
        </categories>
        
        
        <tags>
            
            <tag> morningDiary </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[171102]]></title>
      <url>/2017/11/02/dailyDiary/2017/171102/</url>
      <content type="html"><![CDATA[<script src=/js/crypto-js.js></script><script>
function doDecrypt(pwd, onError) {
	console.log("in doDecrypt");
	var txt = document.getElementById("enc_content").innerHTML;
	var plantext;
	try {
	  	var bytes = CryptoJS.AES.decrypt(txt, pwd);
		plaintext = bytes.toString(CryptoJS.enc.Utf8);
	} catch(err) {
		if(onError) {onError(err);}
		return;
	}
	document.getElementById("enc_content").innerHTML = plaintext;
	document.getElementById("enc_content").style.display = "block";
   document.getElementById("enc_passwd").style.display = "none";
}
</script>
<div id="enc_content" style="display:none">U2FsdGVkX18sbMsYkTHeZ63wNAodstv2PedU5yaIHA/ti/VyVIo+QDMR/2zGbW1AEbNE8HAl8p8dqqvTNtwDN6YHPpqCyiZLxP1U1XX51Vq+Ft4U5LvwJOwjXZNo+YW/oUcu9uvkh9O/cRzXmUimOOReZNVJOPanbfBFyeJz9i78aohJFFet+EitMdZSiqSrEIJoGf865QN9YaB9UFqbqcmAskvG1Uj54t5iiLDnDUd35xuWZu/Ch/8fG8xVO6tutmrB7CvXuxCrz2skE0OwCz5zLe+6fdRNeRAW6ZSGkKuaOIRQCSLFZJf3fuAbqfDnQD2LNuzKx7RVOJP67YIeWXYyS6aAAVaZpYjdcJkQKHeKtey8rf7SqP6jzrbdc0tlJGz/c7oMO6unOjFoo8X5LIzDudj/8iSJePOv6xew4AMApBZCZjti113ZIx4ovXE/1+3X6gozXd35NOQ+z3+5k6XqNIcn/dWT0FEPhsZLbNNRKFj6sRqyiYt93qgEkxffWD9ITWUHtyU+qxZuiE85GfymKZJM+aeC6u4vDCENnxqFqqJzRYs51tfqtwzzukOTGwrAIvdBFXFCgsf4n1GAE4kwD7ehIeyJTjoKctfWXgFzzKKPAWvBtW05aQN5CRjqJv5EHtF8ERKaS+oU06B5yDFoYgJtapAsJ30oVLpbJBV7vKbmef9DDn/ak7OhplAIEZozAhXzzhft56cYZLZxnuRIyEYV5cmuNhS7YJXUo/8DlUyQNLjy1KBMKcuy7aasbQNvLe11ETJ3V2UIjyikgDXtB/ufgNVlD0X9QK3ecJDprQziKH/Sng1y3NzEjxbRpTSuEaFXvjVWhJW1ajLwrZSE8uBnceVgkOFMZd0Dq27ghlpeIRMRT7AyVn3BElrGs2m7YIiiroS3jPoVtS1VZtfiuAksHwakqGW1VTzJLMui4zJ3AGtzYiLG86VrM//RuwzAtrpiMOFEeTg40ux63s/OwE6grXLGBKoUF/Kdj7DGPjm5eD1GhbV7HzKP6JiEAwU2TUulrOoSdRFJHhcNf+iRljRxgwnCejN9If9y/Qg1mG9fsxzZecUyOe8xQdbVCtl86Ck/nc6YmNy2+gRY5f/vMb0/gmt4UUTnti3vMhKbhYZzoJkjr2xjtXZbvFNeMw87qH2wMFpC+UBJEM330A/QdKNyICfi25IDXexDweIozdr5zzCjcNCDonGkGeKz7SM+4rhfcIzzLZzPaQLxZuOKYzUOsCYtPv3El6CK8BiZm8YD0SFrFjNGfyZu3nDvhnNvJPnDjnqffs2c35YZwz1vEG1gZWX0m0zj5OFau7OJKNzHEtaH5lNxlnScVEFtWQabobAfc2MbhIv2C9amFS00EmM12KOMXpic4I1HB7EyX/uDySOSraeupmiqX2gwXkFn4RdT4d/IPwrnmjG1WE5X4ipWHHVgmERSucJqT6s8ZLmpMtMvdM8V9VrZWg2oAbIa1uA5MHp6Hk3gRSHjG8TuKtFI+R7QH5ZxP+usn3aTY2lh//jyyd0Xp9h3zkWSgJzqkaN5ElO37ScBWBVtV3PJCo+QiE6SScpCOGRTovosJBKXHChv9pN17Q27kzY/bApMxEZsJs0SC+PA4pRY8oTmul6QNdzwJQB0t8irgVCVy+ykqdUmvpNwjF3ywHD6BY+LB+5tSyDSD9swkGlXQzLOjr3EDvtiuM7G0gIO3+DrteVV9hQjgI6LGJlI0izM+u/BuR1kx8GwUw+R8jIn0Xc/86ccXrBSlvW+QbhE5m5XjC9W/K+5Eco2DsbAEeAI4pJXWlDcngl+njjHu0GMvR0+SBKziwwyksEMjlDrht6845b1TYBW4nMKDKaRXKHDwOjbKcuiELQLc/H/zbtIHTHVnGZTX0TdvqBvs7i2SNupUS4UAuaCuwkUpI6Xyktb4w/unmlyuJZYD37iphNZpVkt3H6BYx9dGJh941rBYbg=</div><div id="enc_passwd"> <input id="enc_pwd_input" type="text" style="border-radius: 5px;border-style: groove;height: 30px;width: 50%;cursor: auto;font-size: 102%;color: currentColor;outline: none;text-overflow: initial;padding-left: 5px;" onkeydown="if (event.keyCode == 13) { decrypt(); return false;}"> <input type="submit" value="解&nbsp;密" onclick="decrypt()" style="width: 58px;height: 34px;border-radius: 5px;background-color: white;border-style: solid;color: currentColor;"><div id="enc_error" style="display: inline-block;color: #d84527;margin-left: 10px"></div>
<script>
var onError = function(error) {
	document.getElementById("enc_error").innerHTML = "password error!"
};
function decrypt() {
var passwd = document.getElementById("enc_pwd_input").value;
console.log(passwd);
doDecrypt(passwd, onError);
}
</script>
</div>]]></content>
      
        <categories>
            
            <category> dailyDiary </category>
            
        </categories>
        
        
        <tags>
            
            <tag> morningDiary </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[171101]]></title>
      <url>/2017/11/01/dailyDiary/2017/171101/</url>
      <content type="html"><![CDATA[<script src=/js/crypto-js.js></script><script>
function doDecrypt(pwd, onError) {
	console.log("in doDecrypt");
	var txt = document.getElementById("enc_content").innerHTML;
	var plantext;
	try {
	  	var bytes = CryptoJS.AES.decrypt(txt, pwd);
		plaintext = bytes.toString(CryptoJS.enc.Utf8);
	} catch(err) {
		if(onError) {onError(err);}
		return;
	}
	document.getElementById("enc_content").innerHTML = plaintext;
	document.getElementById("enc_content").style.display = "block";
   document.getElementById("enc_passwd").style.display = "none";
}
</script>
<div id="enc_content" style="display:none">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</div><div id="enc_passwd"> <input id="enc_pwd_input" type="text" style="border-radius: 5px;border-style: groove;height: 30px;width: 50%;cursor: auto;font-size: 102%;color: currentColor;outline: none;text-overflow: initial;padding-left: 5px;" onkeydown="if (event.keyCode == 13) { decrypt(); return false;}"> <input type="submit" value="解&nbsp;密" onclick="decrypt()" style="width: 58px;height: 34px;border-radius: 5px;background-color: white;border-style: solid;color: currentColor;"><div id="enc_error" style="display: inline-block;color: #d84527;margin-left: 10px"></div>
<script>
var onError = function(error) {
	document.getElementById("enc_error").innerHTML = "password error!"
};
function decrypt() {
var passwd = document.getElementById("enc_pwd_input").value;
console.log(passwd);
doDecrypt(passwd, onError);
}
</script>
</div>]]></content>
      
        <categories>
            
            <category> dailyDiary </category>
            
        </categories>
        
        
        <tags>
            
            <tag> morningDiary </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[171031]]></title>
      <url>/2017/10/31/dailyDiary/2017/171031/</url>
      <content type="html"><![CDATA[<script src=/js/crypto-js.js></script><script>
function doDecrypt(pwd, onError) {
	console.log("in doDecrypt");
	var txt = document.getElementById("enc_content").innerHTML;
	var plantext;
	try {
	  	var bytes = CryptoJS.AES.decrypt(txt, pwd);
		plaintext = bytes.toString(CryptoJS.enc.Utf8);
	} catch(err) {
		if(onError) {onError(err);}
		return;
	}
	document.getElementById("enc_content").innerHTML = plaintext;
	document.getElementById("enc_content").style.display = "block";
   document.getElementById("enc_passwd").style.display = "none";
}
</script>
<div id="enc_content" style="display:none">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</div><div id="enc_passwd"> <input id="enc_pwd_input" type="text" style="border-radius: 5px;border-style: groove;height: 30px;width: 50%;cursor: auto;font-size: 102%;color: currentColor;outline: none;text-overflow: initial;padding-left: 5px;" onkeydown="if (event.keyCode == 13) { decrypt(); return false;}"> <input type="submit" value="解&nbsp;密" onclick="decrypt()" style="width: 58px;height: 34px;border-radius: 5px;background-color: white;border-style: solid;color: currentColor;"><div id="enc_error" style="display: inline-block;color: #d84527;margin-left: 10px"></div>
<script>
var onError = function(error) {
	document.getElementById("enc_error").innerHTML = "password error!"
};
function decrypt() {
var passwd = document.getElementById("enc_pwd_input").value;
console.log(passwd);
doDecrypt(passwd, onError);
}
</script>
</div>]]></content>
      
        <categories>
            
            <category> dailyDiary </category>
            
        </categories>
        
        
        <tags>
            
            <tag> morningDiary </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[171030]]></title>
      <url>/2017/10/30/dailyDiary/2017/171030/</url>
      <content type="html"><![CDATA[<script src=/js/crypto-js.js></script><script>
function doDecrypt(pwd, onError) {
	console.log("in doDecrypt");
	var txt = document.getElementById("enc_content").innerHTML;
	var plantext;
	try {
	  	var bytes = CryptoJS.AES.decrypt(txt, pwd);
		plaintext = bytes.toString(CryptoJS.enc.Utf8);
	} catch(err) {
		if(onError) {onError(err);}
		return;
	}
	document.getElementById("enc_content").innerHTML = plaintext;
	document.getElementById("enc_content").style.display = "block";
   document.getElementById("enc_passwd").style.display = "none";
}
</script>
<div id="enc_content" style="display:none">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</div><div id="enc_passwd"> <input id="enc_pwd_input" type="text" style="border-radius: 5px;border-style: groove;height: 30px;width: 50%;cursor: auto;font-size: 102%;color: currentColor;outline: none;text-overflow: initial;padding-left: 5px;" onkeydown="if (event.keyCode == 13) { decrypt(); return false;}"> <input type="submit" value="解&nbsp;密" onclick="decrypt()" style="width: 58px;height: 34px;border-radius: 5px;background-color: white;border-style: solid;color: currentColor;"><div id="enc_error" style="display: inline-block;color: #d84527;margin-left: 10px"></div>
<script>
var onError = function(error) {
	document.getElementById("enc_error").innerHTML = "password error!"
};
function decrypt() {
var passwd = document.getElementById("enc_pwd_input").value;
console.log(passwd);
doDecrypt(passwd, onError);
}
</script>
</div>]]></content>
      
        <categories>
            
            <category> dailyDiary </category>
            
        </categories>
        
        
        <tags>
            
            <tag> morningDiary </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[今天的意识流]]></title>
      <url>/2017/10/29/essay/happynessof1029/</url>
      <content type="html"><![CDATA[<script src=/js/crypto-js.js></script><script>
function doDecrypt(pwd, onError) {
	console.log("in doDecrypt");
	var txt = document.getElementById("enc_content").innerHTML;
	var plantext;
	try {
	  	var bytes = CryptoJS.AES.decrypt(txt, pwd);
		plaintext = bytes.toString(CryptoJS.enc.Utf8);
	} catch(err) {
		if(onError) {onError(err);}
		return;
	}
	document.getElementById("enc_content").innerHTML = plaintext;
	document.getElementById("enc_content").style.display = "block";
   document.getElementById("enc_passwd").style.display = "none";
}
</script>
<div id="enc_content" style="display:none">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</div><div id="enc_passwd"> <input id="enc_pwd_input" type="text" style="border-radius: 5px;border-style: groove;height: 30px;width: 50%;cursor: auto;font-size: 102%;color: currentColor;outline: none;text-overflow: initial;padding-left: 5px;" onkeydown="if (event.keyCode == 13) { decrypt(); return false;}"> <input type="submit" value="解&nbsp;密" onclick="decrypt()" style="width: 58px;height: 34px;border-radius: 5px;background-color: white;border-style: solid;color: currentColor;"><div id="enc_error" style="display: inline-block;color: #d84527;margin-left: 10px"></div>
<script>
var onError = function(error) {
	document.getElementById("enc_error").innerHTML = "password error!"
};
function decrypt() {
var passwd = document.getElementById("enc_pwd_input").value;
console.log(passwd);
doDecrypt(passwd, onError);
}
</script>
</div>]]></content>
      
        
    </entry>
    
    <entry>
      <title><![CDATA[数据库常见操作]]></title>
      <url>/2017/10/29/Tec/accumulation/database/</url>
      <content type="html"><![CDATA[<p>增加(Create)、读取(Retrieve)（重新得到数据）、更新(Update)和删除(Delete)<br><a id="more"></a></p>
]]></content>
      
        
    </entry>
    
    <entry>
      <title><![CDATA[171029]]></title>
      <url>/2017/10/29/dailyDiary/2017/171029/</url>
      <content type="html"><![CDATA[<script src=/js/crypto-js.js></script><script>
function doDecrypt(pwd, onError) {
	console.log("in doDecrypt");
	var txt = document.getElementById("enc_content").innerHTML;
	var plantext;
	try {
	  	var bytes = CryptoJS.AES.decrypt(txt, pwd);
		plaintext = bytes.toString(CryptoJS.enc.Utf8);
	} catch(err) {
		if(onError) {onError(err);}
		return;
	}
	document.getElementById("enc_content").innerHTML = plaintext;
	document.getElementById("enc_content").style.display = "block";
   document.getElementById("enc_passwd").style.display = "none";
}
</script>
<div id="enc_content" style="display:none">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</div><div id="enc_passwd"> <input id="enc_pwd_input" type="text" style="border-radius: 5px;border-style: groove;height: 30px;width: 50%;cursor: auto;font-size: 102%;color: currentColor;outline: none;text-overflow: initial;padding-left: 5px;" onkeydown="if (event.keyCode == 13) { decrypt(); return false;}"> <input type="submit" value="解&nbsp;密" onclick="decrypt()" style="width: 58px;height: 34px;border-radius: 5px;background-color: white;border-style: solid;color: currentColor;"><div id="enc_error" style="display: inline-block;color: #d84527;margin-left: 10px"></div>
<script>
var onError = function(error) {
	document.getElementById("enc_error").innerHTML = "password error!"
};
function decrypt() {
var passwd = document.getElementById("enc_pwd_input").value;
console.log(passwd);
doDecrypt(passwd, onError);
}
</script>
</div>]]></content>
      
        <categories>
            
            <category> dailyDiary </category>
            
        </categories>
        
        
        <tags>
            
            <tag> morningDiary </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[171028]]></title>
      <url>/2017/10/28/dailyDiary/2017/171028/</url>
      <content type="html"><![CDATA[<script src=/js/crypto-js.js></script><script>
function doDecrypt(pwd, onError) {
	console.log("in doDecrypt");
	var txt = document.getElementById("enc_content").innerHTML;
	var plantext;
	try {
	  	var bytes = CryptoJS.AES.decrypt(txt, pwd);
		plaintext = bytes.toString(CryptoJS.enc.Utf8);
	} catch(err) {
		if(onError) {onError(err);}
		return;
	}
	document.getElementById("enc_content").innerHTML = plaintext;
	document.getElementById("enc_content").style.display = "block";
   document.getElementById("enc_passwd").style.display = "none";
}
</script>
<div id="enc_content" style="display:none">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</div><div id="enc_passwd"> <input id="enc_pwd_input" type="text" style="border-radius: 5px;border-style: groove;height: 30px;width: 50%;cursor: auto;font-size: 102%;color: currentColor;outline: none;text-overflow: initial;padding-left: 5px;" onkeydown="if (event.keyCode == 13) { decrypt(); return false;}"> <input type="submit" value="解&nbsp;密" onclick="decrypt()" style="width: 58px;height: 34px;border-radius: 5px;background-color: white;border-style: solid;color: currentColor;"><div id="enc_error" style="display: inline-block;color: #d84527;margin-left: 10px"></div>
<script>
var onError = function(error) {
	document.getElementById("enc_error").innerHTML = "password error!"
};
function decrypt() {
var passwd = document.getElementById("enc_pwd_input").value;
console.log(passwd);
doDecrypt(passwd, onError);
}
</script>
</div>]]></content>
      
        <categories>
            
            <category> dailyDiary </category>
            
        </categories>
        
        
        <tags>
            
            <tag> morningDiary </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[nodejs实现文件夹遍历输出文件列表(todo)]]></title>
      <url>/2017/10/27/Tec/nodeFile/</url>
      <content type="html"><![CDATA[<p>源码待解析<br><a id="more"></a></p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> fs = <span class="built_in">require</span>(<span class="string">"fs"</span>)</div><div class="line"><span class="keyword">const</span> docgen = <span class="built_in">require</span>(<span class="string">'react-docgen'</span>);</div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">getName</span>(<span class="params">path</span>)</span>&#123;</div><div class="line">  <span class="keyword">return</span> path.replace(<span class="regexp">/(.*\/)*([^.]+).*/ig</span>,<span class="string">"$2"</span>)</div><div class="line">&#125;</div><div class="line"><span class="comment">// 将一个文件夹解析成一个树状结构，只保留组件信息</span></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">analysisFolder</span> (<span class="params">path</span>) </span>&#123;</div><div class="line">  <span class="keyword">if</span>( !fs.existsSync(path)) &#123;</div><div class="line">    <span class="keyword">return</span> &#123;</div><div class="line">      error: <span class="string">'此文件夹不存在!!! '</span></div><div class="line">    &#125;</div><div class="line">  &#125;</div><div class="line">  <span class="keyword">const</span> s =fs.statSync(path)</div><div class="line">  <span class="keyword">if</span>(!s.isDirectory())&#123;</div><div class="line">    <span class="keyword">return</span> &#123;</div><div class="line">      error: <span class="string">'输入不是文件夹!!!'</span></div><div class="line">    &#125;</div><div class="line">  &#125;</div><div class="line">  <span class="keyword">const</span> result = &#123;</div><div class="line">    key: path,</div><div class="line">    title: getName(path),</div><div class="line">    children: [],</div><div class="line">  &#125;</div><div class="line">  <span class="keyword">const</span> files = fs.readdirSync(path)</div><div class="line">  files.forEach( <span class="function"><span class="keyword">function</span> (<span class="params">file</span>)</span>&#123;</div><div class="line">    <span class="keyword">const</span> filePath = path+<span class="string">'/'</span>+file</div><div class="line">    <span class="keyword">const</span> stats = fs.statSync(path+<span class="string">'/'</span>+file)</div><div class="line">    <span class="keyword">if</span>(stats.isDirectory()) &#123;</div><div class="line">      <span class="keyword">const</span> tmp = analysisFolder(filePath)</div><div class="line">      <span class="keyword">if</span>(tmp.children.length &gt;= <span class="number">1</span>)</div><div class="line">        result.children.push(tmp)</div><div class="line">    &#125;</div><div class="line">    <span class="comment">// 判断文件是否为js文件，若是，则进行docgen操作</span></div><div class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (stats.isFile())&#123;</div><div class="line">      <span class="keyword">var</span> re = <span class="regexp">/^.*?\.(js)x?$/</span></div><div class="line">      <span class="keyword">if</span>(file.match(re)) &#123;</div><div class="line">      <span class="comment">// console.log( path+'/'+file, 'match' );  </span></div><div class="line">      <span class="comment">// 判断是否含有组件</span></div><div class="line">      <span class="keyword">try</span> &#123;</div><div class="line">        <span class="keyword">let</span> re = docgen.parse(fs.readFileSync(path+<span class="string">'/'</span>+file))</div><div class="line">        result.children.push(&#123;</div><div class="line">          title: file,</div><div class="line">          key: path+<span class="string">'/'</span>+file,</div><div class="line">          docpath: path+<span class="string">'/'</span>+file,</div><div class="line">        &#125;)</div><div class="line">      &#125; <span class="keyword">catch</span> (error) &#123;</div><div class="line">        <span class="comment">// console.log(path+'/'+file+'不是一个组件文件')</span></div><div class="line">      &#125;</div><div class="line">    &#125;</div><div class="line">    &#125;</div><div class="line">  &#125;)</div><div class="line">  <span class="keyword">return</span> result</div><div class="line">&#125;</div><div class="line"><span class="comment">// file name :test.js</span></div><div class="line"><span class="keyword">var</span> express             = <span class="built_in">require</span>(<span class="string">'express'</span>);</div><div class="line"><span class="keyword">var</span> app                 = express();</div><div class="line"><span class="keyword">var</span> bodyParse           = <span class="built_in">require</span>(<span class="string">'body-parser'</span>)</div><div class="line"><span class="keyword">var</span> cookieParser        = <span class="built_in">require</span>(<span class="string">'cookie-parser'</span>) ;</div><div class="line">app.use(cookieParser()) ;</div><div class="line">app.use(bodyParse.urlencoded(&#123;<span class="attr">extended</span>:<span class="literal">false</span>&#125;)) ;</div><div class="line"></div><div class="line"><span class="comment">// 处理根目录的get请求</span></div><div class="line">app.get(<span class="string">'/'</span>,<span class="function"><span class="keyword">function</span>(<span class="params">req,res</span>)</span>&#123;</div><div class="line">    <span class="keyword">const</span> path=req.query.path</div><div class="line">    res.header(<span class="string">"Access-Control-Allow-Origin"</span>, <span class="string">"*"</span>)</div><div class="line">    <span class="keyword">if</span> (<span class="keyword">typeof</span> path !== <span class="string">'string'</span>)</div><div class="line">    &#123;</div><div class="line">      res.status(<span class="number">200</span>)</div><div class="line">      <span class="keyword">return</span></div><div class="line">    &#125;</div><div class="line">    <span class="keyword">const</span> re = analysisFolder(path)</div><div class="line">    res.status(<span class="number">200</span>)</div><div class="line">    res.json(&#123;</div><div class="line">      infos: re,</div><div class="line">    &#125;)</div><div class="line">&#125;)</div><div class="line"><span class="comment">// 处理根目录的get docs请求</span></div><div class="line">app.get(<span class="string">'/docs'</span>,<span class="function"><span class="keyword">function</span>(<span class="params">req,res</span>)</span>&#123;</div><div class="line">    <span class="keyword">const</span> path=req.query.path</div><div class="line">    <span class="built_in">console</span>.log(<span class="string">"获取组件doc"</span>, path)</div><div class="line">    res.header(<span class="string">"Access-Control-Allow-Origin"</span>, <span class="string">"*"</span>)</div><div class="line">    <span class="keyword">if</span> (<span class="keyword">typeof</span> path !== <span class="string">'string'</span>)&#123;</div><div class="line">      res.status(<span class="number">200</span>)</div><div class="line">      <span class="keyword">return</span></div><div class="line">    &#125;</div><div class="line">    <span class="keyword">let</span> re</div><div class="line">    <span class="keyword">try</span> &#123;</div><div class="line">      re = docgen.parse(fs.readFileSync(path))</div><div class="line">    &#125; <span class="keyword">catch</span> (error) &#123;</div><div class="line">      re = &#123;&#125;</div><div class="line">    &#125; </div><div class="line">    res.status(<span class="number">200</span>)</div><div class="line">    res.json(&#123;</div><div class="line">      docs: re,</div><div class="line">    &#125;)</div><div class="line">    <span class="comment">// res.sendfile('src/public/main.html') ;</span></div><div class="line">&#125;)</div><div class="line"></div><div class="line"><span class="comment">// 处理/login的post请求</span></div><div class="line">app.post(<span class="string">'/login'</span>,<span class="function"><span class="keyword">function</span>(<span class="params">req,res</span>)</span>&#123;</div><div class="line">    name=req.body.name ;</div><div class="line">    pwd=req.body.pwd   ;</div><div class="line">    res.status(<span class="number">200</span>).send(name+<span class="string">'--'</span>+pwd) ;</div><div class="line">&#125;);</div><div class="line"></div><div class="line"><span class="comment">// 监听3000端口</span></div><div class="line"><span class="keyword">var</span> server=app.listen(<span class="number">3000</span>) ;</div></pre></td></tr></table></figure>
<h2 id="相关正则"><a href="#相关正则" class="headerlink" title="相关正则"></a>相关正则</h2>]]></content>
      
        
    </entry>
    
    <entry>
      <title><![CDATA[node实现简单后台跨域服务]]></title>
      <url>/2017/10/27/Tec/nodejs/</url>
      <content type="html"><![CDATA[<p>为返回的header加上Access-Control-Allow-Origin即可<br><a id="more"></a></p>
<h2 id="源码"><a href="#源码" class="headerlink" title="源码"></a>源码</h2><p>res.header(“Access-Control-Allow-Origin”, “*”)<br>项目中的源码<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> fs = <span class="built_in">require</span>(<span class="string">"fs"</span>)</div><div class="line"><span class="keyword">const</span> docgen = <span class="built_in">require</span>(<span class="string">'react-docgen'</span>);</div><div class="line"><span class="comment">// file name :test.js</span></div><div class="line"><span class="keyword">var</span> express             = <span class="built_in">require</span>(<span class="string">'express'</span>);</div><div class="line"><span class="keyword">var</span> app                 = express();</div><div class="line"><span class="keyword">var</span> bodyParse           = <span class="built_in">require</span>(<span class="string">'body-parser'</span>)</div><div class="line"><span class="keyword">var</span> cookieParser        = <span class="built_in">require</span>(<span class="string">'cookie-parser'</span>) ;</div><div class="line">app.use(cookieParser()) ;</div><div class="line">app.use(bodyParse.urlencoded(&#123;<span class="attr">extended</span>:<span class="literal">false</span>&#125;)) ;</div><div class="line"></div><div class="line"><span class="comment">// 处理根目录的get请求</span></div><div class="line">app.get(<span class="string">'/'</span>,<span class="function"><span class="keyword">function</span>(<span class="params">req,res</span>)</span>&#123;</div><div class="line">    <span class="keyword">const</span> path=req.query.path</div><div class="line">    res.header(<span class="string">"Access-Control-Allow-Origin"</span>, <span class="string">"*"</span>)</div><div class="line">    <span class="keyword">if</span> (<span class="keyword">typeof</span> path !== <span class="string">'string'</span>)</div><div class="line">    &#123;</div><div class="line">      res.status(<span class="number">200</span>)</div><div class="line">      <span class="keyword">return</span></div><div class="line">    &#125;</div><div class="line">    <span class="keyword">const</span> re = analysisFolder(path)</div><div class="line">    res.status(<span class="number">200</span>)</div><div class="line">    res.json(&#123;</div><div class="line">      infos: re,</div><div class="line">    &#125;)</div><div class="line">&#125;)</div><div class="line"><span class="comment">// 处理根目录的get docs请求</span></div><div class="line">app.get(<span class="string">'/docs'</span>,<span class="function"><span class="keyword">function</span>(<span class="params">req,res</span>)</span>&#123;</div><div class="line">    <span class="keyword">const</span> path=req.query.path</div><div class="line">    <span class="built_in">console</span>.log(<span class="string">"获取组件doc"</span>, path)</div><div class="line">    res.header(<span class="string">"Access-Control-Allow-Origin"</span>, <span class="string">"*"</span>)</div><div class="line">    <span class="keyword">if</span> (<span class="keyword">typeof</span> path !== <span class="string">'string'</span>)&#123;</div><div class="line">      res.status(<span class="number">200</span>)</div><div class="line">      <span class="keyword">return</span></div><div class="line">    &#125;</div><div class="line">    <span class="keyword">let</span> re</div><div class="line">    <span class="keyword">try</span> &#123;</div><div class="line">      re = docgen.parse(fs.readFileSync(path))</div><div class="line">    &#125; <span class="keyword">catch</span> (error) &#123;</div><div class="line">      re = &#123;&#125;</div><div class="line">    &#125; </div><div class="line">    res.status(<span class="number">200</span>)</div><div class="line">    res.json(&#123;</div><div class="line">      docs: re,</div><div class="line">    &#125;)</div><div class="line">    <span class="comment">// res.sendfile('src/public/main.html') ;</span></div><div class="line">&#125;)</div><div class="line"></div><div class="line"><span class="comment">// 处理/login的post请求</span></div><div class="line">app.post(<span class="string">'/login'</span>,<span class="function"><span class="keyword">function</span>(<span class="params">req,res</span>)</span>&#123;</div><div class="line">    name=req.body.name ;</div><div class="line">    pwd=req.body.pwd   ;</div><div class="line">    res.status(<span class="number">200</span>).send(name+<span class="string">'--'</span>+pwd) ;</div><div class="line">&#125;);</div><div class="line"></div><div class="line"><span class="comment">// 监听3000端口</span></div><div class="line"><span class="keyword">var</span> server=app.listen(<span class="number">3000</span>) ;</div></pre></td></tr></table></figure></p>
]]></content>
      
        
    </entry>
    
    <entry>
      <title><![CDATA[171027]]></title>
      <url>/2017/10/27/dailyDiary/2017/171027/</url>
      <content type="html"><![CDATA[<script src=/js/crypto-js.js></script><script>
function doDecrypt(pwd, onError) {
	console.log("in doDecrypt");
	var txt = document.getElementById("enc_content").innerHTML;
	var plantext;
	try {
	  	var bytes = CryptoJS.AES.decrypt(txt, pwd);
		plaintext = bytes.toString(CryptoJS.enc.Utf8);
	} catch(err) {
		if(onError) {onError(err);}
		return;
	}
	document.getElementById("enc_content").innerHTML = plaintext;
	document.getElementById("enc_content").style.display = "block";
   document.getElementById("enc_passwd").style.display = "none";
}
</script>
<div id="enc_content" style="display:none">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</div><div id="enc_passwd"> <input id="enc_pwd_input" type="text" style="border-radius: 5px;border-style: groove;height: 30px;width: 50%;cursor: auto;font-size: 102%;color: currentColor;outline: none;text-overflow: initial;padding-left: 5px;" onkeydown="if (event.keyCode == 13) { decrypt(); return false;}"> <input type="submit" value="解&nbsp;密" onclick="decrypt()" style="width: 58px;height: 34px;border-radius: 5px;background-color: white;border-style: solid;color: currentColor;"><div id="enc_error" style="display: inline-block;color: #d84527;margin-left: 10px"></div>
<script>
var onError = function(error) {
	document.getElementById("enc_error").innerHTML = "password error!"
};
function decrypt() {
var passwd = document.getElementById("enc_pwd_input").value;
console.log(passwd);
doDecrypt(passwd, onError);
}
</script>
</div>]]></content>
      
        <categories>
            
            <category> dailyDiary </category>
            
        </categories>
        
        
        <tags>
            
            <tag> morningDiary </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[使用roadhog mock数据基础知识]]></title>
      <url>/2017/10/26/work/mock/</url>
      <content type="html"><![CDATA[<p>mock<br><a id="more"></a></p>
<h2 id="req的参数"><a href="#req的参数" class="headerlink" title="req的参数"></a>req的参数</h2><p>url代参数时:<br>  param<br>post时：<br>  body(存储参数的对象，参数数据类型会被保留)<br>get时:<br>  query(是个对象，内部的对象参数都会被转化成string)</p>
<h2 id="res返回值"><a href="#res返回值" class="headerlink" title="res返回值"></a>res返回值</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// 不带.json的话前端收不到结束信息，then后面无法执行</span></div><div class="line">res.status(<span class="number">200</span>).json(&#123;</div><div class="line">  data: <span class="string">'test'</span>,</div><div class="line">&#125;)</div></pre></td></tr></table></figure>
]]></content>
      
        
    </entry>
    
    <entry>
      <title><![CDATA[171026]]></title>
      <url>/2017/10/26/dailyDiary/2017/171026/</url>
      <content type="html"><![CDATA[<script src=/js/crypto-js.js></script><script>
function doDecrypt(pwd, onError) {
	console.log("in doDecrypt");
	var txt = document.getElementById("enc_content").innerHTML;
	var plantext;
	try {
	  	var bytes = CryptoJS.AES.decrypt(txt, pwd);
		plaintext = bytes.toString(CryptoJS.enc.Utf8);
	} catch(err) {
		if(onError) {onError(err);}
		return;
	}
	document.getElementById("enc_content").innerHTML = plaintext;
	document.getElementById("enc_content").style.display = "block";
   document.getElementById("enc_passwd").style.display = "none";
}
</script>
<div id="enc_content" style="display:none">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</div><div id="enc_passwd"> <input id="enc_pwd_input" type="text" style="border-radius: 5px;border-style: groove;height: 30px;width: 50%;cursor: auto;font-size: 102%;color: currentColor;outline: none;text-overflow: initial;padding-left: 5px;" onkeydown="if (event.keyCode == 13) { decrypt(); return false;}"> <input type="submit" value="解&nbsp;密" onclick="decrypt()" style="width: 58px;height: 34px;border-radius: 5px;background-color: white;border-style: solid;color: currentColor;"><div id="enc_error" style="display: inline-block;color: #d84527;margin-left: 10px"></div>
<script>
var onError = function(error) {
	document.getElementById("enc_error").innerHTML = "password error!"
};
function decrypt() {
var passwd = document.getElementById("enc_pwd_input").value;
console.log(passwd);
doDecrypt(passwd, onError);
}
</script>
</div>]]></content>
      
        <categories>
            
            <category> dailyDiary </category>
            
        </categories>
        
        
        <tags>
            
            <tag> morningDiary </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[171025]]></title>
      <url>/2017/10/25/dailyDiary/2017/171025/</url>
      <content type="html"><![CDATA[<script src=/js/crypto-js.js></script><script>
function doDecrypt(pwd, onError) {
	console.log("in doDecrypt");
	var txt = document.getElementById("enc_content").innerHTML;
	var plantext;
	try {
	  	var bytes = CryptoJS.AES.decrypt(txt, pwd);
		plaintext = bytes.toString(CryptoJS.enc.Utf8);
	} catch(err) {
		if(onError) {onError(err);}
		return;
	}
	document.getElementById("enc_content").innerHTML = plaintext;
	document.getElementById("enc_content").style.display = "block";
   document.getElementById("enc_passwd").style.display = "none";
}
</script>
<div id="enc_content" style="display:none">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</div><div id="enc_passwd"> <input id="enc_pwd_input" type="text" style="border-radius: 5px;border-style: groove;height: 30px;width: 50%;cursor: auto;font-size: 102%;color: currentColor;outline: none;text-overflow: initial;padding-left: 5px;" onkeydown="if (event.keyCode == 13) { decrypt(); return false;}"> <input type="submit" value="解&nbsp;密" onclick="decrypt()" style="width: 58px;height: 34px;border-radius: 5px;background-color: white;border-style: solid;color: currentColor;"><div id="enc_error" style="display: inline-block;color: #d84527;margin-left: 10px"></div>
<script>
var onError = function(error) {
	document.getElementById("enc_error").innerHTML = "password error!"
};
function decrypt() {
var passwd = document.getElementById("enc_pwd_input").value;
console.log(passwd);
doDecrypt(passwd, onError);
}
</script>
</div>]]></content>
      
        <categories>
            
            <category> dailyDiary </category>
            
        </categories>
        
        
        <tags>
            
            <tag> morningDiary </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[项目开发tips(todo)]]></title>
      <url>/2017/10/24/work/projectTip/</url>
      <content type="html"><![CDATA[<p>总结开发相关tip<br><a id="more"></a></p>
<h2 id="常用组件"><a href="#常用组件" class="headerlink" title="常用组件"></a>常用组件</h2><ol>
<li><p>questionTip<br>import QuestionTooltip from ‘../../common/Tooltip/Question’</p>
<questiontooltip tip="...">
</questiontooltip></li>
<li></li>
</ol>
<h2 id="时间设置"><a href="#时间设置" class="headerlink" title="时间设置"></a>时间设置</h2><p>使用moment库<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> moment <span class="keyword">from</span> <span class="string">'moment'</span></div><div class="line"><span class="comment">// 将YYYY-MM-DD HH:mm:ss格式的字符串转化为antd DatePicker能识别的</span></div><div class="line">moment(condition.timeRange[<span class="number">0</span>], <span class="string">'YYYY-MM-DD HH:mm:ss'</span>)</div></pre></td></tr></table></figure></p>
<ol>
<li>全局样式定义在<br>frontend\src\themes中定义，引用直接使用className=”class名”即可 </li>
</ol>
<h2 id="后台"><a href="#后台" class="headerlink" title="后台"></a>后台</h2><h3 id="GridPanel的增删改查"><a href="#GridPanel的增删改查" class="headerlink" title="GridPanel的增删改查"></a>GridPanel的增删改查</h3><p>修改api即可，注意api的query、create、update、delete后缀不可改变</p>
<pre><code class="javascript"><span class="comment">// api格式 api.js中定义，至少需要query、create、update、delete等4个url</span>
<span class="keyword">const</span> rightManagment = { <span class="attr">query</span>: <span class="string">'/systemSetting/rightsManagment/getList'</span>, <span class="attr">create</span>: <span class="string">'/systemSetting/rightsManagment/add'</span>, <span class="attr">update</span>: <span class="string">'/systemSetting/rightsManagment/setManager/:id'</span>, <span class="attr">delete</span>: <span class="string">'/systemSetting/rightsManagment/delete'</span> }
<span class="comment">// rightsManagment.js内容</span>
<span class="keyword">const</span> Mock = <span class="built_in">require</span>(<span class="string">'mockjs'</span>)
<span class="keyword">const</span> Random = Mock.Random
<span class="keyword">const</span> config = <span class="built_in">require</span>(<span class="string">'../utils/config'</span>)
<span class="keyword">const</span> { apiPrefix } = config
<span class="keyword">const</span> { rightManagment } = <span class="built_in">require</span>(<span class="string">'../utils/api'</span>)
<span class="keyword">let</span> managerList = Mock.mock({
  <span class="string">'data|80-100'</span>: [
    {
      <span class="string">'id|+1'</span>: <span class="number">1</span>,
      <span class="string">'priority|+1'</span>: <span class="number">0</span>,
      name: <span class="string">`管理员<span class="subst">${Random.name()}</span>`</span>,
      description: <span class="string">'@last'</span>,
      status: <span class="string">'@boolean'</span>,
      email: Random.email(),
      phoneNum: Random.pick([<span class="string">'123455'</span>, <span class="string">'123456'</span>]),
      type: Random.pick([<span class="string">'审核员'</span>, <span class="string">'超管'</span>]),
      rightsList: Random.pick([<span class="string">'哈哈'</span>, <span class="string">'权限'</span>]),
      userRange: Random.string(),
      ukey: Random.boolean(),
    },
  ],
}).data

<span class="keyword">const</span> NOTFOUND = {
  message: <span class="string">'Not Found'</span>,
  documentation_url: <span class="string">'http://localhost:8000/request'</span>,
}

<span class="built_in">module</span>.exports = {
  <span class="comment">// getList</span>
  [<span class="string">`GET <span class="subst">${apiPrefix}</span><span class="subst">${rightManagment.query}</span>`</span>] (req, res) {
    <span class="built_in">console</span>.log(<span class="string">'gettttt'</span>)
    <span class="keyword">if</span> (managerList) {
      res.status(<span class="number">200</span>).json({ <span class="attr">data</span>: managerList })
    } <span class="keyword">else</span> {
      res.status(<span class="number">404</span>).json(NOTFOUND)
    }
  },
  <span class="comment">// 改</span>
  [<span class="string">`PATCH <span class="subst">${apiPrefix}</span><span class="subst">${rightManagment.update}</span>`</span>] (req, res) {
    <span class="keyword">const</span> id = <span class="built_in">parseInt</span>(req.params.id, <span class="number">10</span>)
    <span class="keyword">const</span> newData = req.body
    <span class="built_in">console</span>.log(<span class="string">'update patch1'</span>, id, req.params)
    <span class="built_in">console</span>.log(newData)
    <span class="comment">// console.log(managerList)</span>
    <span class="keyword">let</span> tmpIndex
    managerList.forEach(<span class="function">(<span class="params">obj, index</span>) =&gt;</span> {
      <span class="built_in">console</span>.log(obj.id, id, obj.id === id)
      <span class="keyword">if</span> (obj.id === id) {
        tmpIndex = index
        newData.id = id
      }
    })
    <span class="keyword">if</span> (tmpIndex !== <span class="literal">undefined</span>) {
      managerList[tmpIndex] = newData
    }
    res.status(<span class="number">200</span>).end()
  },
  [<span class="string">`GET <span class="subst">${apiPrefix}</span><span class="subst">${rightManagment.update}</span>`</span>] (req, res) {
    <span class="built_in">console</span>.log(<span class="string">'update'</span>)
    <span class="keyword">const</span> { query } = req
    <span class="keyword">let</span> { newData } = query
    <span class="keyword">let</span> tmpIndex
    managerList.forEach(<span class="function">(<span class="params">obj, index</span>) =&gt;</span> {
      <span class="keyword">if</span> (obj.id === newData.id) {
        tmpIndex = index
      }
    })
    <span class="keyword">if</span> (tmpIndex !== <span class="literal">undefined</span>) {
      managerList[tmpIndex] = newData
    }
    res.status(<span class="number">200</span>).end()
  },
  <span class="comment">// 增</span>
  [<span class="string">`POST <span class="subst">${apiPrefix}</span><span class="subst">${rightManagment.create}</span>`</span>] (req, res) {
    <span class="built_in">console</span>.log(<span class="string">'update'</span>)
    <span class="keyword">const</span> newData = req.body
    <span class="built_in">console</span>.log(newData)
    <span class="keyword">if</span> (newData) {
      newData.id = managerList[managerList.length - <span class="number">1</span>].id + <span class="number">1</span>
      managerList.push(newData)
    }
    res.status(<span class="number">200</span>).end()
  },
  <span class="comment">// 删除数据</span>
  [<span class="string">`DELETE <span class="subst">${apiPrefix}</span><span class="subst">${rightManagment.<span class="keyword">delete</span>}</span>`</span>] (req, res) {
    <span class="keyword">const</span> { ids } = req.body
    <span class="built_in">console</span>.log(<span class="string">'delete data'</span>)
    <span class="comment">// const data = queryArray(database, ids, 'id')</span>
    <span class="comment">// if (data) {</span>
    managerList = managerList.filter(<span class="function"><span class="params">item</span> =&gt;</span> ids.indexOf(item.id) === <span class="number">-1</span>)
    res.status(<span class="number">204</span>).end()
    <span class="comment">// } else {</span>
      <span class="comment">// res.status(404).json(NOTFOUND)</span>
    <span class="comment">// }</span>
  },
}
</code></pre>
<p>## </p>
]]></content>
      
        
    </entry>
    
    <entry>
      <title><![CDATA[171024]]></title>
      <url>/2017/10/24/dailyDiary/2017/171024/</url>
      <content type="html"><![CDATA[<script src=/js/crypto-js.js></script><script>
function doDecrypt(pwd, onError) {
	console.log("in doDecrypt");
	var txt = document.getElementById("enc_content").innerHTML;
	var plantext;
	try {
	  	var bytes = CryptoJS.AES.decrypt(txt, pwd);
		plaintext = bytes.toString(CryptoJS.enc.Utf8);
	} catch(err) {
		if(onError) {onError(err);}
		return;
	}
	document.getElementById("enc_content").innerHTML = plaintext;
	document.getElementById("enc_content").style.display = "block";
   document.getElementById("enc_passwd").style.display = "none";
}
</script>
<div id="enc_content" style="display:none">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</div><div id="enc_passwd"> <input id="enc_pwd_input" type="text" style="border-radius: 5px;border-style: groove;height: 30px;width: 50%;cursor: auto;font-size: 102%;color: currentColor;outline: none;text-overflow: initial;padding-left: 5px;" onkeydown="if (event.keyCode == 13) { decrypt(); return false;}"> <input type="submit" value="解&nbsp;密" onclick="decrypt()" style="width: 58px;height: 34px;border-radius: 5px;background-color: white;border-style: solid;color: currentColor;"><div id="enc_error" style="display: inline-block;color: #d84527;margin-left: 10px"></div>
<script>
var onError = function(error) {
	document.getElementById("enc_error").innerHTML = "password error!"
};
function decrypt() {
var passwd = document.getElementById("enc_pwd_input").value;
console.log(passwd);
doDecrypt(passwd, onError);
}
</script>
</div>]]></content>
      
        <categories>
            
            <category> dailyDiary </category>
            
        </categories>
        
        
        <tags>
            
            <tag> morningDiary </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[antd表单验证及常用正则表达式]]></title>
      <url>/2017/10/23/front-end/React/antd/RegularExpression/</url>
      <content type="html"><![CDATA[<p>antd的表单验证用options中的rules字段实现，底层是使用的<a href="https://github.com/yiminghe/async-validator" target="_blank" rel="external">async-validator</a><br><a id="more"></a></p>
<h2 id="antd表单验证"><a href="#antd表单验证" class="headerlink" title="antd表单验证"></a>antd表单验证</h2><p>antd的表单验证用options中的rules字段实现，底层是使用的<a href="https://github.com/yiminghe/async-validator" target="_blank" rel="external">async-validator</a>  </p>
<h3 id="表单验证options示例"><a href="#表单验证options示例" class="headerlink" title="表单验证options示例"></a>表单验证options示例</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// 方法1  使用async-validator内置type验证(文内附有async-validator内置所有type)</span></div><div class="line">options: &#123;</div><div class="line">  rules: [&#123;</div><div class="line">    type: <span class="string">'email'</span>,</div><div class="line">    message: <span class="string">'请输入正确的邮箱'</span>,</div><div class="line">    required: <span class="literal">true</span> &#125;],</div><div class="line">&#125;</div><div class="line"><span class="comment">// 方法2 使用正则表达式自定义验证</span></div><div class="line"><span class="keyword">const</span> ipReg = <span class="string">'((25[0-5]|2[0-4]\\d|((1\\d&#123;2&#125;)|([1-9]?\\d)))\\.)&#123;3&#125;(25[0-5]|2[0-4]\\d|((1\\d&#123;2&#125;)|([1-9]?\\d)))'</span></div><div class="line">options: &#123;</div><div class="line">  rules: [&#123;</div><div class="line">    pattern: ipReg,</div><div class="line">    message: <span class="string">'请输入正确IP'</span>,</div><div class="line">    required: <span class="literal">true</span>,</div><div class="line">  &#125;],</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="async-validator内置type"><a href="#async-validator内置type" class="headerlink" title="async-validator内置type:"></a>async-validator内置type:</h3><blockquote>
<p>string: Must be of type string. This is the default type.<br>number: Must be of type number.<br>boolean: Must be of type boolean.<br>method: Must be of type function.<br>regexp: Must be an instance of RegExp or a string that does not generate an exception when creating a new RegExp.<br>integer: Must be of type number and an integer.<br>float: Must be of type number and a floating point number.<br>array: Must be an array as determined by Array.isArray.<br>object: Must be of type object and not Array.isArray.<br>enum: Value must exist in the enum.<br>date: Value must be valid as determined by Date<br>url: Must be of type url.<br>hex: Must be of type hex.<br>email: Must be of type email.</p>
</blockquote>
<h2 id="常用正则"><a href="#常用正则" class="headerlink" title="常用正则"></a>常用正则</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// IP:  </span></div><div class="line">    <span class="keyword">const</span> ipReg = <span class="string">'((25[0-5]|2[0-4]\\d|((1\\d&#123;2&#125;)|([1-9]?\\d)))\\.)&#123;3&#125;(25[0-5]|2[0-4]\\d|((1\\d&#123;2&#125;)|([1-9]?\\d)))'</span></div><div class="line"><span class="comment">// MAC: </span></div><div class="line">    <span class="keyword">const</span> macReg = <span class="string">'([a-fA-F0-9]&#123;2&#125;:)&#123;5&#125;([a-fA-F0-9]&#123;2&#125;)'</span></div><div class="line"><span class="comment">// email:</span></div><div class="line">    <span class="keyword">const</span> emailReg = <span class="string">'[\\d,a-z]([\\w\\.\\-]+)@([a-z0-9\\-]+).([a-z\\.]+[a-z])'</span></div></pre></td></tr></table></figure>]]></content>
      
        
    </entry>
    
    <entry>
      <title><![CDATA[171023]]></title>
      <url>/2017/10/23/dailyDiary/2017/171023/</url>
      <content type="html"><![CDATA[<script src=/js/crypto-js.js></script><script>
function doDecrypt(pwd, onError) {
	console.log("in doDecrypt");
	var txt = document.getElementById("enc_content").innerHTML;
	var plantext;
	try {
	  	var bytes = CryptoJS.AES.decrypt(txt, pwd);
		plaintext = bytes.toString(CryptoJS.enc.Utf8);
	} catch(err) {
		if(onError) {onError(err);}
		return;
	}
	document.getElementById("enc_content").innerHTML = plaintext;
	document.getElementById("enc_content").style.display = "block";
   document.getElementById("enc_passwd").style.display = "none";
}
</script>
<div id="enc_content" style="display:none">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</div><div id="enc_passwd"> <input id="enc_pwd_input" type="text" style="border-radius: 5px;border-style: groove;height: 30px;width: 50%;cursor: auto;font-size: 102%;color: currentColor;outline: none;text-overflow: initial;padding-left: 5px;" onkeydown="if (event.keyCode == 13) { decrypt(); return false;}"> <input type="submit" value="解&nbsp;密" onclick="decrypt()" style="width: 58px;height: 34px;border-radius: 5px;background-color: white;border-style: solid;color: currentColor;"><div id="enc_error" style="display: inline-block;color: #d84527;margin-left: 10px"></div>
<script>
var onError = function(error) {
	document.getElementById("enc_error").innerHTML = "password error!"
};
function decrypt() {
var passwd = document.getElementById("enc_pwd_input").value;
console.log(passwd);
doDecrypt(passwd, onError);
}
</script>
</div>]]></content>
      
        <categories>
            
            <category> dailyDiary </category>
            
        </categories>
        
        
        <tags>
            
            <tag> morningDiary </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[MVC、MVP和MVVM等软件架构]]></title>
      <url>/2017/10/21/front-end/basic/mvc/</url>
      <content type="html"><![CDATA[<script src=/js/crypto-js.js></script><script>
function doDecrypt(pwd, onError) {
	console.log("in doDecrypt");
	var txt = document.getElementById("enc_content").innerHTML;
	var plantext;
	try {
	  	var bytes = CryptoJS.AES.decrypt(txt, pwd);
		plaintext = bytes.toString(CryptoJS.enc.Utf8);
	} catch(err) {
		if(onError) {onError(err);}
		return;
	}
	document.getElementById("enc_content").innerHTML = plaintext;
	document.getElementById("enc_content").style.display = "block";
   document.getElementById("enc_passwd").style.display = "none";
}
</script>
<div id="enc_content" style="display:none">U2FsdGVkX1/GTgg2rl3zaVee0XW4YLN/8uqSKWYw/jBO86KL6QfBty0EsjUKQ9QeqrjceQEyBRVfc/HGlJZUrao8MK/dta/FwLavveSi+Cmj547qvq+RQjiOfTfSbGlhkoW7bLo4pakisHUjqarlBOtyrdiD6cNDNqcBkkFPhnmxFPvlLMWHXpCMSU/WukwuxkSt4eb8EmrdnR3PtzULp1oeOoo3aV/Fyob0ijmNj1yyNpDfJ1T5/lPBgIe8sFIo8i0t/S8+ifDrwI/GAJp13u2xad3ltM9nwdMpWGYPUvXaGaNvv1yWr7wasBgbiYv3NSYc9YGlJlz8Wad7URq95fHpf9CihwrZIG55bp7Z7egXaWiVxE8f6SeTUO7So/oJ+RA357IRHkCPodyM/yDkHeoqSzEOF5o1e8kECVUmmrIkwV+zvN5zODaW+fC7ppOfQmXQdMt+90cdHc3r1k8xtEXBwILUIGzpXlWS+7+DEdHc3qp+EdtMzGuHmpSt9nrR/1Rr0HX8LAAXb+0qKgeAmnyg5++5PEnfg47qM0AkSJznweyXBr+haLmxJiy2iiqN0+BPzTlDHm5T83pf7xPVqj6FBZaLTwkOr+SaiTqtOK2/oGy8/YzxgL/HGG8w2Gdc/og1bqZJLZC/grLYglI5BhQ9zV6IGAZtn4gXKch7vWLCnn9+J4kCWjqJA1L/Gw2vyO/mqUJHLranOXEvm2jSuAp8Cvw5oD+ptT7ZgvDAA/LYscAFlAZsFlz8F12WatEv3slbj3usZWrWJaBbF4xRsw8D/PuaMU9p4+IRPO2VnNNUAjmY/rlAqTrpyihuO8rF/R9rmC3MI4xvUNCIVQxOY8sriQ3nQRccqhsgaWZM4ANwhvTYZ98Z7spSsdAr1VpoE57dsADzUzi4ae1TfPKL9AZ0aJBjWKfW7EK2xo8y8BjHs7vRhbWy1kfQjXAiWWffVczijcHpxQDtcpbSKSTTKJdOPwjfNclhCzixO0iyHXGRaz4j9wM8BinEmg7JoXf0OSaDlDkmx8h5e4vj0YqZwxJ+WLCkom7Out4mDM/TWhM=</div><div id="enc_passwd"> <input id="enc_pwd_input" type="text" style="border-radius: 5px;border-style: groove;height: 30px;width: 50%;cursor: auto;font-size: 102%;color: currentColor;outline: none;text-overflow: initial;padding-left: 5px;" onkeydown="if (event.keyCode == 13) { decrypt(); return false;}"> <input type="submit" value="解&nbsp;密" onclick="decrypt()" style="width: 58px;height: 34px;border-radius: 5px;background-color: white;border-style: solid;color: currentColor;"><div id="enc_error" style="display: inline-block;color: #d84527;margin-left: 10px"></div>
<script>
var onError = function(error) {
	document.getElementById("enc_error").innerHTML = "password error!"
};
function decrypt() {
var passwd = document.getElementById("enc_pwd_input").value;
console.log(passwd);
doDecrypt(passwd, onError);
}
</script>
</div>]]></content>
      
        
    </entry>
    
    <entry>
      <title><![CDATA[ajax与fetch]]></title>
      <url>/2017/10/21/front-end/advance/httpRequest/</url>
      <content type="html"><![CDATA[<p>前端发起异步请求我应用得非常少，只使用过jQuery的ajax方法，没自己写过原生的异步请求。是时候做个总结了<br><a id="more"></a></p>
<h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><p><a href="http://www.jianshu.com/p/373c348737f6" target="_blank" rel="external">fetch API 和 Ajax（XMLHttpRequest）的差异</a><br><a href="https://segmentfault.com/a/1190000008950789#articleHeader58" target="_blank" rel="external">你不知道的XMLHttpRequest(大而全的ajax起源与使用介绍)</a><br><a href="https://segmentfault.com/a/1190000003810652#articleHeader1" target="_blank" rel="external">传统 Ajax 已死，Fetch 永生</a></p>
<h2 id="概念"><a href="#概念" class="headerlink" title="概念"></a>概念</h2><p>ajax: Asynchronous JavaScript and XML（异步JavaScript与XML技术），指的是一套综合了多项技术的浏览器端网页开发技术</p>
<h2 id="先用起来"><a href="#先用起来" class="headerlink" title="先用起来"></a>先用起来</h2><h3 id="ajax"><a href="#ajax" class="headerlink" title="ajax"></a>ajax</h3><p>使用示例: mockjs返回的dataA的格式为:</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">const</span> dataA = $.ajax(&#123;</div><div class="line">  url: <span class="string">'/index'</span>,</div><div class="line">  dataType: <span class="string">'json'</span>, </div><div class="line">  data: <span class="string">'ajax请求'</span>,</div><div class="line">  type:<span class="string">"POST"</span>,</div><div class="line">  success: <span class="function"><span class="keyword">function</span>(<span class="params">data</span>) </span>&#123;</div><div class="line">      <span class="comment">// 此处的data就是dataA.response的值</span></div><div class="line">      <span class="built_in">console</span>.log(<span class="string">'ajax success，返回值:\n'</span>, data)</div><div class="line">  &#125;</div><div class="line">&#125;)</div></pre></td></tr></table></figure>
<h3 id="fetch"><a href="#fetch" class="headerlink" title="fetch"></a>fetch</h3><h2 id="前端跨域"><a href="#前端跨域" class="headerlink" title="前端跨域"></a>前端跨域</h2><p><a href="http://www.cnblogs.com/dowinning/archive/2012/04/19/json-jsonp-jquery.html" target="_blank" rel="external">ajax与jsonp(好文章认证)</a></p>
<h2 id="fetch、axios、promise"><a href="#fetch、axios、promise" class="headerlink" title="fetch、axios、promise"></a>fetch、axios、promise</h2><h3 id="Promise"><a href="#Promise" class="headerlink" title="Promise"></a>Promise</h3><p>ES6的一个全新函数</p>
<h3 id="fetch-1"><a href="#fetch-1" class="headerlink" title="fetch"></a>fetch</h3><p>XMLHttpRequest的最新替代技术<br>Fetch API 基于Promise设计<br>Fetch API提供了一个fetch()方法，它被定义在BOM的window对象中，你可以用它来发起对远程资源的请求。 该方法返回的是一个Promise对象，让你能够对请求的返回结果进行检索。</p>
<h3 id="axios"><a href="#axios" class="headerlink" title="axios"></a>axios</h3><p><a href="https://www.kancloud.cn/yunye/axios/234845" target="_blank" rel="external">axios使用文档中文</a></p>
<blockquote>
<p>Axios 是一个基于 promise 的 HTTP 库，可以用在浏览器和 node.js 中。</p>
</blockquote>
]]></content>
      
        
        <tags>
            
            <tag> Front-end </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[171021]]></title>
      <url>/2017/10/21/dailyDiary/2017/171021/</url>
      <content type="html"><![CDATA[<script src=/js/crypto-js.js></script><script>
function doDecrypt(pwd, onError) {
	console.log("in doDecrypt");
	var txt = document.getElementById("enc_content").innerHTML;
	var plantext;
	try {
	  	var bytes = CryptoJS.AES.decrypt(txt, pwd);
		plaintext = bytes.toString(CryptoJS.enc.Utf8);
	} catch(err) {
		if(onError) {onError(err);}
		return;
	}
	document.getElementById("enc_content").innerHTML = plaintext;
	document.getElementById("enc_content").style.display = "block";
   document.getElementById("enc_passwd").style.display = "none";
}
</script>
<div id="enc_content" style="display:none">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</div><div id="enc_passwd"> <input id="enc_pwd_input" type="text" style="border-radius: 5px;border-style: groove;height: 30px;width: 50%;cursor: auto;font-size: 102%;color: currentColor;outline: none;text-overflow: initial;padding-left: 5px;" onkeydown="if (event.keyCode == 13) { decrypt(); return false;}"> <input type="submit" value="解&nbsp;密" onclick="decrypt()" style="width: 58px;height: 34px;border-radius: 5px;background-color: white;border-style: solid;color: currentColor;"><div id="enc_error" style="display: inline-block;color: #d84527;margin-left: 10px"></div>
<script>
var onError = function(error) {
	document.getElementById("enc_error").innerHTML = "password error!"
};
function decrypt() {
var passwd = document.getElementById("enc_pwd_input").value;
console.log(passwd);
doDecrypt(passwd, onError);
}
</script>
</div>]]></content>
      
        <categories>
            
            <category> dailyDiary </category>
            
        </categories>
        
        
        <tags>
            
            <tag> morningDiary </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[接下来做什么]]></title>
      <url>/2017/10/20/dailyDiary/2017/Todo/</url>
      <content type="html"><![CDATA[<script src=/js/crypto-js.js></script><script>
function doDecrypt(pwd, onError) {
	console.log("in doDecrypt");
	var txt = document.getElementById("enc_content").innerHTML;
	var plantext;
	try {
	  	var bytes = CryptoJS.AES.decrypt(txt, pwd);
		plaintext = bytes.toString(CryptoJS.enc.Utf8);
	} catch(err) {
		if(onError) {onError(err);}
		return;
	}
	document.getElementById("enc_content").innerHTML = plaintext;
	document.getElementById("enc_content").style.display = "block";
   document.getElementById("enc_passwd").style.display = "none";
}
</script>
<div id="enc_content" style="display:none">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</div><div id="enc_passwd"> <input id="enc_pwd_input" type="text" style="border-radius: 5px;border-style: groove;height: 30px;width: 50%;cursor: auto;font-size: 102%;color: currentColor;outline: none;text-overflow: initial;padding-left: 5px;" onkeydown="if (event.keyCode == 13) { decrypt(); return false;}"> <input type="submit" value="解&nbsp;密" onclick="decrypt()" style="width: 58px;height: 34px;border-radius: 5px;background-color: white;border-style: solid;color: currentColor;"><div id="enc_error" style="display: inline-block;color: #d84527;margin-left: 10px"></div>
<script>
var onError = function(error) {
	document.getElementById("enc_error").innerHTML = "password error!"
};
function decrypt() {
var passwd = document.getElementById("enc_pwd_input").value;
console.log(passwd);
doDecrypt(passwd, onError);
}
</script>
</div>]]></content>
      
        
    </entry>
    
    <entry>
      <title><![CDATA[171020]]></title>
      <url>/2017/10/20/dailyDiary/2017/171020/</url>
      <content type="html"><![CDATA[<script src=/js/crypto-js.js></script><script>
function doDecrypt(pwd, onError) {
	console.log("in doDecrypt");
	var txt = document.getElementById("enc_content").innerHTML;
	var plantext;
	try {
	  	var bytes = CryptoJS.AES.decrypt(txt, pwd);
		plaintext = bytes.toString(CryptoJS.enc.Utf8);
	} catch(err) {
		if(onError) {onError(err);}
		return;
	}
	document.getElementById("enc_content").innerHTML = plaintext;
	document.getElementById("enc_content").style.display = "block";
   document.getElementById("enc_passwd").style.display = "none";
}
</script>
<div id="enc_content" style="display:none">U2FsdGVkX19RP8PLpsDUAmosGzb5PFtbSDDQnpzON8axH9PSXmsLstekx9964nKC9riFjnVNwwXCQOE7lId/enRqAR7MmP2M2qqsEoSYMxYfwcpdnupDWeq+VGb8UhljEWco7GmsG2icr2SsMl0eLymdKq+sDIxphL0YhVeg7G7EuCOxr4MeWN/LG6RYnHJnp7Il62uLs8GxT1kLL8yja3WlDI0Rw0U8E1Kfgw4kkyWFQPtANXVIOXgxy4fofpe5EW6KUGhhJQBMJ/llh3jlyVD7VsUEpJzJUixl2MaqtiR4+KcxQyhouBTIN1/CxEITBcYEsP/1LnREEhczfi4iSQ2QTUT1Q/HVEEokVUiZt+SZzcM6IyILKawX6aDcAKyaKZuKw1Y20znVcWgS7MH9D8hzG1mvvJWYFz1Suse4xw7LZHZ1mbPWkQGsVUN85I5OcE3QcY5g4npyQ++bdKzOWP7xnop+YqRkjeZmOJOi4itDkPObF9YB5hzP0JJG9vyf52Q5vs+rPV6Mf7HEYoLdJcT7jP83RHOHUxNJHj//J/NIY+3fOE0sQYTdp9UROuz9egDTYOLsicQGZGlnkecnigvjOscmOzYyYZcA7xaqesTSSucvprlgA+6jwqSy/TZ2KM42FIv8WN7KMJa0gFZTJZpBANH9uINhxjJKD/B7yieTYhB8RNprfoLVy7k9pr6qgsfOoZwT890I9Zfv9DhnwrGw5l1AT5jbI3i0Q5O7l984Yn3oNdUsM6Tpw23xwseInXJvPOePC2jKay7ELzxQEnvRzvZ39+9szxNmllWkY77MKaHLtlePrd4EqquAze803nHU6MmIWiSO9GYQr1hKwQtbhunatyh3HKqoNDsmlT/E/5LP4MNSM3WMPjYWB0hbZwpCwx7vQowA4+P3puqngrNI/NLZc7B3qBeiAgsjJ2i+uOnuZ1BcGYR+hI4cnJbQ7zxWG+eSIGNmy5mgiP6ME+9dOuI3j7PNKjSklApepZ6Z2Kp2lb3nWFmVWkTaqYEMzw5qYhmS4lTaP+HnayZWk0hvm2XhSW/hsXBs9M/nCuVKIUlRHgtsUs4zHkozli1fZ53JR0PZqv06c0LrRgaGrTK77o8IUmplZzoWn1AKKVPP1dkDxyVGl90NEfee9OhTXdJUVc+av41qS+PYaScFwGN0DeUm+8QNL1B5mprSZpHXwc5UBkpQJBL7cfzFbpLzzr558K1iA56E/P7p6SdFuHQ+xRppG4JBBwyojeDWtry9FwemdpX4quaEJIhhqWuQu3e38nUOEHEvObpZKXfOwgM0v3B52chkdCXswc2FP/BULBvqayGVxcinTMeCsNVkOdwQf6g1+89nui7fQkK0OY2tBoVGVIH3E6XKvxCprVPtkS0UsSH75IukaezqcM3am3nAIwa4xg6tsXBBFiJZySNBKF1spj5CqTikslkqMireHFLY6Gf4Z5nAHyASp+DzzucI4YvEi7xJ0pJ5ym/HO6C2/dY2B41K8uZ3XzGpXf+h53NGcy1nYU9ZTI0eQ9BdolWwb4BdRe6jmWkcOR0AOdUaBSSZaRm53R8DKHPAYDgksnnR0YyuL/z5IVPH3/xlbiq8FRVZJMVbUrKA2LxFC7o/SImNlW80KPojLONmGSvhEZAbK1SFKGQvQ7AneOg7qufsZBi+vN0nLYnESaMBH1eKeHa74V0s+SnRqgL2dqVuh++0RQSKf87rFeEH59H0eMHcvhm9Lf99rnDnNK0jZH5T8iP0WV5g5EryW5WSWH3Gx8rpDZmIxs4LDnVEgAmM+ydG9ocd0BwGAww1k8o6y1Zn2x32vkxO4qDP9iqBNfSzy22qPpTiUhNcEnd+M25e/wSTyKFRcxNid7p4SLXKn9IObNMYFln5hFmNsho8f1MKWvWcBAoLJMRxE1jJFa5DUAOt6dWLVau8IV8qbcHbtEBkv/YmmVXJeExFi0J2Q3/57J/R0CmH7gUGlMR0fw8e429YTLTOw+Bu/ASrBX3lrLCzuQOtlmJZDnHbor6gLncUiZN8cUI9UJuGyUHahicp+3kNmJGONu7Qz14atD16n4TixiTmfGwQDWS0sZBnZJMsBDvSNg2ewMuuvVCTkOYSECKVOIdgMIavA5BNsH1TGwW8ZzUPXTgNR1fuTdN/JxEEXGs6sgM/seZOsawRV7uC11nDXg2juWkVj/Q49DIg9+erO9waz+xb6kJFTefISiuZw6F3MEv3S9X7zGm7CFW+gpN2afKRHM5gYDW1GG5kuFe8PjU7ETr5g8OLWsQDkmz3yM1DdpVCTbR0Tg603Lgii7OwY06KGFFfqtNYRsTEfmzyj7OZpc697MpU+lBqL/iyXHjUvP3IyCeYM4az2HG4x7IgAo1uOIc5sND9NCAip878WPUqtEx8PQx2tZMNRzK6kWXf1aOtAR2C3vvm7CyakydcTEPNkKfURf51Xpi+5JvbeS0V16A8e4y8yXonwCQ8FDSLHrHfHdQld+ZddqtkdxqQtqA/ff4uWTa31aBcQm4a4Pwpr7e2q9booCci6gUuu6g27ioQrrHhMWM9QpsCgr/F+Y4JMLX5OP4Xy013xNijFZmjadlNRrQDAc9sXP9Oca97MNrDZFwfjgOnkRYSToge4MGliBb1KR5ydsFuGyED0Y9ak8paCCZ5DCNNke6om72iunZWQWuhAd/ZW0xSnvNJdJwx4L0sE7e0lzoTly9S0Ujee2d+aBBYGJqNQB41y/61bvvE7XYLyUxg7FgO3EsfHAB7IhvZMTx1gO7lNSedo0aazyI0/T1Vag6dz/CJbL+9jWffc3VLwhuPjZYi+khTfACInajfypn9AYkM25JTgcAFZk1/otJ6ZxmM9m4idYi4FlhA2wFh/K9gLeyEOsYihq6btQ04pHXtd4pCrLOlIfScWjrbZ01lQcbGDchVRbOXx9enr2nNL3leAutuxqCBMeUZVyVO4uR4a/l75gEA/IY/Gpe+lQ/iXtYdlafR+byB0mUSfhznIVggrZgSWBul3/HCvg+hGY+grfpp34LLEcYD6Ns1KBKR/71EaX+uyW59HTsCMG5+WfRy5ki35vA++QMA934RJylikvHYTrCjSvRJ9v2RgQxyXMzVE2MRoCCg1K+S0Pm1NTaOuRl4</div><div id="enc_passwd"> <input id="enc_pwd_input" type="text" style="border-radius: 5px;border-style: groove;height: 30px;width: 50%;cursor: auto;font-size: 102%;color: currentColor;outline: none;text-overflow: initial;padding-left: 5px;" onkeydown="if (event.keyCode == 13) { decrypt(); return false;}"> <input type="submit" value="解&nbsp;密" onclick="decrypt()" style="width: 58px;height: 34px;border-radius: 5px;background-color: white;border-style: solid;color: currentColor;"><div id="enc_error" style="display: inline-block;color: #d84527;margin-left: 10px"></div>
<script>
var onError = function(error) {
	document.getElementById("enc_error").innerHTML = "password error!"
};
function decrypt() {
var passwd = document.getElementById("enc_pwd_input").value;
console.log(passwd);
doDecrypt(passwd, onError);
}
</script>
</div>]]></content>
      
        <categories>
            
            <category> dailyDiary </category>
            
        </categories>
        
        
        <tags>
            
            <tag> morningDiary </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[171019]]></title>
      <url>/2017/10/19/dailyDiary/2017/171019/</url>
      <content type="html"><![CDATA[<script src=/js/crypto-js.js></script><script>
function doDecrypt(pwd, onError) {
	console.log("in doDecrypt");
	var txt = document.getElementById("enc_content").innerHTML;
	var plantext;
	try {
	  	var bytes = CryptoJS.AES.decrypt(txt, pwd);
		plaintext = bytes.toString(CryptoJS.enc.Utf8);
	} catch(err) {
		if(onError) {onError(err);}
		return;
	}
	document.getElementById("enc_content").innerHTML = plaintext;
	document.getElementById("enc_content").style.display = "block";
   document.getElementById("enc_passwd").style.display = "none";
}
</script>
<div id="enc_content" style="display:none">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</div><div id="enc_passwd"> <input id="enc_pwd_input" type="text" style="border-radius: 5px;border-style: groove;height: 30px;width: 50%;cursor: auto;font-size: 102%;color: currentColor;outline: none;text-overflow: initial;padding-left: 5px;" onkeydown="if (event.keyCode == 13) { decrypt(); return false;}"> <input type="submit" value="解&nbsp;密" onclick="decrypt()" style="width: 58px;height: 34px;border-radius: 5px;background-color: white;border-style: solid;color: currentColor;"><div id="enc_error" style="display: inline-block;color: #d84527;margin-left: 10px"></div>
<script>
var onError = function(error) {
	document.getElementById("enc_error").innerHTML = "password error!"
};
function decrypt() {
var passwd = document.getElementById("enc_pwd_input").value;
console.log(passwd);
doDecrypt(passwd, onError);
}
</script>
</div>]]></content>
      
        <categories>
            
            <category> dailyDiary </category>
            
        </categories>
        
        
        <tags>
            
            <tag> morningDiary </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[171018]]></title>
      <url>/2017/10/18/dailyDiary/2017/171018/</url>
      <content type="html"><![CDATA[<script src=/js/crypto-js.js></script><script>
function doDecrypt(pwd, onError) {
	console.log("in doDecrypt");
	var txt = document.getElementById("enc_content").innerHTML;
	var plantext;
	try {
	  	var bytes = CryptoJS.AES.decrypt(txt, pwd);
		plaintext = bytes.toString(CryptoJS.enc.Utf8);
	} catch(err) {
		if(onError) {onError(err);}
		return;
	}
	document.getElementById("enc_content").innerHTML = plaintext;
	document.getElementById("enc_content").style.display = "block";
   document.getElementById("enc_passwd").style.display = "none";
}
</script>
<div id="enc_content" style="display:none">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</div><div id="enc_passwd"> <input id="enc_pwd_input" type="text" style="border-radius: 5px;border-style: groove;height: 30px;width: 50%;cursor: auto;font-size: 102%;color: currentColor;outline: none;text-overflow: initial;padding-left: 5px;" onkeydown="if (event.keyCode == 13) { decrypt(); return false;}"> <input type="submit" value="解&nbsp;密" onclick="decrypt()" style="width: 58px;height: 34px;border-radius: 5px;background-color: white;border-style: solid;color: currentColor;"><div id="enc_error" style="display: inline-block;color: #d84527;margin-left: 10px"></div>
<script>
var onError = function(error) {
	document.getElementById("enc_error").innerHTML = "password error!"
};
function decrypt() {
var passwd = document.getElementById("enc_pwd_input").value;
console.log(passwd);
doDecrypt(passwd, onError);
}
</script>
</div>]]></content>
      
        <categories>
            
            <category> dailyDiary </category>
            
        </categories>
        
        
        <tags>
            
            <tag> morningDiary </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[171017]]></title>
      <url>/2017/10/17/dailyDiary/2017/171017/</url>
      <content type="html"><![CDATA[<script src=/js/crypto-js.js></script><script>
function doDecrypt(pwd, onError) {
	console.log("in doDecrypt");
	var txt = document.getElementById("enc_content").innerHTML;
	var plantext;
	try {
	  	var bytes = CryptoJS.AES.decrypt(txt, pwd);
		plaintext = bytes.toString(CryptoJS.enc.Utf8);
	} catch(err) {
		if(onError) {onError(err);}
		return;
	}
	document.getElementById("enc_content").innerHTML = plaintext;
	document.getElementById("enc_content").style.display = "block";
   document.getElementById("enc_passwd").style.display = "none";
}
</script>
<div id="enc_content" style="display:none">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</div><div id="enc_passwd"> <input id="enc_pwd_input" type="text" style="border-radius: 5px;border-style: groove;height: 30px;width: 50%;cursor: auto;font-size: 102%;color: currentColor;outline: none;text-overflow: initial;padding-left: 5px;" onkeydown="if (event.keyCode == 13) { decrypt(); return false;}"> <input type="submit" value="解&nbsp;密" onclick="decrypt()" style="width: 58px;height: 34px;border-radius: 5px;background-color: white;border-style: solid;color: currentColor;"><div id="enc_error" style="display: inline-block;color: #d84527;margin-left: 10px"></div>
<script>
var onError = function(error) {
	document.getElementById("enc_error").innerHTML = "password error!"
};
function decrypt() {
var passwd = document.getElementById("enc_pwd_input").value;
console.log(passwd);
doDecrypt(passwd, onError);
}
</script>
</div>]]></content>
      
        <categories>
            
            <category> dailyDiary </category>
            
        </categories>
        
        
        <tags>
            
            <tag> morningDiary </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[171016]]></title>
      <url>/2017/10/16/dailyDiary/2017/171016/</url>
      <content type="html"><![CDATA[<script src=/js/crypto-js.js></script><script>
function doDecrypt(pwd, onError) {
	console.log("in doDecrypt");
	var txt = document.getElementById("enc_content").innerHTML;
	var plantext;
	try {
	  	var bytes = CryptoJS.AES.decrypt(txt, pwd);
		plaintext = bytes.toString(CryptoJS.enc.Utf8);
	} catch(err) {
		if(onError) {onError(err);}
		return;
	}
	document.getElementById("enc_content").innerHTML = plaintext;
	document.getElementById("enc_content").style.display = "block";
   document.getElementById("enc_passwd").style.display = "none";
}
</script>
<div id="enc_content" style="display:none">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</div><div id="enc_passwd"> <input id="enc_pwd_input" type="text" style="border-radius: 5px;border-style: groove;height: 30px;width: 50%;cursor: auto;font-size: 102%;color: currentColor;outline: none;text-overflow: initial;padding-left: 5px;" onkeydown="if (event.keyCode == 13) { decrypt(); return false;}"> <input type="submit" value="解&nbsp;密" onclick="decrypt()" style="width: 58px;height: 34px;border-radius: 5px;background-color: white;border-style: solid;color: currentColor;"><div id="enc_error" style="display: inline-block;color: #d84527;margin-left: 10px"></div>
<script>
var onError = function(error) {
	document.getElementById("enc_error").innerHTML = "password error!"
};
function decrypt() {
var passwd = document.getElementById("enc_pwd_input").value;
console.log(passwd);
doDecrypt(passwd, onError);
}
</script>
</div>]]></content>
      
        <categories>
            
            <category> dailyDiary </category>
            
        </categories>
        
        
        <tags>
            
            <tag> morningDiary </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[171013]]></title>
      <url>/2017/10/13/dailyDiary/2017/171013/</url>
      <content type="html"><![CDATA[<script src=/js/crypto-js.js></script><script>
function doDecrypt(pwd, onError) {
	console.log("in doDecrypt");
	var txt = document.getElementById("enc_content").innerHTML;
	var plantext;
	try {
	  	var bytes = CryptoJS.AES.decrypt(txt, pwd);
		plaintext = bytes.toString(CryptoJS.enc.Utf8);
	} catch(err) {
		if(onError) {onError(err);}
		return;
	}
	document.getElementById("enc_content").innerHTML = plaintext;
	document.getElementById("enc_content").style.display = "block";
   document.getElementById("enc_passwd").style.display = "none";
}
</script>
<div id="enc_content" style="display:none">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</div><div id="enc_passwd"> <input id="enc_pwd_input" type="text" style="border-radius: 5px;border-style: groove;height: 30px;width: 50%;cursor: auto;font-size: 102%;color: currentColor;outline: none;text-overflow: initial;padding-left: 5px;" onkeydown="if (event.keyCode == 13) { decrypt(); return false;}"> <input type="submit" value="解&nbsp;密" onclick="decrypt()" style="width: 58px;height: 34px;border-radius: 5px;background-color: white;border-style: solid;color: currentColor;"><div id="enc_error" style="display: inline-block;color: #d84527;margin-left: 10px"></div>
<script>
var onError = function(error) {
	document.getElementById("enc_error").innerHTML = "password error!"
};
function decrypt() {
var passwd = document.getElementById("enc_pwd_input").value;
console.log(passwd);
doDecrypt(passwd, onError);
}
</script>
</div>]]></content>
      
        <categories>
            
            <category> dailyDiary </category>
            
        </categories>
        
        
        <tags>
            
            <tag> morningDiary </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[171012]]></title>
      <url>/2017/10/12/dailyDiary/2017/171012/</url>
      <content type="html"><![CDATA[<script src=/js/crypto-js.js></script><script>
function doDecrypt(pwd, onError) {
	console.log("in doDecrypt");
	var txt = document.getElementById("enc_content").innerHTML;
	var plantext;
	try {
	  	var bytes = CryptoJS.AES.decrypt(txt, pwd);
		plaintext = bytes.toString(CryptoJS.enc.Utf8);
	} catch(err) {
		if(onError) {onError(err);}
		return;
	}
	document.getElementById("enc_content").innerHTML = plaintext;
	document.getElementById("enc_content").style.display = "block";
   document.getElementById("enc_passwd").style.display = "none";
}
</script>
<div id="enc_content" style="display:none">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</div><div id="enc_passwd"> <input id="enc_pwd_input" type="text" style="border-radius: 5px;border-style: groove;height: 30px;width: 50%;cursor: auto;font-size: 102%;color: currentColor;outline: none;text-overflow: initial;padding-left: 5px;" onkeydown="if (event.keyCode == 13) { decrypt(); return false;}"> <input type="submit" value="解&nbsp;密" onclick="decrypt()" style="width: 58px;height: 34px;border-radius: 5px;background-color: white;border-style: solid;color: currentColor;"><div id="enc_error" style="display: inline-block;color: #d84527;margin-left: 10px"></div>
<script>
var onError = function(error) {
	document.getElementById("enc_error").innerHTML = "password error!"
};
function decrypt() {
var passwd = document.getElementById("enc_pwd_input").value;
console.log(passwd);
doDecrypt(passwd, onError);
}
</script>
</div>]]></content>
      
        <categories>
            
            <category> dailyDiary </category>
            
        </categories>
        
        
        <tags>
            
            <tag> morningDiary </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[使用svnstate统计svn代码量]]></title>
      <url>/2017/10/11/Tec/svn/svncodeanalysis/</url>
      <content type="html"><![CDATA[<p><a href="https://jingyan.baidu.com/article/6fb756eca4696b241858fbb8.html" target="_blank" rel="external">如何用StatSVN统计SVN服务器某项目的代码量</a><br><a id="more"></a><br>具体步骤直接参考上面百度经验<br>一些tips:</p>
<ol>
<li>Apache-Subversion-1.9.7找一个地方解压，bin路径也写到环境变量里边，这样cmd下可以直接使用svn命令</li>
<li>svn按需下载，代码按需分析相应文件夹</li>
</ol>
]]></content>
      
        <categories>
            
            <category> Tec </category>
            
            <category> Svn </category>
            
        </categories>
        
        
        <tags>
            
            <tag> svn </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[171011]]></title>
      <url>/2017/10/11/dailyDiary/2017/171011/</url>
      <content type="html"><![CDATA[<script src=/js/crypto-js.js></script><script>
function doDecrypt(pwd, onError) {
	console.log("in doDecrypt");
	var txt = document.getElementById("enc_content").innerHTML;
	var plantext;
	try {
	  	var bytes = CryptoJS.AES.decrypt(txt, pwd);
		plaintext = bytes.toString(CryptoJS.enc.Utf8);
	} catch(err) {
		if(onError) {onError(err);}
		return;
	}
	document.getElementById("enc_content").innerHTML = plaintext;
	document.getElementById("enc_content").style.display = "block";
   document.getElementById("enc_passwd").style.display = "none";
}
</script>
<div id="enc_content" style="display:none">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</div><div id="enc_passwd"> <input id="enc_pwd_input" type="text" style="border-radius: 5px;border-style: groove;height: 30px;width: 50%;cursor: auto;font-size: 102%;color: currentColor;outline: none;text-overflow: initial;padding-left: 5px;" onkeydown="if (event.keyCode == 13) { decrypt(); return false;}"> <input type="submit" value="解&nbsp;密" onclick="decrypt()" style="width: 58px;height: 34px;border-radius: 5px;background-color: white;border-style: solid;color: currentColor;"><div id="enc_error" style="display: inline-block;color: #d84527;margin-left: 10px"></div>
<script>
var onError = function(error) {
	document.getElementById("enc_error").innerHTML = "password error!"
};
function decrypt() {
var passwd = document.getElementById("enc_pwd_input").value;
console.log(passwd);
doDecrypt(passwd, onError);
}
</script>
</div>]]></content>
      
        <categories>
            
            <category> dailyDiary </category>
            
        </categories>
        
        
        <tags>
            
            <tag> morningDiary </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[总有那么些事情]]></title>
      <url>/2017/10/10/essay/something/</url>
      <content type="html"><![CDATA[<script src=/js/crypto-js.js></script><script>
function doDecrypt(pwd, onError) {
	console.log("in doDecrypt");
	var txt = document.getElementById("enc_content").innerHTML;
	var plantext;
	try {
	  	var bytes = CryptoJS.AES.decrypt(txt, pwd);
		plaintext = bytes.toString(CryptoJS.enc.Utf8);
	} catch(err) {
		if(onError) {onError(err);}
		return;
	}
	document.getElementById("enc_content").innerHTML = plaintext;
	document.getElementById("enc_content").style.display = "block";
   document.getElementById("enc_passwd").style.display = "none";
}
</script>
<div id="enc_content" style="display:none">U2FsdGVkX19l/Z1PniRJAOjiuegPwqM6sKGwwAWI3FaInZjNzBjTX4BY9/SS8tI8ZRqQJAn0LjoiOdtRBg+pq07G90AIENvOqbSKhpVxqqFWqsJkaIbWxQ+IPE8JOgbpsWx9bMXFrQkybCaMzcVD7sEDrWBLG5WAFYS2nKu55hRmwsISbZqnv2Gl/N+OU745mTa+0+nhiuDYi5QC+aM7ffLP2EmlFoXTRoKi95kXwr76l1RDUVQuV8xB6KJQIQMKJMgTxHGXv9EB46Y3t8cVUTL4T0EshyHZaII6owwPsig+mHhVevGsi3t/o1BhXIsjvGYfjZeJVtbfOZHCwh0dXxyTb9B+s77v0I36xEM27WDkerfewh5Gtjn9paotb79c/QlxY9NoruiwOF/yNOLS/HBfl+QNbdObbnGO7Duwsn8GGwx/5FvRlRX1LqnA2p+MLBQYWE2CD8WCEvT9iojA7AgIhv5zO8rlTeIO7W5m8cZRgxJEkdXazbXLE3m8vKfgihTvh7wTvTiwzO/xoGl/CDbJUoR4cwOW+aRqifT5y11C4z7qbhXAQ9CMX+dc1+DhaEg9mm2EB5Qi9G6q5tmZB+2IZoFtEJdkKksJUo9Hfyb5NvgRB2eLf0Fvva6Nd1oAaHnoAV3vJYmhiTNSNjqbq7j9UgeRpb1Wvd0AmyBCiynjATMgj6RniPHqt9a53QnqzCtkF0bAHDtTp9XhfB0xYsTkJDJFr/cj4w8n940k4oF+VHiTOAZ5XV3gSOzFs+4SY7TjsZkohYZsjw+wiYGWredsQR50dYw7WdqxakQh1nbVyMWqROVUR6lpQXyosJN2jz5Ebbtb2Y1xsWw106tJOloirwlnUcBFZcQlEToJjqMDU53f7SEgrMvn+8tfWWaMEO/thDYuIKIHsYBxW9gIvHQVgqULWpbmc+xHMG82DJ4funfKSmEclYBLNl3lilu2MSlXNbNUDG+/dWGcVESNf5S9cCULsqeRGXe6rfHnjIG3ekYvFkscuIo5GABXEnu90p7dUEpMpmCv91xzqUG1hikJRfoxbVLn64MuvCuFblxDJQvYgrAhZu65VOqLN37IcsHIHuWSAzyC0VEmeEeLoyfs7YHmTrzkYs/N0mxUCI8aVK4/QoSwzPGG4u0OLKaPcqF3/fHt5yGRmi81e2+bdtWzQQBbiXDFI1C4FksZ1B2k1KuwFWtSnK3PKjy3HWu5oxvAkg9966HWq9gXJnGAL8Ci6xjZqTn7+4LbElKLeVt5YLeELvGKgOnroJMdxWdSxdMQinsx4LWuLeIgsnE40zvJWF2VMTBrOPHLXh0wB5tYZti1nLodMRwvIlxl506gtSfwiqQx/ay0QQr2D08pHreM8iS+3N7ddZN1rSDZXAkrOqcnxyQcSWpgs0lGnHkq/JqdzP7Hu04YQ67n3ZSQQdYwG42YeHWhXoANqDNkUMqbFrJeRYs+tMxuniOxnSWDQ574pBZmOf/bXgElnu8ikYehDRyX/i6z2MR529ExSCz4BRXG1xx07lNCsOwCjfGZ0VemcNx9YJHiFsMnUsM13fQ2UDYkd0jAAubaT+n1tWs7lsiI/nyCDjb2nummByypey6UwiDvWhvVO2RQWmWaUA/XZSSLg3k38+iWh4mTlgSlpRtQIhJw3XPSmEorxC4drl6azaF2ojeYjQL9VUsr3FlQbjF5APAkJE4qvTf2zFRB7MkQBoJaWhhNp35QDkjDrNU+GRGqwRlhT2pC7VJVs9Enbooiu2RafJItGBAaN8bquKWjGf7MVkQXtbq7AGRd12nXSD0GxRYPawz7ZZfysIBadk/nvgABW8aWQr3rnEqcBNr1epMAYja7hw7bZFdI9TYFZUw4SaUx2TX5YA61EpvQ4REHwpVWCzUfPL0Wg+Y=</div><div id="enc_passwd"> <input id="enc_pwd_input" type="text" style="border-radius: 5px;border-style: groove;height: 30px;width: 50%;cursor: auto;font-size: 102%;color: currentColor;outline: none;text-overflow: initial;padding-left: 5px;" onkeydown="if (event.keyCode == 13) { decrypt(); return false;}"> <input type="submit" value="解&nbsp;密" onclick="decrypt()" style="width: 58px;height: 34px;border-radius: 5px;background-color: white;border-style: solid;color: currentColor;"><div id="enc_error" style="display: inline-block;color: #d84527;margin-left: 10px"></div>
<script>
var onError = function(error) {
	document.getElementById("enc_error").innerHTML = "password error!"
};
function decrypt() {
var passwd = document.getElementById("enc_pwd_input").value;
console.log(passwd);
doDecrypt(passwd, onError);
}
</script>
</div>]]></content>
      
        
        <tags>
            
            <tag> mind </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[171010]]></title>
      <url>/2017/10/10/dailyDiary/2017/171010/</url>
      <content type="html"><![CDATA[<script src=/js/crypto-js.js></script><script>
function doDecrypt(pwd, onError) {
	console.log("in doDecrypt");
	var txt = document.getElementById("enc_content").innerHTML;
	var plantext;
	try {
	  	var bytes = CryptoJS.AES.decrypt(txt, pwd);
		plaintext = bytes.toString(CryptoJS.enc.Utf8);
	} catch(err) {
		if(onError) {onError(err);}
		return;
	}
	document.getElementById("enc_content").innerHTML = plaintext;
	document.getElementById("enc_content").style.display = "block";
   document.getElementById("enc_passwd").style.display = "none";
}
</script>
<div id="enc_content" style="display:none">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</div><div id="enc_passwd"> <input id="enc_pwd_input" type="text" style="border-radius: 5px;border-style: groove;height: 30px;width: 50%;cursor: auto;font-size: 102%;color: currentColor;outline: none;text-overflow: initial;padding-left: 5px;" onkeydown="if (event.keyCode == 13) { decrypt(); return false;}"> <input type="submit" value="解&nbsp;密" onclick="decrypt()" style="width: 58px;height: 34px;border-radius: 5px;background-color: white;border-style: solid;color: currentColor;"><div id="enc_error" style="display: inline-block;color: #d84527;margin-left: 10px"></div>
<script>
var onError = function(error) {
	document.getElementById("enc_error").innerHTML = "password error!"
};
function decrypt() {
var passwd = document.getElementById("enc_pwd_input").value;
console.log(passwd);
doDecrypt(passwd, onError);
}
</script>
</div>]]></content>
      
        <categories>
            
            <category> dailyDiary </category>
            
        </categories>
        
        
        <tags>
            
            <tag> morningDiary </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[171009]]></title>
      <url>/2017/10/09/dailyDiary/2017/171009/</url>
      <content type="html"><![CDATA[<script src=/js/crypto-js.js></script><script>
function doDecrypt(pwd, onError) {
	console.log("in doDecrypt");
	var txt = document.getElementById("enc_content").innerHTML;
	var plantext;
	try {
	  	var bytes = CryptoJS.AES.decrypt(txt, pwd);
		plaintext = bytes.toString(CryptoJS.enc.Utf8);
	} catch(err) {
		if(onError) {onError(err);}
		return;
	}
	document.getElementById("enc_content").innerHTML = plaintext;
	document.getElementById("enc_content").style.display = "block";
   document.getElementById("enc_passwd").style.display = "none";
}
</script>
<div id="enc_content" style="display:none">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</div><div id="enc_passwd"> <input id="enc_pwd_input" type="text" style="border-radius: 5px;border-style: groove;height: 30px;width: 50%;cursor: auto;font-size: 102%;color: currentColor;outline: none;text-overflow: initial;padding-left: 5px;" onkeydown="if (event.keyCode == 13) { decrypt(); return false;}"> <input type="submit" value="解&nbsp;密" onclick="decrypt()" style="width: 58px;height: 34px;border-radius: 5px;background-color: white;border-style: solid;color: currentColor;"><div id="enc_error" style="display: inline-block;color: #d84527;margin-left: 10px"></div>
<script>
var onError = function(error) {
	document.getElementById("enc_error").innerHTML = "password error!"
};
function decrypt() {
var passwd = document.getElementById("enc_pwd_input").value;
console.log(passwd);
doDecrypt(passwd, onError);
}
</script>
</div>]]></content>
      
        <categories>
            
            <category> dailyDiary </category>
            
        </categories>
        
        
        <tags>
            
            <tag> morningDiary </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[171008]]></title>
      <url>/2017/10/08/dailyDiary/2017/171008/</url>
      <content type="html"><![CDATA[<script src=/js/crypto-js.js></script><script>
function doDecrypt(pwd, onError) {
	console.log("in doDecrypt");
	var txt = document.getElementById("enc_content").innerHTML;
	var plantext;
	try {
	  	var bytes = CryptoJS.AES.decrypt(txt, pwd);
		plaintext = bytes.toString(CryptoJS.enc.Utf8);
	} catch(err) {
		if(onError) {onError(err);}
		return;
	}
	document.getElementById("enc_content").innerHTML = plaintext;
	document.getElementById("enc_content").style.display = "block";
   document.getElementById("enc_passwd").style.display = "none";
}
</script>
<div id="enc_content" style="display:none">U2FsdGVkX19doKPtZ9kr2T3FGocVu7OyqH8C9dcnKNMwUbVAYhNR6OUGJxVqJjHG36HOyPKIcGoRQgHhM5hD5v/xnFc28qOTqjs6RNqYIIdqHy62A7yAro25gms6MCEaEeO9cJinInVDdAPhjey8900R/KMBnPgE41IeE15PwlomWaBVzk/pEgIdbO+rxHY7nADGYiCXkJEAgf8EHHJ56Qw3RKuvADwlb/8KkvNvk8ydxAorNCUzC2FfIF3mpsEzuOCoQgoq2W486DEiEiqQ91JFZLXytwvKXrsKjTKugU/O15dooTJF7tGQ51TfpoMAEF4d4Y1eiYMqczlEuJiTDfD156829MtypadsV6HLJUO6tvQ/VEwDOKBb4/yNKL83DvH5kJvIyq7GxGzrkhAIwfC8Cm5UoTAjnSmaZGo6mva9Zt0zrHuY+Zns6a/SsyPLnMLK1I2ePRIloWNBywHP2/orsHQsGXukVi3DI3LCrtH1fNjT1iTTDDUPFgdrDB4TIbkBMrUyXYVokIyCk2NO8b/ggYfQILRf1jD9kvuYUn9Nt4UceaPWd7PZ/zvd2xT4uXzdJeU1rbM0RN1DvFapHkcUYGPDGm7z7A2vAJlUgsW9+i4HIKGGi+Oeuajv94m6n2yirVX7t8AkjaFW9q8QWXco+uDqFVRNVFuSU33Gmk85vxlz0sYlm7YCWuMQbo5uNlCvnV01TUknSD/WYBom1qIi7KwtzooOhBiVRB5CwhGuh1vetnWs4R5seGTVjJokNQEL6nQu6671S4M+umarfIanukL4cIkoflx5WMJta9Uy6Yr+AWfO5gxuN6VXevtuA7tasnJEpX1ga93yf36wRucsrIzrq8YpDt9MMR2EjFnEPMZRD6Ihl5N/RqFS4b8XOWviDcUVmET5r1Ew2/HrP0IOV1euRV1jLSN91nlZVu5S3cvQjUi8c7g8poliWUXbwN9Bi/XSCjUV6Isy9SiEqsG2BqwQfDc7/H177/OcyhhpEfZQ/zFAwta3XKQgt3MBm7qInu5lUEkmcgmr/O2pYDilkPE5PKdbMJsT/2YY+HW3GcOrsudOelMUcgDfPMjXUV1rn14f8wYSHezvgYAy1XEeEtSBcN4HjCaxdzedy3dwl8nACtoo/blDuHArgf4yOMdcwGIftYdWvzyghz3t7tO8NmLwE9leC7DCgrBgXutRgu5Zk6N7VrA5TwhydhrG8nkZRCciAcyVzc/vJaG1ui0Yya/wqJ/hYchFKWNO6UAlQoWSy2dsBGiYHt5aeYoGkI/ddza61iQXbvmgwSpt+eE7O21atcqZf5C77ZR7ADnCxJYFBpjiXNYRWuho/Bj7OWQnSZK7mmilAw1/QS+iNwpKHHilyQSpe9wGj0Z9gwnMsdnSXYYM/SaB5F+ZHqZg6FrIDBWkLoxsdpd8mjXaGiOkaqZW5Yn2jyv99Czw7c2LnGluM2x+SO29JnskGbIPqzvS8licx2WUUfCCjVRXzpBIqXevKCYt5maBI/hfo1K4n2n480oDObC/tZo5I3Yrn3qZwwnRCHMCOYdq739RI7UEHBivwlud1QAthQABZNnUFzEtPl95/UxP7ymnk89ZHM6Sq6tUQc2jkaLVxnhuaeQ3futyjpYTJaV2RuNov1lN1HbUSBcKMq4yULZ6z8iT636pRwuXbT+7vELTd5CRTbsyQl7ESKjUGBH+sJo053SCaF8PkPM2gy/cOk2FiKnSHaIouuxY/lLdLqRieqrIiw==</div><div id="enc_passwd"> <input id="enc_pwd_input" type="text" style="border-radius: 5px;border-style: groove;height: 30px;width: 50%;cursor: auto;font-size: 102%;color: currentColor;outline: none;text-overflow: initial;padding-left: 5px;" onkeydown="if (event.keyCode == 13) { decrypt(); return false;}"> <input type="submit" value="解&nbsp;密" onclick="decrypt()" style="width: 58px;height: 34px;border-radius: 5px;background-color: white;border-style: solid;color: currentColor;"><div id="enc_error" style="display: inline-block;color: #d84527;margin-left: 10px"></div>
<script>
var onError = function(error) {
	document.getElementById("enc_error").innerHTML = "password error!"
};
function decrypt() {
var passwd = document.getElementById("enc_pwd_input").value;
console.log(passwd);
doDecrypt(passwd, onError);
}
</script>
</div>]]></content>
      
        <categories>
            
            <category> dailyDiary </category>
            
        </categories>
        
        
        <tags>
            
            <tag> morningDiary </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[170930]]></title>
      <url>/2017/09/30/dailyDiary/2017/170930/</url>
      <content type="html"><![CDATA[<script src=/js/crypto-js.js></script><script>
function doDecrypt(pwd, onError) {
	console.log("in doDecrypt");
	var txt = document.getElementById("enc_content").innerHTML;
	var plantext;
	try {
	  	var bytes = CryptoJS.AES.decrypt(txt, pwd);
		plaintext = bytes.toString(CryptoJS.enc.Utf8);
	} catch(err) {
		if(onError) {onError(err);}
		return;
	}
	document.getElementById("enc_content").innerHTML = plaintext;
	document.getElementById("enc_content").style.display = "block";
   document.getElementById("enc_passwd").style.display = "none";
}
</script>
<div id="enc_content" style="display:none">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</div><div id="enc_passwd"> <input id="enc_pwd_input" type="text" style="border-radius: 5px;border-style: groove;height: 30px;width: 50%;cursor: auto;font-size: 102%;color: currentColor;outline: none;text-overflow: initial;padding-left: 5px;" onkeydown="if (event.keyCode == 13) { decrypt(); return false;}"> <input type="submit" value="解&nbsp;密" onclick="decrypt()" style="width: 58px;height: 34px;border-radius: 5px;background-color: white;border-style: solid;color: currentColor;"><div id="enc_error" style="display: inline-block;color: #d84527;margin-left: 10px"></div>
<script>
var onError = function(error) {
	document.getElementById("enc_error").innerHTML = "password error!"
};
function decrypt() {
var passwd = document.getElementById("enc_pwd_input").value;
console.log(passwd);
doDecrypt(passwd, onError);
}
</script>
</div>]]></content>
      
        <categories>
            
            <category> dailyDiary </category>
            
        </categories>
        
        
        <tags>
            
            <tag> morningDiary </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[虚拟机网络配置]]></title>
      <url>/2017/09/29/Tec/network/ipconfig/</url>
      <content type="html"><![CDATA[<p><a href="http://liyunli0226.blog.51cto.com/10006245/1748181" target="_blank" rel="external">VMware虚拟机网络设置——三种方式详解</a><br><a id="more"></a></p>
<blockquote>
<p>1.Vmware的网络连接方式<br>(1)Bridged（桥接）方式<br>       用这种方式虚拟机的IP可设置成与本机在同一网段，虚拟机相当于网络内的一台独立的机器，网络内其他机器可访问虚拟机，虚拟机也可访问网络内其他机器，当然与本机系统的双向访问也不成问题。<br>       这个时候vmware就模拟成一个网桥的功能，就只使用 vmnet1网卡，vmnet8就可以不用；<br>(2)NAT(网络地址转换）方式<br>       这种方式也可以实现本机与虚拟机的双向访问。但网络内其他机器不能访问虚拟机，虚拟机可通过本机用NAT协议访问网络内其他机器。<br>       现在vmware就模拟成了一个具有DHCP功能的路由器，这个时候就要用vmnet8了。<br>(3)host-only方式<br>       这种方式只能进行虚拟机和主机之间的网络通信，即：网络内其他机器不能访问虚拟机，同时虚拟机也不能访问其他机器。</p>
</blockquote>
]]></content>
      
        
    </entry>
    
    <entry>
      <title><![CDATA[170929]]></title>
      <url>/2017/09/29/dailyDiary/2017/170929/</url>
      <content type="html"><![CDATA[<script src=/js/crypto-js.js></script><script>
function doDecrypt(pwd, onError) {
	console.log("in doDecrypt");
	var txt = document.getElementById("enc_content").innerHTML;
	var plantext;
	try {
	  	var bytes = CryptoJS.AES.decrypt(txt, pwd);
		plaintext = bytes.toString(CryptoJS.enc.Utf8);
	} catch(err) {
		if(onError) {onError(err);}
		return;
	}
	document.getElementById("enc_content").innerHTML = plaintext;
	document.getElementById("enc_content").style.display = "block";
   document.getElementById("enc_passwd").style.display = "none";
}
</script>
<div id="enc_content" style="display:none">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</div><div id="enc_passwd"> <input id="enc_pwd_input" type="text" style="border-radius: 5px;border-style: groove;height: 30px;width: 50%;cursor: auto;font-size: 102%;color: currentColor;outline: none;text-overflow: initial;padding-left: 5px;" onkeydown="if (event.keyCode == 13) { decrypt(); return false;}"> <input type="submit" value="解&nbsp;密" onclick="decrypt()" style="width: 58px;height: 34px;border-radius: 5px;background-color: white;border-style: solid;color: currentColor;"><div id="enc_error" style="display: inline-block;color: #d84527;margin-left: 10px"></div>
<script>
var onError = function(error) {
	document.getElementById("enc_error").innerHTML = "password error!"
};
function decrypt() {
var passwd = document.getElementById("enc_pwd_input").value;
console.log(passwd);
doDecrypt(passwd, onError);
}
</script>
</div>]]></content>
      
        <categories>
            
            <category> dailyDiary </category>
            
        </categories>
        
        
        <tags>
            
            <tag> morningDiary </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[antdMenu源码(rc-menu)分析(未完成)]]></title>
      <url>/2017/09/28/front-end/React/antd/antd-menu/</url>
      <content type="html"><![CDATA[<script src=/js/crypto-js.js></script><script>
function doDecrypt(pwd, onError) {
	console.log("in doDecrypt");
	var txt = document.getElementById("enc_content").innerHTML;
	var plantext;
	try {
	  	var bytes = CryptoJS.AES.decrypt(txt, pwd);
		plaintext = bytes.toString(CryptoJS.enc.Utf8);
	} catch(err) {
		if(onError) {onError(err);}
		return;
	}
	document.getElementById("enc_content").innerHTML = plaintext;
	document.getElementById("enc_content").style.display = "block";
   document.getElementById("enc_passwd").style.display = "none";
}
</script>
<div id="enc_content" style="display:none"></div><div id="enc_passwd"> <input id="enc_pwd_input" type="text" style="border-radius: 5px;border-style: groove;height: 30px;width: 50%;cursor: auto;font-size: 102%;color: currentColor;outline: none;text-overflow: initial;padding-left: 5px;" onkeydown="if (event.keyCode == 13) { decrypt(); return false;}"> <input type="submit" value="解&nbsp;密" onclick="decrypt()" style="width: 58px;height: 34px;border-radius: 5px;background-color: white;border-style: solid;color: currentColor;"><div id="enc_error" style="display: inline-block;color: #d84527;margin-left: 10px"></div>
<script>
var onError = function(error) {
	document.getElementById("enc_error").innerHTML = "password error!"
};
function decrypt() {
var passwd = document.getElementById("enc_pwd_input").value;
console.log(passwd);
doDecrypt(passwd, onError);
}
</script>
</div>]]></content>
      
        <categories>
            
            <category> Front-end </category>
            
            <category> React </category>
            
        </categories>
        
        
        <tags>
            
            <tag> React </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[170928]]></title>
      <url>/2017/09/28/dailyDiary/2017/170928/</url>
      <content type="html"><![CDATA[<script src=/js/crypto-js.js></script><script>
function doDecrypt(pwd, onError) {
	console.log("in doDecrypt");
	var txt = document.getElementById("enc_content").innerHTML;
	var plantext;
	try {
	  	var bytes = CryptoJS.AES.decrypt(txt, pwd);
		plaintext = bytes.toString(CryptoJS.enc.Utf8);
	} catch(err) {
		if(onError) {onError(err);}
		return;
	}
	document.getElementById("enc_content").innerHTML = plaintext;
	document.getElementById("enc_content").style.display = "block";
   document.getElementById("enc_passwd").style.display = "none";
}
</script>
<div id="enc_content" style="display:none">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</div><div id="enc_passwd"> <input id="enc_pwd_input" type="text" style="border-radius: 5px;border-style: groove;height: 30px;width: 50%;cursor: auto;font-size: 102%;color: currentColor;outline: none;text-overflow: initial;padding-left: 5px;" onkeydown="if (event.keyCode == 13) { decrypt(); return false;}"> <input type="submit" value="解&nbsp;密" onclick="decrypt()" style="width: 58px;height: 34px;border-radius: 5px;background-color: white;border-style: solid;color: currentColor;"><div id="enc_error" style="display: inline-block;color: #d84527;margin-left: 10px"></div>
<script>
var onError = function(error) {
	document.getElementById("enc_error").innerHTML = "password error!"
};
function decrypt() {
var passwd = document.getElementById("enc_pwd_input").value;
console.log(passwd);
doDecrypt(passwd, onError);
}
</script>
</div>]]></content>
      
        <categories>
            
            <category> dailyDiary </category>
            
        </categories>
        
        
        <tags>
            
            <tag> morningDiary </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[从antd Form源码分析并学习高阶组件]]></title>
      <url>/2017/09/27/front-end/React/antd/antd-form/</url>
      <content type="html"><![CDATA[<p>分析Form的源码主要是想看一下Antd是怎么构建Form这个高阶组件的<br><a href="https://github.com/ant-design/ant-design/tree/master/components/form" target="_blank" rel="external">ant-design/components/form</a><br><a href="https://github.com/react-component/form" target="_blank" rel="external">react-component/form(rc-form)</a><br><a href="https://www.gitbook.com/book/xcatliu/typescript-tutorial/details" target="_blank" rel="external">TypeScript 入门教程</a><br><a id="more"></a></p>
<h2 id="Form源码分析"><a href="#Form源码分析" class="headerlink" title="Form源码分析"></a>Form源码分析</h2><p>object.omit 是一个 JavaScript 库，实现从一个对象中排除某些指定属性并返回最新结果<br>mixin就是<br><a href="https://zhuanlan.zhihu.com/purerender/20361937" target="_blank" rel="external">React Mixin 的前世今生</a><br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div></pre></td><td class="code"><pre><div class="line"><span class="comment">/*    </span></div><div class="line"><span class="comment">  Form的create方法，返回一个函数</span></div><div class="line"><span class="comment">  返回的函数参数为组件，函数执行的返回值为一个被createDOMForm返回的decorate方法处理过拥有Form方法的组件</span></div><div class="line"><span class="comment">*/</span></div><div class="line"><span class="comment">// typescript语法，约定了继承的接口，可理解为function(options)</span></div><div class="line"><span class="keyword">static</span> create = <span class="function"><span class="keyword">function</span>&lt;<span class="title">TOwnProps</span>&gt;(<span class="params">options: FormCreateOption&lt;TOwnProps&gt; = &#123;&#125;</span>): <span class="title">ComponentDecorator</span>&lt;<span class="title">TOwnProps</span>&gt; </span>&#123;</div><div class="line">  <span class="comment">// fromWrapper是createDOMForm返回的一个decorate方法，用于包裹一个组件并为此组件提供Form方法</span></div><div class="line">  <span class="keyword">const</span> formWrapper = createDOMForm(&#123;</div><div class="line">    fieldNameProp: <span class="string">'id'</span>,</div><div class="line">    ...options,</div><div class="line">    fieldMetaProp: FIELD_META_PROP,</div><div class="line">  &#125;);</div><div class="line">  <span class="comment">/* eslint-disable react/prefer-es6-class */</span></div><div class="line">  <span class="keyword">return</span> <span class="function">(<span class="params">Component</span>) =&gt;</span> formWrapper(createReactClass(&#123;</div><div class="line">    propTypes: &#123;</div><div class="line">      form: PropTypes.object.isRequired,</div><div class="line">    &#125;,</div><div class="line">    childContextTypes: &#123;</div><div class="line">      form: PropTypes.object.isRequired,</div><div class="line">    &#125;,</div><div class="line">   <span class="comment">// 主要是给FormItem传递form</span></div><div class="line">    getChildContext() &#123;</div><div class="line">      <span class="keyword">return</span> &#123;</div><div class="line">        form: <span class="keyword">this</span>.props.form,</div><div class="line">      &#125;;</div><div class="line">    &#125;,</div><div class="line">    componentWillMount() &#123;</div><div class="line">      <span class="keyword">this</span>.__getFieldProps = <span class="keyword">this</span>.props.form.getFieldProps;</div><div class="line">    &#125;,</div><div class="line">    deprecatedGetFieldProps(name, option) &#123;</div><div class="line">      warning(</div><div class="line">        <span class="literal">false</span>,</div><div class="line">        <span class="string">'`getFieldProps` is not recommended, please use `getFieldDecorator` instead, '</span> +</div><div class="line">        <span class="string">'see: https://u.ant.design/get-field-decorator'</span>,</div><div class="line">      );</div><div class="line">      <span class="keyword">return</span> <span class="keyword">this</span>.__getFieldProps(name, option);</div><div class="line">    &#125;,</div><div class="line">    render() &#123;</div><div class="line">      <span class="keyword">this</span>.props.form.getFieldProps = <span class="keyword">this</span>.deprecatedGetFieldProps;</div><div class="line"></div><div class="line">      <span class="keyword">const</span> withRef: any = &#123;&#125;;</div><div class="line">      <span class="keyword">if</span> (options.withRef) &#123;</div><div class="line">        withRef.ref = <span class="string">'formWrappedComponent'</span>;</div><div class="line">      &#125; <span class="keyword">else</span> <span class="keyword">if</span> (<span class="keyword">this</span>.props.wrappedComponentRef) &#123;</div><div class="line">        withRef.ref = <span class="keyword">this</span>.props.wrappedComponentRef;</div><div class="line">      &#125;</div><div class="line">      <span class="comment">// Component是传入参数</span></div><div class="line">      <span class="keyword">return</span> <span class="xml"><span class="tag">&lt;<span class="name">Component</span> &#123;<span class="attr">...this.props</span>&#125; &#123;<span class="attr">...withRef</span>&#125; /&gt;</span>;</span></div><div class="line"><span class="xml">    &#125;,</span></div><div class="line"><span class="xml">  &#125;));</span></div><div class="line"><span class="xml">&#125;;</span></div></pre></td></tr></table></figure></p>
<h3 id="createDOMForm"><a href="#createDOMForm" class="headerlink" title="createDOMForm"></a>createDOMForm</h3><p><a href="https://github.com/react-component/form" target="_blank" rel="external">react-component/form(rc-form)</a><br>一个函数，返回一个decorate方法，用于包裹一个组件并为此组件提供Form方法<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div></pre></td><td class="code"><pre><div class="line"><span class="comment">/*</span></div><div class="line"><span class="comment">一个函数，返回一个decorate方法，用于包裹一个组件并为此组件提供Form方法</span></div><div class="line"><span class="comment">*/</span></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">createBaseForm</span>(<span class="params">option = &#123;&#125;, mixins = []</span>) </span>&#123;</div><div class="line">  <span class="keyword">const</span> &#123;</div><div class="line">    mapPropsToFields, onFieldsChange, onValuesChange,</div><div class="line">    fieldNameProp, fieldMetaProp,</div><div class="line">    validateMessages, mapProps = mirror,</div><div class="line">    formPropName = <span class="string">'form'</span>, withRef,</div><div class="line">  &#125; = option;</div><div class="line">  <span class="function"><span class="keyword">function</span> <span class="title">decorate</span>(<span class="params">WrappedComponent</span>) </span>&#123;</div><div class="line">    <span class="keyword">const</span> Form = createReactClass(&#123;</div><div class="line">      mixins,</div><div class="line">      <span class="comment">//...一些生命周期方法、Form的方法</span></div><div class="line">      render() &#123;</div><div class="line">        <span class="comment">// ...</span></div><div class="line">        <span class="keyword">return</span> <span class="xml"><span class="tag">&lt;<span class="name">WrappedComponent</span> &#123;<span class="attr">...props</span>&#125;/&gt;</span>;</span></div><div class="line"><span class="xml">      &#125;</span></div><div class="line"><span class="xml">    &#125;)</span></div><div class="line"><span class="xml">    // argumentContainer具体实现代码在下面</span></div><div class="line"><span class="xml">    // 返回已拥有WrappedComponnet静态方法的Form</span></div><div class="line"><span class="xml">    return argumentContainer(Form, WrappedComponent);</span></div><div class="line"><span class="xml">  &#125;</span></div><div class="line"><span class="xml">&#125;</span></div><div class="line"><span class="xml">// argumentContainer方法</span></div><div class="line"><span class="xml">/**</span></div><div class="line"><span class="xml">hoist-non-react-statics库作用:</span></div><div class="line"><span class="xml">Copies non-react specific statics from a child component to a parent component. Similar to Object.assign, but with React static keywords blacklisted from being overridden.</span></div><div class="line"><span class="xml">类似于Object.assign，作用是将子组件中的 static 方法复制进父组件，但不会覆盖组件中的关键字方法(如 componentDidMount)</span></div><div class="line"><span class="xml">使用:</span></div><div class="line"><span class="xml">import hoistNonReactStatic from 'hoist-non-react-statics';</span></div><div class="line"><span class="xml">hoistNonReactStatic(targetComponent, sourceComponent);</span></div><div class="line"><span class="xml">***/</span></div><div class="line"><span class="xml">import hoistStatics from 'hoist-non-react-statics';</span></div><div class="line"><span class="xml">export function argumentContainer(Container, WrappedComponent) &#123;</span></div><div class="line"><span class="xml">  /* eslint no-param-reassign:0 */</span></div><div class="line"><span class="xml">  Container.displayName = `Form($&#123;getDisplayName(WrappedComponent)&#125;)`;</span></div><div class="line"><span class="xml">  Container.WrappedComponent = WrappedComponent;</span></div><div class="line"><span class="xml">  return hoistStatics(Container, WrappedComponent);</span></div><div class="line"><span class="xml">&#125;</span></div></pre></td></tr></table></figure></p>
<h3 id="相关问题"><a href="#相关问题" class="headerlink" title="相关问题"></a>相关问题</h3><ol>
<li>Form是不是高阶组件<br>我的理解中应该不是，高阶组件是个纯函数且返回一个接受组件作为参数的函数，这么定义的话Form.create()这个函数是一个高阶组件</li>
<li>Form.create()(Component)和Component的关系?<br>父子关系，拥有互不干扰的生命周期。这个问题理解了问题3就不存在了</li>
<li>Form组件如何解决两个组件生命周期重叠的问题?<br>答： 不存在重叠，Form和Form.create()(Component)返回的被包裹组件是两个东西<br> Form（返回的是个定义了props和className的原生form）是定义在被包裹组件中的</li>
</ol>
<h2 id="高阶组件"><a href="#高阶组件" class="headerlink" title="高阶组件"></a>高阶组件</h2><p>Higher Order Component，高阶组件<br>高阶组件就是一个 React 组件包裹着另外一个 React 组件<br>组件: 可以是纯函数</p>
<blockquote>
<p>官方定义:<br>高阶组件是一个函数，能够接受一个组件并返回一个新的组件。<br>组件是将props转化成UI，然而高阶组件将一个组价转化成另外一个组件。<br>高阶组件是纯函数，没有副作用。</p>
<p>你可以想象在一个大型项目中，订阅DataSource并调用setState的函数(原文举例，大概就是相同逻辑可能在不同类型组件上都会遇到)将会一次次出现。我们需要将其抽象出来，使得我们能够在一个地方定义逻辑并且在我们的组件中共享。这就是高阶组件的优点。</p>
<ol>
<li><a href="https://juejin.im/post/595243d96fb9a06bbd6f5ccd" target="_blank" rel="external">React 进阶之高阶组件</a>,感觉这篇文章写得最易懂</li>
<li><a href="https://zhuanlan.zhihu.com/p/24776678" target="_blank" rel="external">深入理解 React 高阶组件(译)</a></li>
<li><a href="http://imweb.io/topic/5907038a2739bbed32f60dad" target="_blank" rel="external">React高阶组件（译）</a></li>
</ol>
</blockquote>
<p>两个作用:</p>
<blockquote>
<ol>
<li>属性代理Props Proxy： HOC 对传给 WrappedComponent W 的 porps 进行操作</li>
<li>反向继承Inheritance Inversion： HOC 继承 WrappedComponent W。</li>
</ol>
</blockquote>
<p>通俗点讲，属性代理可以对组件的props做一些预处理，再下传porps给被包裹组件<br>反向继承可以通过继承的方式拿到原组件除静态方法外的所有内容(生命周期、state、方法)，一般用于在render中通过super.render()拿到原组件的展示内容，做渲染劫持，比如控制显示，在前后加一些东西等等。借个例子来理解:<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> React <span class="keyword">from</span> <span class="string">'react'</span>;</div><div class="line"><span class="keyword">const</span> hijackRenderHoc = <span class="function"><span class="params">config</span> =&gt;</span> WrappedComponent =&gt; <span class="class"><span class="keyword">class</span> <span class="keyword">extends</span> <span class="title">WrappedComponent</span> </span>&#123;</div><div class="line">  render() &#123;</div><div class="line">    <span class="keyword">const</span> &#123; style = &#123;&#125; &#125; = config;</div><div class="line">    <span class="keyword">const</span> elementsTree = <span class="keyword">super</span>.render();</div><div class="line">    <span class="built_in">console</span>.log(elementsTree, <span class="string">'elementsTree'</span>);</div><div class="line">    <span class="keyword">if</span> (config.type === <span class="string">'add-style'</span>) &#123;</div><div class="line">      <span class="keyword">return</span> <span class="xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">&#123;&#123;...style&#125;&#125;</span>&gt;</span></span></div><div class="line"><span class="xml">        &#123;elementsTree&#125;</span></div><div class="line"><span class="xml">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span>;</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">return</span> elementsTree;</div><div class="line">  &#125;</div><div class="line">&#125;;</div></pre></td></tr></table></figure></p>
]]></content>
      
        <categories>
            
            <category> Front-end </category>
            
            <category> React </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[170927]]></title>
      <url>/2017/09/27/dailyDiary/2017/170927/</url>
      <content type="html"><![CDATA[<script src=/js/crypto-js.js></script><script>
function doDecrypt(pwd, onError) {
	console.log("in doDecrypt");
	var txt = document.getElementById("enc_content").innerHTML;
	var plantext;
	try {
	  	var bytes = CryptoJS.AES.decrypt(txt, pwd);
		plaintext = bytes.toString(CryptoJS.enc.Utf8);
	} catch(err) {
		if(onError) {onError(err);}
		return;
	}
	document.getElementById("enc_content").innerHTML = plaintext;
	document.getElementById("enc_content").style.display = "block";
   document.getElementById("enc_passwd").style.display = "none";
}
</script>
<div id="enc_content" style="display:none">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</div><div id="enc_passwd"> <input id="enc_pwd_input" type="text" style="border-radius: 5px;border-style: groove;height: 30px;width: 50%;cursor: auto;font-size: 102%;color: currentColor;outline: none;text-overflow: initial;padding-left: 5px;" onkeydown="if (event.keyCode == 13) { decrypt(); return false;}"> <input type="submit" value="解&nbsp;密" onclick="decrypt()" style="width: 58px;height: 34px;border-radius: 5px;background-color: white;border-style: solid;color: currentColor;"><div id="enc_error" style="display: inline-block;color: #d84527;margin-left: 10px"></div>
<script>
var onError = function(error) {
	document.getElementById("enc_error").innerHTML = "password error!"
};
function decrypt() {
var passwd = document.getElementById("enc_pwd_input").value;
console.log(passwd);
doDecrypt(passwd, onError);
}
</script>
</div>]]></content>
      
        <categories>
            
            <category> dailyDiary </category>
            
        </categories>
        
        
        <tags>
            
            <tag> morningDiary </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[react技术栈学习资料]]></title>
      <url>/2017/09/26/front-end/React/reactTechStackDocs/</url>
      <content type="html"><![CDATA[<p>react+antd+webpack+dva(react-router/redux-saga)+less<br><a id="more"></a></p>
<h1 id="概念学习"><a href="#概念学习" class="headerlink" title="概念学习"></a>概念学习</h1><p>推荐先学React，会用之后再开始用webpack等工具<br><a href="https://github.com/petehunt/react-howto/blob/master/README-zh.md" target="_blank" rel="external">如何学习react</a></p>
<h2 id="React是什么"><a href="#React是什么" class="headerlink" title="React是什么"></a>React是什么</h2><p>推荐先看官方文档(1、2)，从hello world开始逐步理解react<br>期间结合下面的React入门教程(3)，加深理解React的几个特性(JSX、组件化思想、单向数据流等等)<br>5里面涉及到技术栈内容，可将里面的React知识讲解部分作为参考，其它之后再学</p>
<ol>
<li><a href="https://react.bootcss.com/react/docs/hello-world.html" target="_blank" rel="external">React官方文档(中文翻译)</a></li>
<li><a href="https://facebook.github.io/react/docs/hello-world.html" target="_blank" rel="external">React官方文档(英文)</a></li>
<li><a href="https://hulufei.gitbooks.io/react-tutorial/content/introduction.html" target="_blank" rel="external">React入门教程(基础概览,简短基础)</a><br>ps: 网页反应慢可直接下载PDF文件阅读<a href="https://www.gitbook.com/download/pdf/book/hulufei/react-tutorial" target="_blank" rel="external">点此链接下载</a></li>
<li><a href="http://jartto.wang/2017/02/19/grasp-react-component/#disqus_thread" target="_blank" rel="external">React组件创建、生命周期详解</a></li>
<li><a href="https://github.com/blueflylin/reactjs101" target="_blank" rel="external">从零开始学React(大而全的入门教程)</a> </li>
</ol>
<h3 id="扩展阅读"><a href="#扩展阅读" class="headerlink" title="扩展阅读"></a>扩展阅读</h3><h4 id="综合类"><a href="#综合类" class="headerlink" title="综合类"></a>综合类</h4><ol>
<li><a href="https://zhuanlan.zhihu.com/purerender" target="_blank" rel="external">pure render–分享关于 React 相关经验及发展动态</a></li>
<li><a href="http://taobaofed.org/blog/2016/08/12/optimized-react-components/" target="_blank" rel="external">高性能 React 组件</a>    </li>
<li><a href="https://zhuanlan.zhihu.com/p/26250968?group_id=834155723037487104" target="_blank" rel="external">React v15.5.0更新说明 &amp; v16.0.0更新预告</a><h4 id="React高阶组件"><a href="#React高阶组件" class="headerlink" title="React高阶组件"></a>React高阶组件</h4></li>
<li><a href="https://juejin.im/post/595243d96fb9a06bbd6f5ccd" target="_blank" rel="external">React 进阶之高阶组件</a>,感觉这篇文章写得最易懂</li>
<li><a href="https://zhuanlan.zhihu.com/p/24776678" target="_blank" rel="external">深入理解 React 高阶组件(译)</a></li>
<li><a href="http://imweb.io/topic/5907038a2739bbed32f60dad" target="_blank" rel="external">React高阶组件（译）</a></li>
</ol>
<p>antd源码有应用到，但官网说法是最好别用context，而使用Redux一类的库来做数据流管理，感兴趣可以了解下</p>
<ol>
<li><a href="https://segmentfault.com/a/1190000004636213" target="_blank" rel="external">React中的“虫洞”——Context</a></li>
<li><a href="https://github.com/brunoyang/blog/issues/9" target="_blank" rel="external">Context，React中隐藏的秘密！</a></li>
</ol>
<h2 id="React相关技术栈"><a href="#React相关技术栈" class="headerlink" title="React相关技术栈"></a>React相关技术栈</h2><ol>
<li><a href="https://github.com/blueflylin/reactjs101" target="_blank" rel="external">从零开始学React(大而全的入门教程)</a><br>为了避免碰到许多看不懂的语法，建议先看一下ES6语法</li>
</ol>
<h3 id="ES6"><a href="#ES6" class="headerlink" title="ES6"></a>ES6</h3><p>常用的ES6语法，可重点看一下<br>建议直接看2和3，3里面只用看JS语言部分，2、3中不理解的再查1,1的文档内容实例很多，通看比较耗时，也不太可能一次记得完<br>4是Airbnb的JS编码规范，非基础必须，项目编码时如果不符合规范Eslint会报错，不影响运行，保持好的编码规范就行</p>
<ol>
<li><a href="http://es6.ruanyifeng.com/" target="_blank" rel="external">ES6小书-ruanyifeng</a>，书中实例很多</li>
<li><a href="http://luckykun.com/work/2016-05-10/es6-feature.html" target="_blank" rel="external">总结ES6常用的新特性</a></li>
<li><a href="https://github.com/dvajs/dva-knowledgemap#%E6%A8%A1%E5%9D%97%E7%9A%84-import-%E5%92%8C-export" target="_blank" rel="external">Dva最小知识集</a></li>
<li><a href="https://github.com/yuche/javascript" target="_blank" rel="external">ES6编码规范(Airbnb)</a></li>
</ol>
<h3 id="webpack"><a href="#webpack" class="headerlink" title="webpack"></a>webpack</h3><p>对React有一定理解之后，可以根据下面的教程1来了解React技术栈的知识<br>看一下1的1-4章的内容,了解webpack(有相关资料辅助)之后就可以做简单的实战了，根据2的教程完成ToList</p>
<ol>
<li><a href="https://github.com/blueflylin/reactjs101" target="_blank" rel="external">从零开始学React(大而全的入门教程)</a></li>
<li><a href="https://juejin.im/post/5850ebf461ff4b006c7f0bb8" target="_blank" rel="external">React 入门最好的实例－TodoList</a></li>
</ol>
<h4 id="webpack相关资料"><a href="#webpack相关资料" class="headerlink" title="webpack相关资料"></a>webpack相关资料</h4><ol>
<li><a href="https://fakefish.github.io/react-webpack-cookbook" target="_blank" rel="external">react-webpack小书(相当好的实战入门)</a></li>
<li><a href="https://doc.webpack-china.org/concepts/" target="_blank" rel="external">webpack中文官网，概念、使用文档，全</a></li>
</ol>
<h3 id="react-router"><a href="#react-router" class="headerlink" title="react-router"></a>react-router</h3><p>看完1的第五章之后，了解react-router是什么，如果不太明白，可查看下面的react-router相关资料</p>
<ol>
<li><a href="https://github.com/blueflylin/reactjs101" target="_blank" rel="external">从零开始学React(大而全的入门教程)</a></li>
</ol>
<h4 id="react-router相关资料"><a href="#react-router相关资料" class="headerlink" title="react-router相关资料"></a>react-router相关资料</h4><ol>
<li><a href="http://react-guide.github.io/react-router-cn/index.html" target="_blank" rel="external">react-router中文文档，含API</a>，个人感觉这个最易懂</li>
<li><a href="https://github.com/reactjs/react-router-tutorial" target="_blank" rel="external">react-router教程(react官方出的，全英文)</a></li>
<li><a href="http://www.ruanyifeng.com/blog/2016/05/react_router.html?utm_source=tool.lu" target="_blank" rel="external">React-router入门教程-ruanyifeng</a></li>
<li><a href="https://github.com/ReactTraining/react-router" target="_blank" rel="external">react-router项目-github</a></li>
<li><a href="http://blog.csdn.net/future_todo/article/details/53036638" target="_blank" rel="external">React Router的一个完整示例</a></li>
</ol>
<h3 id="antd"><a href="#antd" class="headerlink" title="antd"></a>antd</h3><p>Antd组件库是开箱即用的，看一下1中的相关介绍，跑一个官方的项目实战就基本知道怎么使用了<br>之后可以根据2做个实战加深印象</p>
<ol>
<li><a href="https://ant.design/docs/react/introduce-cn" target="_blank" rel="external">Antd组件库</a></li>
<li><a href="https://juejin.im/post/581fd8b9bf22ec0068d5fff2" target="_blank" rel="external">webpack+react+react-router-antd单页面应用实例</a><h3 id="Dva"><a href="#Dva" class="headerlink" title="Dva"></a>Dva</h3>dva的内容学习可根据相关资料来学，之后在项目开发中去了解深入(Redux内容可以等有一定的实战经验后再学)<h4 id="Dva相关资料"><a href="#Dva相关资料" class="headerlink" title="Dva相关资料"></a>Dva相关资料</h4></li>
<li><a href="https://github.com/dvajs/dva-knowledgemap" target="_blank" rel="external">Dva知识导图</a></li>
<li><a href="https://github.com/pigcan/blog/issues/2" target="_blank" rel="external">初识Dva</a></li>
<li><a href="https://github.com/dvajs/dva-docs/blob/master/v1/zh-cn/tutorial/01-%E6%A6%82%E8%A6%81.md" target="_blank" rel="external">Dva官方入门教程</a></li>
<li><a href="https://github.com/dvajs/dva" target="_blank" rel="external">Dva-github</a></li>
<li><a href="https://github.com/dvajs/dva/blob/master/docs/API_zh-CN.md#onstatechangefn" target="_blank" rel="external">Dva的API</a></li>
</ol>
<h3 id="redux相关资料"><a href="#redux相关资料" class="headerlink" title="redux相关资料"></a>redux相关资料</h3><p>可以先看Flux内容</p>
<ol>
<li><a href="http://cn.redux.js.org/index.html" target="_blank" rel="external">redux中文文档</a></li>
<li><a href="http://leonshi.com/redux-saga-in-chinese/" target="_blank" rel="external">redux-saga中文文档</a></li>
<li><a href="http://www.jianshu.com/p/3334467e4b32" target="_blank" rel="external">redux核心概念</a></li>
<li><a href="https://github.com/reactjs/redux" target="_blank" rel="external">redux项目-github</a></li>
</ol>
<h3 id="Flux入门"><a href="#Flux入门" class="headerlink" title="Flux入门"></a>Flux入门</h3><ol>
<li><a href="http://www.ruanyifeng.com/blog/2016/01/flux.html" target="_blank" rel="external">Flux入门</a></li>
</ol>
<h3 id="less"><a href="#less" class="headerlink" title="less"></a>less</h3><ol>
<li><a href="http://www.css88.com/doc/less/features/" target="_blank" rel="external">less语言特性、高级用法</a> </li>
<li><a href="http://www.bootcss.com/p/lesscss/#about" target="_blank" rel="external">Less入门概览，含简单示例</a></li>
</ol>
<h3 id="mock"><a href="#mock" class="headerlink" title="mock"></a>mock</h3><ol>
<li><a href="http://mockjs.com/0.1/#" target="_blank" rel="external">mockjs官方文档,含API详解</a></li>
<li><a href="https://segmentfault.com/a/1190000008839142" target="_blank" rel="external">mockjs使用实例，含数据集分类</a></li>
</ol>
<h3 id="其他资料"><a href="#其他资料" class="headerlink" title="其他资料"></a>其他资料</h3><ol>
<li><a href="https://segmentfault.com/a/1190000007491981" target="_blank" rel="external">合理的使用纯函数式编程</a></li>
<li><a href="https://github.com/yuche/javascript" target="_blank" rel="external">ES6编码规范(Airbnb)</a></li>
</ol>
<h1 id="实战"><a href="#实战" class="headerlink" title="实战"></a>实战</h1><p>学完这么多，可以借助一些简单的实战来加深理解</p>
<h2 id="实战练习"><a href="#实战练习" class="headerlink" title="实战练习"></a>实战练习</h2><p>1、2是前面就有提到的，3跟着做一遍能加深一下技术栈的理解(很详细，最好能跟着走一遍，不能做的话也推荐看看)</p>
<ol>
<li><a href="https://juejin.im/post/5850ebf461ff4b006c7f0bb8" target="_blank" rel="external">React 入门最好的实例－TodoList</a></li>
<li><a href="https://juejin.im/post/581fd8b9bf22ec0068d5fff2" target="_blank" rel="external">webpack+react+antd单页面应用实例</a></li>
<li><a href="https://github.com/brickspert/blog/issues/1" target="_blank" rel="external">从零搭建React全家桶框架教程</a></li>
</ol>
<h2 id="项目实战"><a href="#项目实战" class="headerlink" title="项目实战"></a>项目实战</h2><h3 id="快速开发步骤"><a href="#快速开发步骤" class="headerlink" title="快速开发步骤"></a>快速开发步骤</h3><ol>
<li>到router.js添加path</li>
<li>menu.js中加入本条路由信息</li>
<li>在router文件夹中新建文件夹，在新建文件夹的index.js定义并输出组件</li>
<li>mock.js模拟数据<br> 4.1 mock输出在rodhog（配置信息，不用修改）<br> 4.2 mock引用在index.js（不用管）<br> 4.3 在utils/api.js中定义相关api，设置其各操作的API地址，地址唯一不能重名，一般以组件页面所在文件夹加上操作的方式命名，并export此API<br> 4.4 在mock文件夹中建立同名文件(方便查找)，引用api，定义输出数据格式（与index的dataIndex一一对应）<br> 4.5 在自定义的组件的index.js中导入api，使用api完成数据的处理</li>
<li>调试查错</li>
<li>npm run lint检查代码错误</li>
<li>commit代码</li>
</ol>
]]></content>
      
        
    </entry>
    
    <entry>
      <title><![CDATA[一切都在意料之中]]></title>
      <url>/2017/09/26/essay/onmyownchoose/</url>
      <content type="html"><![CDATA[<script src=/js/crypto-js.js></script><script>
function doDecrypt(pwd, onError) {
	console.log("in doDecrypt");
	var txt = document.getElementById("enc_content").innerHTML;
	var plantext;
	try {
	  	var bytes = CryptoJS.AES.decrypt(txt, pwd);
		plaintext = bytes.toString(CryptoJS.enc.Utf8);
	} catch(err) {
		if(onError) {onError(err);}
		return;
	}
	document.getElementById("enc_content").innerHTML = plaintext;
	document.getElementById("enc_content").style.display = "block";
   document.getElementById("enc_passwd").style.display = "none";
}
</script>
<div id="enc_content" style="display:none">U2FsdGVkX18wCn2vv0tk69yNqXSGfP/7XgR48zSPgzaCqnrlEMxiE04+IkFC1D8nsVaRVflgse/NOiOQVwPY2s7MZvBTC/EmXW+0DWYEVeLboB11uv19CTI2qV5+6oCGWEEbhtt9oFGkR/7/EX37RsHJY60dze/ovDzfoIwxyNnCU7gqGzJ3BuOGm6HI6xsGDUrpbqW/eOUPCevUgH2iwYvhVO3tJnXNWnta+9N4DFe3LC021A8xf+NmFOds8PDlP4JqmeXPJ+hHJouw2za1P8hN0gCUe27SB9Oe+rFuAaZ6nKRdO21h4Z1mr+B8a17CiXhLQU7ZKRZW9OxANpfb6ooHsUqWxgBJlxPVQrMhutcv4/7wtGRBfNCNO8hE2N0S9NgC/V5EsHuxd8oPcRv7i22MiHtj74GuY5QOdFTKUmJ9w6Zksc6JRuZnbTwgscCWsCSHDmgh5iyX+ktRqtN0LVtAEm2NfcSAWXZ0wE1KVCM=</div><div id="enc_passwd"> <input id="enc_pwd_input" type="text" style="border-radius: 5px;border-style: groove;height: 30px;width: 50%;cursor: auto;font-size: 102%;color: currentColor;outline: none;text-overflow: initial;padding-left: 5px;" onkeydown="if (event.keyCode == 13) { decrypt(); return false;}"> <input type="submit" value="解&nbsp;密" onclick="decrypt()" style="width: 58px;height: 34px;border-radius: 5px;background-color: white;border-style: solid;color: currentColor;"><div id="enc_error" style="display: inline-block;color: #d84527;margin-left: 10px"></div>
<script>
var onError = function(error) {
	document.getElementById("enc_error").innerHTML = "password error!"
};
function decrypt() {
var passwd = document.getElementById("enc_pwd_input").value;
console.log(passwd);
doDecrypt(passwd, onError);
}
</script>
</div>]]></content>
      
        
        <tags>
            
            <tag> mind </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[react学习历程记录]]></title>
      <url>/2017/09/26/front-end/React/record/myreact/</url>
      <content type="html"><![CDATA[<script src=/js/crypto-js.js></script><script>
function doDecrypt(pwd, onError) {
	console.log("in doDecrypt");
	var txt = document.getElementById("enc_content").innerHTML;
	var plantext;
	try {
	  	var bytes = CryptoJS.AES.decrypt(txt, pwd);
		plaintext = bytes.toString(CryptoJS.enc.Utf8);
	} catch(err) {
		if(onError) {onError(err);}
		return;
	}
	document.getElementById("enc_content").innerHTML = plaintext;
	document.getElementById("enc_content").style.display = "block";
   document.getElementById("enc_passwd").style.display = "none";
}
</script>
<div id="enc_content" style="display:none"></div><div id="enc_passwd"> <input id="enc_pwd_input" type="text" style="border-radius: 5px;border-style: groove;height: 30px;width: 50%;cursor: auto;font-size: 102%;color: currentColor;outline: none;text-overflow: initial;padding-left: 5px;" onkeydown="if (event.keyCode == 13) { decrypt(); return false;}"> <input type="submit" value="解&nbsp;密" onclick="decrypt()" style="width: 58px;height: 34px;border-radius: 5px;background-color: white;border-style: solid;color: currentColor;"><div id="enc_error" style="display: inline-block;color: #d84527;margin-left: 10px"></div>
<script>
var onError = function(error) {
	document.getElementById("enc_error").innerHTML = "password error!"
};
function decrypt() {
var passwd = document.getElementById("enc_pwd_input").value;
console.log(passwd);
doDecrypt(passwd, onError);
}
</script>
</div>]]></content>
      
        <categories>
            
            <category> Front-end </category>
            
            <category> React </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Summary </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[170926]]></title>
      <url>/2017/09/26/dailyDiary/2017/170926/</url>
      <content type="html"><![CDATA[<script src=/js/crypto-js.js></script><script>
function doDecrypt(pwd, onError) {
	console.log("in doDecrypt");
	var txt = document.getElementById("enc_content").innerHTML;
	var plantext;
	try {
	  	var bytes = CryptoJS.AES.decrypt(txt, pwd);
		plaintext = bytes.toString(CryptoJS.enc.Utf8);
	} catch(err) {
		if(onError) {onError(err);}
		return;
	}
	document.getElementById("enc_content").innerHTML = plaintext;
	document.getElementById("enc_content").style.display = "block";
   document.getElementById("enc_passwd").style.display = "none";
}
</script>
<div id="enc_content" style="display:none">U2FsdGVkX1/RuRjPp4M8WZg+OYgKarHcNSs4Btk6JUNlvlK5cG7FIWwY165oluyoc+KAU28ZRmE7s1A3UKJT0b9c09W6/a02PmsPRo0oyKFC2fISrCYuSGeEH4R2aQ+aIuwtvAonbZkOuvxjTsXMiggQNK4ni7/nHqVtONA9X41DB9e9Z0n1YFHMaNjbXIgkUzypwBsvXB9wZc9iuZ1wvv0zrc5PC8FQexa76PvbfGwURzlka0VgcsBQTL+zXkRnWPt6BKtwqYQJyKEO0KMTQ2kFxk12uN+CQKAW3gX0UwMeK0X9+u0sSRMuonc0XEcPLf0g8bcFywD7RHTfKW7tGwmtgufunSm1iNVHbw2nQk4Q6U4tPaqDALcIzFUZGIQFJ0/+nyWucAGPw4v5p6aQRA8QG8RVPVuCJnFNrQB+wcmZaw9NsAsXJHMy826mSvkgoIATDjggF1UUDWvAlNEZnJOOIlSqOFXA7sWK9oXwvY6uiHO+RdCGYysV2qHye6mtVOfIvvNnKwcUPk9NLUsu27itlNja0LlDyrI00DBNVIfVCH5WzrMwFo7lxE0KfRORvyfnk1d6Ky0QI6r65tPFDpiE/rJ9KoSdxHtZEgvcdJK7PA+fWzhZ8ggnnIavjf9/85Fg5ajG5++fwG/+zakmPKYcY3Aqa8bt4FNxf4Wa0JlNTQP//TOpBLlg84vSFlXrsPwzbCsaTOUvSHkoHt5lBDwpns3mfX3cxa8R2vDvwyCTfjklRr3+x44XSnbRbjwK23AyeEcPoDw4y9Q5iQtoNLAiSrimu9am42KANLUgEaMJmZ/+swU94sa4WgoycEEe5riqK7G2wlTWVrHrRKMWiEgdFzTwUjRpzdFEVSkTseYnIgDlSM70nkXU1JlvSsRDkJXw9H50jTnFg5zjowV8mWfNjPs3lu8NsPsKYVGaTiQ/myGGZg0mLZ2Tn+xdUdQCfE+wuTIWG/KtkKZDXJ8wxrYhL1WMHk2dFQguClGLDJ4OOxCft97pTmA7+W+DRjRM+b3NkXfBNaWS6+4wpOOMcRLRm7IqIjrhtmMv4o0yBdDpwRI4a5DpsTxkoIFEyvGN03YSHTgourLiyOTnZ1v40MTYj/LNLLXUGE+HeE1qJk+PWoqy6fPBqNRjTzCXOCSa9t/acuocmsaLTSIsVAsuXpFDPNRRuORFfbVBIX/Xsv7ypCXCwAZg0sNg5+/tbYaGhDRp/J/LZbsa2wuIJI8Ntgy9UVpLOr8YNyz5986TPn/GprJcJrEb1gqIZaAcrohsJYwEGRGNqSlKsQYo/TVYOlesUFYcITYINieqpBM9SMyzD24aKhiGBFhpY54pZnTMmAsRx53ZkeEjspm9x7W/r5qmQ9+Z4piV36PBZGxatVbfIdEw46LJBdCk9nsMFBCXlWyOO6+uheir3EiJzBvZemeJINWSFpNBsrlIv/MecT/Aruwfu/Dd6xMR3xy3iGfE+d+iZGK8kuQMGuy8JtsjIlmr1fnN2E7satsW6O4EHmyqJBWh2QjglZVs0dpL4kta0utnVKQMajf7zErOZ5g0jvXj1l1WUx/VAi2p5+jjjdl/5s3pwf0iwqWA/lanqgmD+zlQ9hURd6rz69au4SuXKKG/+lZslJuvcYH8a4pCSJ32+FHlLjAIjCZX1tAOBf7oPqymNZa0L1N31ES6s/E5w2IzTAXFch9bkeXH6A18L5W2aVSHDOzqa2ckYTB7GF0Y8N0RNk/nCQa9PDcz0a1g4I9453iu+TvvW6a5ajUG7nVCDBnTB7LNk9YMIz2YAeoLd8LOkQchDVF6M6L42aCRpNshEs+65NJjKmW9b+U6ZTqp8F2Vl8ifDfbhJGca/PJQ8U9DZ7U4ZyXO1HmDUm7olcvsnadspAfz//8pNHKbt5FCBj+5WZTB5HePYHoFMQBZ/6CKDyhX1LSVj2916An3WA3OYELFKvMSWCHXXprZMklFaogFEXGYeLTj4qdJsNFcqH+KWyORUQcbTOA5FKNhf4xj8keqzaUwrDE+GPgV7TA/9BTKtlWtnckrHQI5v4ek6FmZfmthNRHkz6p1nbc9So9TidHBPqZF8uz+SPTOie2RGcBW3hxrFjEaQpOOqSrJQGjPog198rgjGWQ6exgVaWM+NwQQrXhFB1F/ctsjD/flErOCI9WtacWbM4KcCrpX0b19GIadM2RCe80rwlv6nStLMbmm5fHspvcSNqjKjAA8DrVSdO/vo3qzV6RsVvUTSyXHZA1vVO66ZD1sad15fUrk++7jh0AeD+aQA8GqD70gsJ96kZ+DEs6n9bsJmxREcs4R37k2jgITnHI8eEjodhPrCIrae+TEUyCf4pkWflXmWPL9Kd8KEgH+9tZkjl/0Z7/3IvMhVRrCP3iOMXPVd716zf6mItvYcAHQHcvcDmCm6QdUGTm7TfaAmmrOztZ7vnmCQ1jBDnZRM7jGcabusC/eTWvrSYF4ULfuyu6HiH14gV8PWC5VDiUfq/5SYmMXIaOrcRXpNpAqpTY4Iq3yIAnvMDlt8DkmjzMGJ1o3gOXoR3bXYtlPQu7PQuJK2W8k5OP8wrz+FMwowTOBlH+SdH5z+cW9WfZozRtCV8huZeqVbMPg5SN8UA7rZAq9iBhe86PCZ2eAXNI1KUijS4QdR+HFrvB7KAGlMLB1Dp//7VVL/NIHbIleEy2tezKJf1dESfMHD7HTNh/NSqQOq42hQrqY7M1pFbGnsMLWJJct6zsye6vxPdaVHO88lguaxYiHPa5awtc4s1/7Xiu5ADoMsTZERbJhnMcTpp9/z/0XRbGon9ni88B83y4LYEIF4gte7HZ09LN6fIEZQ4swdsvAHfn4k1lT92wIGY9wCaDnIIIVndsEZNLq0aBPqRJe2J2Gca1MRRt6l2PYpoWxSMMVzuTZzQ2GFhYg+SszqYwWpG/X102SEBX3qw6kfVLPWN3O6BobIKkFVAWao/N8OLcnReCH8T+o0XCjvjO1oQpnFFohwzd45wFKETIBcQ390AUAXmejTGRrG1b3N3jMN+W0j6Mf+4Jos2rznZhfG2/24A4w9/8fkIE9AKmftiIjudR7wRHle03t5Vkn0i6+BHurhbMLhDhoYGKSw44d/iSK9JwDBgrjSJskIu7HM2OySQmXYeyvTlEMogd6TPo81aQWt26iSWPWhsKzE9q+b1FXJD7uMVwZLdTyxUo4z/Irg4nLR9wvWUNypm5ujCwttSw8LFAx8YmRXnoK9/UBBQUQkNywKutDTIvgaVOq+UaWZth4SY9HdzWZ91uyG9mGP8lqCntPW7p7qlUSjGWnuqlZqtl4N1Spn2b4Zu18DhA8wCbKO9yPv8TaZFLOGAPtyglbaz5YbS+nrGqL9KyC4h4cBULnFLVDb/cpwUVDG2vIo3pgtpM+44a6oyGChjxUn6GddOKBNqu6II5Rigj3RvR3O5S1C1HhLPxwpUOq+Hawb/bN4CkqjQoHzVQ9m7ns2OTQebuMmRWJqpHtG5O8ClButLXdkExdfNyIkei5Pu0pOfNDx0qOpj5vBy4AC6thTMFBkWv7Y+9vb8HINffIkuudK++Fjf0AikPHc4xe4qWehaG9gXzn5L5Wp0VSqqGAtqFFELKZk91crUAC1axC0W3FSrrKMxwqcgcrecy0weynDnEEDQDpUoTDrN1XWRphrzvw66s3IQYC4cxDE+LkL+jdCnn0thrVNkBziYsXQaLzKni7SMs3FS62oNZEoN3Sc7vyptdjcXSgsXkqdJjDIcQZWO0zpqP4ywbXz1df5/ja6e/tDAbXYCBMYNiTnG0ZWH+o+TwwvWm8zBG1oQAIOD4uB3bhdIxcpTPgYHkkDhLzvChgH62DgfJmOqezwhqMKAFhzBXECN5c15hK26KSlnshX3HzcdZWCfFuJW7SDOnwc/LoRW2wWMH6E2pKrDDayBDzToQLR2SSjJkn6InTg0pvkDrFcG3H2q4qHcpzznN3hyeFd2h/r8JaTI2ygoOLOPf2O1UaFAvDjJHQEWrKEPeo0Z6g2pn+b9ZdtwuJRbxSmgUHIielBycT+FJOMMeOdIlNy62Xsc+DKgg2AB0+sWhKO/yC2Wvv+gwFgVj1q94imlQPo3DBY1t9X1okaWqUTClQlxwmY/fLpieSCjsjIfIdk2nW/4PIqgp1xwlESt9IsrbHP+iRoinQ4wO6fsLnlZs7d1zGc79E0sd/I3J58OEr181ngjNAtG2S9Xi7o/E8V8a4iL5UY0fX6Wrc3PT0KBcmli1LJ6SwHjD7VKSc2M5Wewif5HhVXw4ptWkhE/XB6OjIDDnrsM5YH2t0Tav2k8XvBLpcUhuxZ0dQTRZJD7ZkqIkj49rwM4kqDd7Hw9Xbr15W0/RY5YBUN3XPDm8F7Spu98uyHSsAcsVjd2TLER804q8VTw0Sgocfv7yTX6vIDwTAuqd550ezBRtKBTwjQX+muk7W1ik7p8ySnMGPiH0fe4vhTTH6CInRksOBUJmSwsCZfAIoRNGMUKUfGXsHUOe20Iem8y6XNfyNEv4AGa+qWivviwMDbzq5SYY/qPcXBun5bG7mJnbU34xZpQKKtnBk6v/lhZsB/Njwr25uzhPjzykJtxs7A4Y3sC9TO4a1Zd/513kEvjTjQ7//ZDrzBgsS4YiWB7iET/RZ4ysEn124WCKuUGy0zE88npl6JGrr5l6azoyHc9/CDOehuHpqOqvXeoQ6NFkJehr5X2z8kR0k1gl5hNhaNSSWlgkpkF897XflrEr6x+Ehv3Ks8pUaCc4+txFyrMcttIa65eqe4rixL5mLL0UhyTwDhULoXUtXdY9NJLMIN2/wsGEUuJdlwD9ZiI/CUecSvyNAUxUFmcPDbD09ncZabbYHAwd93EKX/J4PePHoy4eQFN3ZIyLMmZ7Lb8GHx2LpLIISJaJ3Lhm1cG32HLQIv6KZz5dm4BqSAtOU0y9gMXpG32Ri4vODJGSaMPweJ4J3b0vHMbv2DvpeAiSAHP5grCttra6Etx8sMy37PlmWfoA8Cv70PAYVGjqAFHAoWwyqfRxiOs1EMV1RKz4k2HaYhCgsWi5lyyqKs7VfIiCg+4MfyOPO4arJIry88IO4IRvFS4X9ObHF/dBaG6DtVx1eazl5sVlfIKkWEG7vghqcrprmHLIapuACbmcveFGrohPm0DYzYGOv3jHISKhcqUKI3cFQrdk2lF8DSRR+kzF/gveGsa9OVhw/PlT/AU7qLwWpBvGcRavopd3W70WSoxDw8rA0yzeb6Bwgmr6pQ0lWbnmufn+7NMdMquYHQc1PlbpdSUGd33Gyr1r4eiXOKaW3ey6qvaAKoPBMLWCygbVpAsUYBa1MWGf+0MJtAI8TpBL/oC3PvSTW0HWRWfG/A+Hl1aIifszk9CFpwdkyYAsUKdw6hvXGkzGfhxlU8kohdgPjTS1f5RAQNMQNJjWH3CH2rZk25Nx5nxRvTBdEYC+pmUTa+2mEfIE6YX1K7RRQB3qPTtgyGAQivNOd2yH7XEOXaqE0fKUhGiW9fkr2wgNNeFF12nu3qjhyZjH/8PTC6A1iXiQu4VMYr2TBK0dlF/ZeH8jj1ezIOiIFNuS1Ebqs/muz+9tcKASYDxSY8055Ox9UCs4fMV/Y8QqWj74q5gTInT/emW1IIDKvEtWe/P99v/R+4VFGl+J2ppUYyF/XNv4lkNalZ6mJRfGfT6BDFJpnZ+nmOqL65km3Yqmb5nz/ffMvpesTm02mfypNGJQqQwOVF0jPYKxxsG5bwv25MbAms61c8UylRX+wDANY5wNgksey6G4sC847UK4RRw4FWrKzqrJ0lRy1ckhLDz1P+ac5E/nkuW4h7ErWj58nNuyzFXcWIfykuUYZszfnoPQSfGB1RUYqOI+JTm2QZcntgujrEo6s0z2uuZG9Qo9Nn+uWj7OEG33Nsf1vDGIuoeYeXksIByh1dDBATZarCIceb7wTWoOcSoBYr563aBW/1AKKzN6QmofwLUQ0Ws6+qd2eRpBjaaLXLNsJpslUClAqaOPq7gHeFDcX60seCDucgAjL6U38efEG4I/I4zdQC6tUqoZ/7m1ZxeXyIcOAfMvw6OSfTXXygj/GH8APBK/61nJ+kdYKtviYig3BxOMJJnjxi7/60QfxTsenqaIFEuSWr68ACi4sWK+H7uZh1jjXzPhFHWWOvOEe+3OH7XVBXNtF4HZ3KrPM7X4WubNA3bMEvxsR63iplINszHf1kbYLQJ65DuKa9VfitvksX18DnP2+IGJ99Y07EiV80GoBE1Kr81X5/cXnK13uEF+etnwduAI74ok9E21hYXDp+sIquWHNxExL7eVBADq4gc5f42kNd8/ZunHimhQQn0GbGvW+d6yO42aukpezTA9ND3V2BODjjP80kxR6L9rCOHn9bPs2tLSRG2TPA3nJ+LKvnBFlSNLfGTKCEmdcmHOPPCCmkzwJ/j/ENI1HOkB2dgSd0ZKRSpwb1EfTZ6ndwkdJx2evJO4w3V7uu4LrpYS6/GChwg==</div><div id="enc_passwd"> <input id="enc_pwd_input" type="text" style="border-radius: 5px;border-style: groove;height: 30px;width: 50%;cursor: auto;font-size: 102%;color: currentColor;outline: none;text-overflow: initial;padding-left: 5px;" onkeydown="if (event.keyCode == 13) { decrypt(); return false;}"> <input type="submit" value="解&nbsp;密" onclick="decrypt()" style="width: 58px;height: 34px;border-radius: 5px;background-color: white;border-style: solid;color: currentColor;"><div id="enc_error" style="display: inline-block;color: #d84527;margin-left: 10px"></div>
<script>
var onError = function(error) {
	document.getElementById("enc_error").innerHTML = "password error!"
};
function decrypt() {
var passwd = document.getElementById("enc_pwd_input").value;
console.log(passwd);
doDecrypt(passwd, onError);
}
</script>
</div>]]></content>
      
        <categories>
            
            <category> dailyDiary </category>
            
        </categories>
        
        
        <tags>
            
            <tag> morningDiary </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[react-redux学习笔记]]></title>
      <url>/2017/09/25/front-end/React/TechStack/redux/</url>
      <content type="html"><![CDATA[<p>redux相关笔记，,未完成整理<br><a id="more"></a></p>
<h1 id="redux概念"><a href="#redux概念" class="headerlink" title="redux概念"></a>redux概念</h1><p>Array的reduce函数：reduce(function(初始值，当前值，当前索引，调用reduce的数组){}，预设初始值（可选）)<br>Reduce的回调函数即被称为reducer<br>开源Lib，提供可预测的state容量管理器，与react无相依性。<br>Redux 认为，一个应用程序中，所有应用模块之间需要共享访问的数据，都应该放在 State 对象中。State以树形结构保存不同数据。</p>
<h2 id="Flux、Redux区别"><a href="#Flux、Redux区别" class="headerlink" title="Flux、Redux区别"></a>Flux、Redux区别</h2><blockquote>
<p>react - 视图引擎／库。本质上和 flux／redux 都没有依赖关系</p>
<p>flux - 和 react 出自于同一家公司（脸书），它是一种思路，一种如何架构应用程序的理念；在这种理念之下，具体用什么来充当视图层／数据层……都不重要——当然，最偏爱的视图层自然是系出同门的 react。<br>简单说，Flux 是一种架构思想，专门解决软件的结构问题。它跟MVC 架构是同一类东西，但是更加简单和清晰。将应用分为四部分:View(视图层)+Action(视图层发出消息)+Dispatchers(接收Action，执行回调函数)+Store(存放状态)</p>
<p>redux - 架构上深受 flux 启发，实现上却更接近于 elm，或者说更倾向于函数式编程的一个数据层实现。和 flux 架构对数据层的描述最大的区别就在于 redux 是采用不可变单一状态树来管理应用程序数据的。用 redux 充当数据层也可以完全兼容 flux 架构（但没好处）并且 redux 对视图层也没有倾向性，只是目前用的比较多的还是 react</p>
<p>Elm 是一种编程语言，它会被编译为 HTML5: HTML, CSS 和 JavaScript。根据你显示输出结果的不同，它可能是一个内置了对象的 <canvas>，或者一个更传统的网页。让我重复一遍，Elm 是一种语言，它会被编译为 三种语言 来构建 web 应用。而且，它是一个拥有强类型和 不可变（immutable）数据结构的函数式语言。</canvas></p>
</blockquote>
<h1 id="react-redux使用"><a href="#react-redux使用" class="headerlink" title="react-redux使用"></a>react-redux使用</h1><h2 id="actions"><a href="#actions" class="headerlink" title="actions"></a>actions</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line"><span class="comment">/*action*/</span></div><div class="line"></div><div class="line"><span class="keyword">export</span> <span class="keyword">const</span> INCREMENT = <span class="string">"counter/INCREMENT"</span>;</div><div class="line"><span class="keyword">export</span> <span class="keyword">const</span> DECREMENT = <span class="string">"counter/DECREMENT"</span>;</div><div class="line"><span class="keyword">export</span> <span class="keyword">const</span> RESET = <span class="string">"counter/RESET"</span>;</div><div class="line"></div><div class="line"><span class="keyword">export</span> <span class="function"><span class="keyword">function</span> <span class="title">increment</span>(<span class="params"></span>) </span>&#123;</div><div class="line">    <span class="keyword">return</span> &#123;<span class="attr">type</span>: INCREMENT&#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">export</span> <span class="function"><span class="keyword">function</span> <span class="title">decrement</span>(<span class="params"></span>) </span>&#123;</div><div class="line">    <span class="keyword">return</span> &#123;<span class="attr">type</span>: DECREMENT&#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">export</span> <span class="function"><span class="keyword">function</span> <span class="title">reset</span>(<span class="params"></span>) </span>&#123;</div><div class="line">    <span class="keyword">return</span> &#123;<span class="attr">type</span>: RESET&#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="reducer"><a href="#reducer" class="headerlink" title="reducer"></a>reducer</h2><h3 id="FIXME-state直接存储在reducer中"><a href="#FIXME-state直接存储在reducer中" class="headerlink" title="FIXME: state直接存储在reducer中??"></a>FIXME: state直接存储在reducer中??</h3><p>reducer是一个纯函数，接收action和旧的state,生成新的state.<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> &#123;INCREMENT, DECREMENT, RESET&#125; <span class="keyword">from</span> <span class="string">'../actions/counter'</span>; </div><div class="line"></div><div class="line"><span class="comment">/*</span></div><div class="line"><span class="comment">* 初始化state</span></div><div class="line"><span class="comment"> */</span></div><div class="line"></div><div class="line"><span class="keyword">const</span> initState = &#123;</div><div class="line">    count: <span class="number">0</span></div><div class="line">&#125;;</div><div class="line"><span class="comment">/*</span></div><div class="line"><span class="comment">* reducer</span></div><div class="line"><span class="comment"> */</span></div><div class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="function"><span class="keyword">function</span> <span class="title">reducer</span>(<span class="params">state = initState, action</span>) </span>&#123;</div><div class="line">    <span class="keyword">switch</span> (action.type) &#123;</div><div class="line">        <span class="keyword">case</span> INCREMENT:</div><div class="line">            <span class="keyword">return</span> &#123;</div><div class="line">                count: state.count + <span class="number">1</span></div><div class="line">            &#125;;</div><div class="line">        <span class="keyword">case</span> DECREMENT:</div><div class="line">            <span class="keyword">return</span> &#123;</div><div class="line">                count: state.count - <span class="number">1</span></div><div class="line">            &#125;;</div><div class="line">        <span class="keyword">case</span> RESET:</div><div class="line">            <span class="keyword">return</span> &#123;<span class="attr">count</span>: <span class="number">0</span>&#125;;</div><div class="line">        <span class="keyword">default</span>:</div><div class="line">            <span class="keyword">return</span> state</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<h2 id="整合reducer"><a href="#整合reducer" class="headerlink" title="整合reducer"></a>整合reducer</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> counter <span class="keyword">from</span> <span class="string">'./reducers/counter'</span>;</div><div class="line"></div><div class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="function"><span class="keyword">function</span> <span class="title">combineReducers</span>(<span class="params">state = &#123;&#125;, action</span>) </span>&#123;</div><div class="line">    <span class="keyword">return</span> &#123;</div><div class="line">        counter: counter(state.counter, action)</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="store-最重要的"><a href="#store-最重要的" class="headerlink" title="store(最重要的!)"></a>store(最重要的!)</h2><p>通过下面代码获取一个store实例<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> &#123;createStore&#125; <span class="keyword">from</span> <span class="string">'redux'</span>;</div><div class="line"><span class="keyword">import</span> combineReducers <span class="keyword">from</span> <span class="string">'./reducers.js'</span>;<span class="comment">// 可以是任意自定义的reducer</span></div><div class="line"><span class="keyword">let</span> store = createStore(combineReducers);</div></pre></td></tr></table></figure></p>
<p>作用:</p>
<blockquote>
<ol>
<li>维持应用的 state；</li>
<li>提供 getState() 方法获取 state；</li>
<li>提供 dispatch(action) 触发reducers方法更新 state；</li>
<li>通过subscribe(listener) 注册监听器;</li>
<li>通过 subscribe(listener) 返回的函数注销监听器。<br>实例：<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> &#123;createStore&#125; <span class="keyword">from</span> <span class="string">'redux'</span>;</div><div class="line"><span class="keyword">import</span> combineReducers <span class="keyword">from</span> <span class="string">'./reducers.js'</span>;</div><div class="line"></div><div class="line"><span class="keyword">let</span> store = createStore(combineReducers);</div><div class="line"></div><div class="line"><span class="keyword">export</span> <span class="keyword">default</span> store;</div></pre></td></tr></table></figure>
</li>
</ol>
</blockquote>
<h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> &#123;increment, decrement, reset&#125; <span class="keyword">from</span> <span class="string">'./actions/counter'</span>;</div><div class="line"></div><div class="line"><span class="keyword">import</span> store <span class="keyword">from</span> <span class="string">'./store'</span>;</div><div class="line"></div><div class="line"><span class="comment">// 打印初始状态</span></div><div class="line"><span class="built_in">console</span>.log(store.getState());</div><div class="line"></div><div class="line"><span class="comment">// 每次 state 更新时，打印日志</span></div><div class="line"><span class="comment">// 注意 subscribe() 返回一个函数用来注销监听器</span></div><div class="line"><span class="keyword">let</span> unsubscribe = store.subscribe(<span class="function"><span class="params">()</span> =&gt;</span></div><div class="line">    <span class="built_in">console</span>.log(store.getState())</div><div class="line">);</div><div class="line"></div><div class="line"><span class="comment">// 发起一系列 action</span></div><div class="line">store.dispatch(increment());</div><div class="line">store.dispatch(decrement());</div><div class="line">store.dispatch(reset());</div><div class="line"><span class="comment">// 停止监听 state 更新</span></div><div class="line">unsubscribe();</div></pre></td></tr></table></figure>
<h2 id="connect"><a href="#connect" class="headerlink" title="connect"></a>connect</h2><p>connect接收两个参数，一个mapStateToProps,就是把redux的state，转为组件的Props，还有一个参数是mapDispatchToprops,<br>就是把发射actions的方法，转为Props属性函数。<br>示例<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> React, &#123;Component&#125; <span class="keyword">from</span> <span class="string">'react'</span>;</div><div class="line"><span class="keyword">import</span> &#123;increment, decrement, reset&#125; <span class="keyword">from</span> <span class="string">'actions/counter'</span>;</div><div class="line"><span class="keyword">import</span> &#123;connect&#125; <span class="keyword">from</span> <span class="string">'react-redux'</span>;</div><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">Counter</span> <span class="keyword">extends</span> <span class="title">Component</span> </span>&#123;</div><div class="line">  ...组件内容</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">const</span> mapStateToProps = <span class="function">(<span class="params">state</span>) =&gt;</span> &#123;</div><div class="line">    <span class="keyword">return</span> &#123;</div><div class="line">        counter: state.counter</div><div class="line">    &#125;</div><div class="line">&#125;;</div><div class="line"></div><div class="line"><span class="keyword">const</span> mapDispatchToProps = <span class="function">(<span class="params">dispatch</span>) =&gt;</span> &#123;</div><div class="line">    <span class="keyword">return</span> &#123;</div><div class="line">        increment: <span class="function"><span class="params">()</span> =&gt;</span> &#123;</div><div class="line">            dispatch(increment())</div><div class="line">        &#125;,</div><div class="line">        decrement: <span class="function"><span class="params">()</span> =&gt;</span> &#123;</div><div class="line">            dispatch(decrement())</div><div class="line">        &#125;,</div><div class="line">        reset: <span class="function"><span class="params">()</span> =&gt;</span> &#123;</div><div class="line">            dispatch(reset())</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">&#125;;</div><div class="line"></div><div class="line"><span class="keyword">export</span> <span class="keyword">default</span> connect(mapStateToProps, mapDispatchToProps)(Counter);</div></pre></td></tr></table></figure></p>
<h2 id="store"><a href="#store" class="headerlink" title="store"></a>store</h2><p>store定义形式和redux的store相同</p>
<h2 id="使用Provider传入组件"><a href="#使用Provider传入组件" class="headerlink" title="使用Provider传入组件"></a>使用Provider传入组件</h2><blockquote>
<p>所有容器组件都可以访问 Redux store，所以可以手动监听它。一种方式是把它以 props 的形式传入到所有容器组件中。但这太麻烦了，因为必须要用 store 把展示组件包裹一层，仅仅是因为恰好在组件树中渲染了一个容器组件。<br>建议的方式是使用指定的 React Redux 组件来魔法般的让所有容器组件都可以访问 store，而不必显示地传递它。只需要在渲染根组件时使用即可。</p>
</blockquote>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> React <span class="keyword">from</span> <span class="string">'react'</span>;</div><div class="line"><span class="keyword">import</span> ReactDom <span class="keyword">from</span> <span class="string">'react-dom'</span>;</div><div class="line"><span class="keyword">import</span> &#123;AppContainer&#125; <span class="keyword">from</span> <span class="string">'react-hot-loader'</span>;</div><div class="line"><span class="keyword">import</span> &#123;Provider&#125; <span class="keyword">from</span> <span class="string">'react-redux'</span>;</div><div class="line"><span class="keyword">import</span> store <span class="keyword">from</span> <span class="string">'./redux/store'</span>;</div><div class="line"></div><div class="line"><span class="keyword">import</span> getRouter <span class="keyword">from</span> <span class="string">'router/router'</span>;</div><div class="line"></div><div class="line"><span class="comment">/*初始化*/</span></div><div class="line">renderWithHotReload(getRouter());</div><div class="line"></div><div class="line"><span class="comment">/*热更新*/</span></div><div class="line"><span class="keyword">if</span> (<span class="built_in">module</span>.hot) &#123;</div><div class="line">    <span class="built_in">module</span>.hot.accept(<span class="string">'./router/router'</span>, () =&gt; &#123;</div><div class="line">        <span class="keyword">const</span> getRouter = <span class="built_in">require</span>(<span class="string">'router/router'</span>).default;</div><div class="line">        renderWithHotReload(getRouter());</div><div class="line">    &#125;);</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">renderWithHotReload</span>(<span class="params">RootElement</span>) </span>&#123;</div><div class="line">    ReactDom.render(</div><div class="line">        &lt;AppContainer&gt;</div><div class="line">            &lt;Provider store=&#123;store&#125;&gt;</div><div class="line">                &#123;RootElement&#125;</div><div class="line">            &lt;<span class="regexp">/Provider&gt;</span></div><div class="line"><span class="regexp">        &lt;/</span>AppContainer&gt;,</div><div class="line">        <span class="built_in">document</span>.getElementById(<span class="string">'app'</span>)</div><div class="line">    )</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="redux异步处理库"><a href="#redux异步处理库" class="headerlink" title="redux异步处理库"></a>redux异步处理库</h2><p>参考<a href="https://github.com/sorrycc/blog/issues/6" target="_blank" rel="external">支付宝前端应用架构的发展和选择</a></p>
<blockquote>
<p>redux-thunk：支持函数形式的 action，这样在 action 里就可以 dispatch 其他的 action 了。这是最简单应该也是用地最广的方案吧，对于简单项目应该是够的。<br>redux-promise：redux-promise 和上面的类似，支持 promise 形式的 action，这样 action 里就可以通过看似同步的方式来组织代码。<br>redux-saga：</p>
</blockquote>
<h2 id="redux-thunk"><a href="#redux-thunk" class="headerlink" title="redux-thunk"></a>redux-thunk</h2><p>参考<a href="http://www.ruanyifeng.com/blog/2016/09/redux_tutorial_part_two_async_operations.html" target="_blank" rel="external">Redux入门教程-阮一峰</a></p>
<blockquote>
<p>中间件就是一个函数，对store.dispatch方法进行了改造，在发出 Action 和执行 Reducer 这两步之间，添加了其他功能。<br>下面代码中，对store.dispatch进行了重定义，在发送 Action 前后添加了打印功能。这就是中间件的雏形。<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">let</span> next = store.dispatch;</div><div class="line">store.dispatch = <span class="function"><span class="keyword">function</span> <span class="title">dispatchAndLog</span>(<span class="params">action</span>) </span>&#123;</div><div class="line">  <span class="built_in">console</span>.log(<span class="string">'dispatching'</span>, action);</div><div class="line">  next(action);</div><div class="line">  <span class="built_in">console</span>.log(<span class="string">'next state'</span>, store.getState());</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
</blockquote>
<h2 id="Redux-saga"><a href="#Redux-saga" class="headerlink" title="Redux-saga"></a>Redux-saga</h2><p>用于管理 action，处理异步逻辑的中间件。可测试、可 mock、声明式的指令。<br>redux-saga 通过创建 Sagas 将所有的异步操作逻辑收集在一个地方集中处理，可以用来代替 redux-thunk 中间件。</p>
]]></content>
      
        <categories>
            
            <category> Front-end </category>
            
            <category> React </category>
            
        </categories>
        
        
        <tags>
            
            <tag> React </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[flux学习笔记整理]]></title>
      <url>/2017/09/25/front-end/React/TechStack/flux/</url>
      <content type="html"><![CDATA[<p>Flux笔记相关,未完成整理<br><a id="more"></a><br>项目逻辑：<br>Action：导入dispacher和actionType，导出一个带action变化处理方法的对象，方法中调用Dispatcher分发action<br>Store：导入dispacher和actionType，先继承EventEmitter实现回调函数绑定与解绑方法，之后实例化对象并在dispacher中注册action回调函数。之后导出此对象<br>Dispatcher：导入Dispatcher继承Dispatcher，重写handleAction方法，实例化并导出<br>View：导入react、component、前面导出的action，在组件中实现，在constructor•中绑定触发事件并初始化state，之后重写触发函数（要有action的变化去触发dispatcher），之后在render返回的组件中将组件的状态与触发函数绑定起来，最后导出此组件。</p>
<h3 id="Dispatcher配置"><a href="#Dispatcher配置" class="headerlink" title="Dispatcher配置"></a>Dispatcher配置</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> &#123;Dispatcher&#125; <span class="keyword">from</span> <span class="string">'flux'</span>;</div><div class="line"><span class="comment">//继承API,主要是继承了 dispatch、register 和 subscribe 的方法</span></div><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">DispatcherClass</span> <span class="keyword">extends</span> <span class="title">Dispatcher</span>()</span>&#123;<span class="comment">//</span></div><div class="line">    handleAction(action)&#123;<span class="comment">//重写方法，有Action时会被触发</span></div><div class="line">        <span class="keyword">this</span>.dispatch(&#123;</div><div class="line">            type:action.type,</div><div class="line">            payload:action.payload,</div><div class="line">        &#125;);</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line"><span class="keyword">const</span> AppDispatcher =<span class="keyword">new</span> DispatcherClass();<span class="comment">//实例化Class</span></div><div class="line"><span class="keyword">export</span> <span class="keyword">default</span> AppDispatcher;<span class="comment">//导出常量（ES6)</span></div></pre></td></tr></table></figure>
<h3 id="ACTION配置"><a href="#ACTION配置" class="headerlink" title="ACTION配置"></a>ACTION配置</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line"><span class="comment">//导入Dispatcher</span></div><div class="line"><span class="keyword">import</span> AppDispatcher <span class="keyword">from</span> <span class="string">'../dispatch/AppDispatcher.js'</span>;</div><div class="line"><span class="comment">//导入actionTypes</span></div><div class="line"><span class="keyword">import</span> &#123;ADD_TODO&#125; <span class="keyword">from</span> <span class="string">'../constants/actionTypes'</span>;</div><div class="line"><span class="comment">//???????????</span></div><div class="line"><span class="keyword">export</span> <span class="keyword">const</span> TodoActions =&#123;</div><div class="line">    addToDO(text)&#123;</div><div class="line">        AppDispatcher.handleAction(&#123;</div><div class="line">            type:ADD_TODO,</div><div class="line">            payload:&#123;text,&#125;,</div><div class="line">        &#125;);</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>]]></content>
      
        <categories>
            
            <category> Front-end </category>
            
            <category> React </category>
            
        </categories>
        
        
        <tags>
            
            <tag> React </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[dva学习笔记]]></title>
      <url>/2017/09/25/front-end/React/TechStack/dva/</url>
      <content type="html"><![CDATA[<p><a href="https://github.com/dvajs/dva/blob/master/docs/API_zh-CN.md#onstatechangefn" target="_blank" rel="external">dva API</a><br>dva相关笔记,未完成整理<br><a id="more"></a><br>在调用 const app = dva(opt)返回dva实例，并注册了钩子函数; 初始化之后，dva为我们提供了三个参数入口，分别为app.model、app.router、app.start。</p>
<ol>
<li>app.model();<br>1)    namespace,字符串，不支持多层<br>2)    state：初始值opts.initialState<br>3)    reducer：<br>以 key/value 格式定义 reducer。用于处理同步操作，唯一可以修改 state 的地方。由 action 触发。<br>格式为 (state, action) =&gt; newState 或 [(state, action) =&gt; newState, enhancer]。<br>4)    effects<br>以 key/value 格式定义 effect。用于处理异步操作和业务逻辑，不直接修改 state。由 action 触发，可以触发 action，可以和服务器交互，可以获取全局 state 的数据等等。<br>格式为 <em>(action, effects) =&gt; void 或 [</em>(action, effects) =&gt; void, { type }]。<br>5)    subscriptions<br>以 key/value 格式定义 subscription。subscription 是订阅，用于订阅一个数据源，然后根据需要 dispatch 相应的 action。在 app.start() 时被执行，数据源可以是当前的时间、服务器的 websocket 连接、keyboard 输入、geolocation 变化、history 路由变化等等。<br>格式为 ({ dispatch, history }, done) =&gt; listenFunction。<br>注意：如果要使用 app.unmodel()，subscription 必须返回 unlisten 方法，用于取消数据订阅。</li>
<li>app.unmodel(namespace)<br>取消 model 注册，清理 reducers, effects 和 subscriptions。subscription 如果没有返回 unlisten 函数，使用 app.unmodel 会给予警告。</li>
<li>app.router(({ history, app }) =&gt; {RouterConfig(如：return (<router></router>);)})</li>
<li>app.start(selector);</li>
</ol>
<h2 id="roadhog"><a href="#roadhog" class="headerlink" title="roadhog"></a>roadhog</h2><blockquote>
<p>roadhog和webpack DevServer相比较有哪些优势和不足？<br>roadhog 是基于 webpackDevServer 封装的，roadhog server = webpackDevServer + create-react-app 的配置</p>
</blockquote>
<h2 id="实例"><a href="#实例" class="headerlink" title="实例"></a>实例</h2><h1 id="dva使用"><a href="#dva使用" class="headerlink" title="dva使用"></a>dva使用</h1><h2 id="Model的使用"><a href="#Model的使用" class="headerlink" title="Model的使用"></a>Model的使用</h2><ol>
<li><p>新建model 基本示例代码如下</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</div><div class="line">  namespace: <span class="string">'modelTest'</span>,</div><div class="line">  state: &#123;</div><div class="line">    cnt: <span class="number">55</span>,</div><div class="line">  &#125;,</div><div class="line">  subscriptions: &#123;</div><div class="line">    setup (&#123; dispatch, history &#125;) &#123;</div><div class="line">      history.listen(<span class="function"><span class="params">location</span> =&gt;</span> &#123;</div><div class="line">        <span class="keyword">if</span> (location.pathname === <span class="string">'/log/query/protectlog'</span>) &#123;</div><div class="line">          dispatch(&#123;</div><div class="line">            type: <span class="string">'set'</span>,</div><div class="line">            payload: &#123; <span class="attr">cnt</span>: <span class="number">8</span> &#125;,</div><div class="line">          &#125;)</div><div class="line">        &#125;</div><div class="line">      &#125;)</div><div class="line">    &#125;,</div><div class="line">  &#125;,</div><div class="line">  effects: &#123;</div><div class="line">  &#125;,</div><div class="line">  reducers: &#123;</div><div class="line">    set (state, action) &#123;</div><div class="line">      <span class="keyword">const</span> &#123; cnt &#125; = action.payload</div><div class="line">      <span class="built_in">console</span>.log(<span class="string">'set'</span>, cnt)</div><div class="line">      <span class="keyword">return</span> &#123; cnt &#125;</div><div class="line">    &#125;,</div><div class="line">    add (state) &#123;</div><div class="line">      <span class="keyword">const</span> cnt = state.cnt + <span class="number">1</span></div><div class="line">      <span class="built_in">console</span>.log(<span class="string">'add'</span>, cnt)</div><div class="line">      <span class="keyword">return</span> &#123;</div><div class="line">        cnt,</div><div class="line">      &#125;</div><div class="line">    &#125;,</div><div class="line">    dec (state) &#123;</div><div class="line">      <span class="keyword">const</span> cnt = state.cnt - <span class="number">1</span></div><div class="line">      <span class="built_in">console</span>.log(<span class="string">'dec'</span>, cnt)</div><div class="line">      <span class="keyword">return</span> &#123;</div><div class="line">        cnt,</div><div class="line">      &#125;</div><div class="line">    &#125;,</div><div class="line">  &#125;,</div><div class="line">&#125;</div></pre></td></tr></table></figure>
</li>
<li><p>在router，getComponent中注册model???(why)<br>以下为简单示例</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div><div class="line">126</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> React <span class="keyword">from</span> <span class="string">'react'</span></div><div class="line"><span class="keyword">import</span> PropTypes <span class="keyword">from</span> <span class="string">'prop-types'</span></div><div class="line"><span class="keyword">import</span> &#123; Router &#125; <span class="keyword">from</span> <span class="string">'dva/router'</span></div><div class="line"><span class="keyword">import</span> App <span class="keyword">from</span> <span class="string">'./routes/app'</span></div><div class="line"><span class="keyword">const</span> registerModel = <span class="function">(<span class="params">app, model</span>) =&gt;</span> &#123;</div><div class="line">  <span class="keyword">if</span> (!(app._models.filter(<span class="function"><span class="params">m</span> =&gt;</span> m.namespace === model.namespace).length === <span class="number">1</span>)) &#123;</div><div class="line">    app.model(model)</div><div class="line">  &#125;</div><div class="line">&#125;</div><div class="line"><span class="keyword">const</span> Routers = <span class="function"><span class="keyword">function</span> (<span class="params">&#123; history, app &#125;</span>) </span>&#123;</div><div class="line">  <span class="keyword">const</span> routes = [</div><div class="line">    &#123;</div><div class="line">      path: <span class="string">'/'</span>,</div><div class="line">      component: App,</div><div class="line">	   <span class="comment">// 指定主目录</span></div><div class="line">      getIndexRoute (nextState, cb) &#123;</div><div class="line">		  <span class="comment">// webpack  commonjs异步加载语法</span></div><div class="line">        <span class="built_in">require</span>.ensure([], (<span class="built_in">require</span>) =&gt; &#123;</div><div class="line">          registerModel(app, <span class="built_in">require</span>(<span class="string">'./models/dashboard'</span>))</div><div class="line">          cb(<span class="literal">null</span>, &#123; <span class="attr">component</span>: <span class="built_in">require</span>(<span class="string">'./routes/dashboard/'</span>) &#125;)</div><div class="line">        &#125;, <span class="string">'dashboard'</span>)</div><div class="line">      &#125;,</div><div class="line">      childRoutes: [</div><div class="line">        &#123;</div><div class="line">          path: <span class="string">'dashboard'</span>,</div><div class="line">          getComponent (nextState, cb) &#123;</div><div class="line">            <span class="built_in">require</span>.ensure([], (<span class="built_in">require</span>) =&gt; &#123;</div><div class="line">              registerModel(app, <span class="built_in">require</span>(<span class="string">'./models/dashboard'</span>))</div><div class="line">              cb(<span class="literal">null</span>, <span class="built_in">require</span>(<span class="string">'./routes/dashboard/'</span>))</div><div class="line">            &#125;, <span class="string">'dashboard'</span>)</div><div class="line">          &#125;,</div><div class="line">        &#125;, &#123;</div><div class="line">          path: <span class="string">'login'</span>,</div><div class="line">          getComponent (nextState, cb) &#123;</div><div class="line">            <span class="built_in">require</span>.ensure([], (<span class="built_in">require</span>) =&gt; &#123;</div><div class="line">              registerModel(app, <span class="built_in">require</span>(<span class="string">'./models/login'</span>))</div><div class="line">              cb(<span class="literal">null</span>, <span class="built_in">require</span>(<span class="string">'./routes/login/'</span>))</div><div class="line">            &#125;, <span class="string">'login'</span>)</div><div class="line">          &#125;,</div><div class="line">        &#125;, &#123;</div><div class="line">          path: <span class="string">'chart/lineChart'</span>,</div><div class="line">          getComponent (nextState, cb) &#123;</div><div class="line">            <span class="built_in">require</span>.ensure([], (<span class="built_in">require</span>) =&gt; &#123;</div><div class="line">              cb(<span class="literal">null</span>, <span class="built_in">require</span>(<span class="string">'./routes/chart/lineChart/'</span>))</div><div class="line">            &#125;, <span class="string">'chart-lineChart'</span>)</div><div class="line">          &#125;,</div><div class="line">        &#125;, &#123;</div><div class="line">          path: <span class="string">'chart/barChart'</span>,</div><div class="line">          getComponent (nextState, cb) &#123;</div><div class="line">            <span class="built_in">require</span>.ensure([], (<span class="built_in">require</span>) =&gt; &#123;</div><div class="line">              cb(<span class="literal">null</span>, <span class="built_in">require</span>(<span class="string">'./routes/chart/barChart/'</span>))</div><div class="line">            &#125;, <span class="string">'chart-barChart'</span>)</div><div class="line">          &#125;,</div><div class="line">        &#125;, &#123;</div><div class="line">          path: <span class="string">'log'</span>,</div><div class="line">          childRoutes: [</div><div class="line">            &#123;</div><div class="line">              path: <span class="string">'query'</span>,</div><div class="line">              childRoutes: [</div><div class="line">                &#123;</div><div class="line">                  path: <span class="string">'webvisit'</span>,</div><div class="line">                  getComponent (nextState, cb) &#123;</div><div class="line">                    <span class="built_in">require</span>.ensure([], (<span class="built_in">require</span>) =&gt; &#123;</div><div class="line">                      cb(<span class="literal">null</span>, <span class="built_in">require</span>(<span class="string">'./routes/log/query/webvisit'</span>))</div><div class="line">                    &#125;, <span class="string">'log-query-webvisit'</span>)</div><div class="line">                  &#125;,</div><div class="line">                &#125;,</div><div class="line">                &#123;</div><div class="line">                  path: <span class="string">'imchat'</span>,</div><div class="line">                  getComponent (nextState, cb) &#123;</div><div class="line">                    <span class="built_in">require</span>.ensure([], (<span class="built_in">require</span>) =&gt; &#123;</div><div class="line">                      cb(<span class="literal">null</span>, <span class="built_in">require</span>(<span class="string">'./routes/log/query/imchat'</span>))</div><div class="line">                    &#125;, <span class="string">'log-query-imchat'</span>)</div><div class="line">                  &#125;,</div><div class="line">                &#125;,</div><div class="line">              ],</div><div class="line">            &#125;,</div><div class="line">            &#123;</div><div class="line">              path: <span class="string">'system'</span>,</div><div class="line">              childRoutes: [</div><div class="line">                &#123;</div><div class="line">                  path: <span class="string">'alert'</span>,</div><div class="line">                  getComponent (nextState, cb) &#123;</div><div class="line">                    <span class="built_in">require</span>.ensure([], (<span class="built_in">require</span>) =&gt; &#123;</div><div class="line">                      cb(<span class="literal">null</span>, <span class="built_in">require</span>(<span class="string">'./routes/log/system/alert'</span>))</div><div class="line">                    &#125;, <span class="string">'log-system-alert'</span>)</div><div class="line">                  &#125;,</div><div class="line">                &#125;,</div><div class="line">                &#123;</div><div class="line">                  path: <span class="string">'tunnel-info'</span>,</div><div class="line">                  getComponent (nextState, cb) &#123;</div><div class="line">                    <span class="built_in">require</span>.ensure([], (<span class="built_in">require</span>) =&gt; &#123;</div><div class="line">                      cb(<span class="literal">null</span>, <span class="built_in">require</span>(<span class="string">'./routes/network/vpn/tunnel/Info'</span>))</div><div class="line">                    &#125;, <span class="string">'network-vpntunnel-info'</span>)</div><div class="line">                  &#125;,</div><div class="line">                &#125;,</div><div class="line">                &#123;</div><div class="line">                  path: <span class="string">'cert'</span>,</div><div class="line">                  getComponent (nextState, cb) &#123;</div><div class="line">                    <span class="built_in">require</span>.ensure([], (<span class="built_in">require</span>) =&gt; &#123;</div><div class="line">                      cb(<span class="literal">null</span>, <span class="built_in">require</span>(<span class="string">'./routes/network/vpn/cert'</span>))</div><div class="line">                    &#125;, <span class="string">'network-cert'</span>)</div><div class="line">                  &#125;,</div><div class="line">                &#125;,</div><div class="line">              ],</div><div class="line">            &#125;,</div><div class="line">          ],</div><div class="line">        &#125;, &#123;</div><div class="line">		<span class="comment">// 通配符，贪婪匹配，只能放最后（不然可能覆盖所有匹配）</span></div><div class="line">          path: <span class="string">'*'</span>,</div><div class="line">          getComponent (nextState, cb) &#123;</div><div class="line">            <span class="built_in">require</span>.ensure([], (<span class="built_in">require</span>) =&gt; &#123;</div><div class="line">              cb(<span class="literal">null</span>, <span class="built_in">require</span>(<span class="string">'./routes/error/'</span>))</div><div class="line">            &#125;, <span class="string">'error'</span>)</div><div class="line">          &#125;,</div><div class="line">        &#125;,</div><div class="line">      ],</div><div class="line">    &#125;,</div><div class="line">  ]</div><div class="line">  <span class="keyword">return</span> <span class="xml"><span class="tag">&lt;<span class="name">Router</span> <span class="attr">history</span>=<span class="string">&#123;history&#125;</span> <span class="attr">routes</span>=<span class="string">&#123;routes&#125;</span> /&gt;</span></span></div><div class="line"><span class="xml">&#125;</span></div><div class="line"><span class="xml">Routers.propTypes = &#123;</span></div><div class="line"><span class="xml">  history: PropTypes.object,</span></div><div class="line"><span class="xml">  app: PropTypes.object,</span></div><div class="line"><span class="xml">&#125;</span></div><div class="line"><span class="xml">export default Routers</span></div></pre></td></tr></table></figure>
</li>
<li><p>在组件中connect Model,dva调用的是<a href="#ReduxConnect">Redux的connect方法</a>,示例如下</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> React <span class="keyword">from</span> <span class="string">'react'</span></div><div class="line"><span class="keyword">import</span> PropTypes <span class="keyword">from</span> <span class="string">'prop-types'</span></div><div class="line"><span class="keyword">import</span> &#123; connect &#125; <span class="keyword">from</span> <span class="string">'dva'</span></div><div class="line"><span class="keyword">import</span> &#123; Button &#125; <span class="keyword">from</span> <span class="string">'antd'</span></div><div class="line"></div><div class="line"><span class="keyword">const</span> TestModel = <span class="function">(<span class="params">&#123; dispatch, cnt &#125;</span>) =&gt;</span> &#123;</div><div class="line">  <span class="keyword">const</span> onDec = <span class="function"><span class="params">()</span> =&gt;</span> &#123;</div><div class="line">    dispatch(&#123;</div><div class="line">      type: <span class="string">'modelTest/dec'</span>,</div><div class="line">      payload: &#123; &#125;,</div><div class="line">    &#125;)</div><div class="line">  &#125;</div><div class="line">  <span class="keyword">const</span> onSet = <span class="function"><span class="params">()</span> =&gt;</span> &#123;</div><div class="line">    dispatch(&#123;</div><div class="line">      type: <span class="string">'modelTest/set'</span>,</div><div class="line">      payload: &#123; <span class="attr">cnt</span>: <span class="number">6</span> &#125;,</div><div class="line">    &#125;)</div><div class="line">  &#125;</div><div class="line"></div><div class="line">  <span class="keyword">const</span> onAdd = <span class="function"><span class="params">()</span> =&gt;</span> &#123;</div><div class="line">    dispatch(&#123;</div><div class="line">      type: <span class="string">'modelTest/add'</span>,</div><div class="line">      payload: &#123; &#125;,</div><div class="line">    &#125;)</div><div class="line">  &#125;</div><div class="line">  <span class="keyword">return</span> (</div><div class="line">    &lt;div&gt;</div><div class="line">      &lt;h1&gt;&#123;cnt&#125;&lt;<span class="regexp">/h1&gt;</span></div><div class="line"><span class="regexp">      &lt;Button onClick=&#123;onAdd&#125;&gt;add&lt;/</span>Button&gt;</div><div class="line">      &lt;Button onClick=&#123;onDec&#125;&gt;dec&lt;<span class="regexp">/Button&gt;</span></div><div class="line"><span class="regexp">      &lt;Button onClick=&#123;onSet&#125;&gt;set&lt;/</span>Button&gt;</div><div class="line">    &lt;<span class="regexp">/div&gt;</span></div><div class="line"><span class="regexp">  )</span></div><div class="line"><span class="regexp">&#125;</span></div><div class="line"><span class="regexp"></span></div><div class="line"><span class="regexp">TestModel.propTypes = &#123;</span></div><div class="line"><span class="regexp">  dispatch: PropTypes.func,</span></div><div class="line"><span class="regexp">  cnt: PropTypes.number,</span></div><div class="line"><span class="regexp">&#125;</span></div><div class="line"><span class="regexp">/</span><span class="regexp">/ 注： 此处的state为app model的整体state，根据state.namespace值来获取当前所需model</span></div><div class="line"><span class="regexp">const mapStateToProps = (state, ownProps) =&gt; &#123;</span></div><div class="line"><span class="regexp">  console.log('map', state)</span></div><div class="line"><span class="regexp">  return &#123;</span></div><div class="line"><span class="regexp">    ...ownProps,</span></div><div class="line"><span class="regexp">    cnt: state.modelTest.cnt,</span></div><div class="line"><span class="regexp">  &#125;</span></div><div class="line"><span class="regexp">&#125;</span></div><div class="line"><span class="regexp">export default connect(mapStateToProps)(TestModel)</span></div></pre></td></tr></table></figure>
</li>
</ol>
<p>注：<br><span id="ReduxConnect"><a href="http://cn.redux.js.org/docs/react-redux/api.html" target="_blank" rel="external">Redux</a>的connect方法</span><br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">connect([mapStateToProps], [mapDispatchToProps], [mergeProps], [options])(组件)</div></pre></td></tr></table></figure></p>
]]></content>
      
        <categories>
            
            <category> Front-end </category>
            
            <category> React </category>
            
        </categories>
        
        
        <tags>
            
            <tag> React </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[es6语法学习笔记]]></title>
      <url>/2017/09/25/front-end/basic/js/es6/</url>
      <content type="html"><![CDATA[<p>介绍React中常用的ES6高频语法及ES6语法学习笔记。<br><a id="more"></a></p>
<h1 id="React高频语法"><a href="#React高频语法" class="headerlink" title="React高频语法"></a>React高频语法</h1><h2 id="箭头函数arrow-function"><a href="#箭头函数arrow-function" class="headerlink" title="箭头函数arrow function"></a>箭头函数arrow function</h2><!-- 在ES6中开始投入使用，使用的话需要装babel-preset-stage-0来预处理 -->
<p>新特性，可以省略function，直接写参数和执行结果，语法：标识符=&gt;表达式，表达式{}会被解析为块（执行逻辑），若要解析为对象使用({})<br>箭头函数没有自身this值，其this值直接继承自外围作用域<br>示例:<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">handleClick = <span class="function"><span class="params">()</span> =&gt;</span> &#123;</div><div class="line">  <span class="built_in">console</span>.log(<span class="string">"点击操作"</span>)</div><div class="line">  <span class="keyword">let</span> &#123; count &#125; = <span class="keyword">this</span>.state</div><div class="line">  count++</div><div class="line">  <span class="keyword">this</span>.setState(&#123;count&#125;)</div><div class="line">&#125;</div><div class="line">render = <span class="function"><span class="params">()</span> =&gt;</span> &#123;</div><div class="line">  <span class="keyword">const</span> count = <span class="keyword">this</span>.state.count</div><div class="line">  <span class="keyword">return</span> (</div><div class="line">    &lt;button onClick=&#123;<span class="keyword">this</span>.handleClick&#125;&gt;点我&#123;count&#125;次&lt;<span class="regexp">/button&gt;</span></div><div class="line"><span class="regexp">  )</span></div><div class="line"><span class="regexp">&#125;</span></div></pre></td></tr></table></figure></p>
<h1 id="ES6语法学习笔记"><a href="#ES6语法学习笔记" class="headerlink" title="ES6语法学习笔记"></a>ES6语法学习笔记</h1><h2 id="Let和const"><a href="#Let和const" class="headerlink" title="Let和const"></a>Let和const</h2><h3 id="Let"><a href="#Let" class="headerlink" title="Let"></a>Let</h3><p>特性：</p>
<ol>
<li>只在所在代码块内有效</li>
<li>不存在变量提升（变量提升：未声明前有undefinded值，且会覆盖外层同名变量）</li>
<li>暂时性死区，temporal dead zone，简称 TDZ（let覆盖var作用域，导致var不可用，且在let声明之前也不可用）</li>
<li>不允许重复声明（包括和const、var）<br>块级作用域</li>
<li>（ES6可在块级作用域中声明函数，最好声明变量式函数）</li>
<li>ES5 只有全局作用域和函数作用域，没有块级作用域</li>
<li>Do方法获取块级作用域返回值<h3 id="Const"><a href="#Const" class="headerlink" title="Const"></a>Const</h3>声明一个只读常量，必须在声明时赋值，否则报错。</li>
<li>不存在变量提升，存在暂时性死区(同样会覆盖同名var作用域)</li>
<li>不能重复声明（包括和let、var）</li>
<li>实现是通过不能修改内存地址。对象const不可控<h3 id="顶层对象属性"><a href="#顶层对象属性" class="headerlink" title="顶层对象属性"></a>顶层对象属性</h3>浏览器：window<br>Node：global<br>ES5的顶层对象属性与全局变量等价<br>let命令、const命令、class命令声明的全局变量，不属于顶层对象的属性</li>
</ol>
<h2 id="变量的解构赋值"><a href="#变量的解构赋值" class="headerlink" title="变量的解构赋值"></a>变量的解构赋值</h2><h3 id="模式匹配"><a href="#模式匹配" class="headerlink" title="模式匹配"></a>模式匹配</h3><ol>
<li>数组、对象均可</li>
<li>等式两边都要是可遍历的结构，如let [x, y, z] = new Set([‘a’, ‘b’, ‘c’]);</li>
<li>允许指定默认值（惰性求值，当匹配项严格等于undefiend时生效）</li>
<li>对象赋值结构{属性：变量}={属性：值}，等号两边属性同名才能得到对应值，无次序影响。</li>
<li>数值对象解构赋值时会被转化成对象</li>
<li>Undefined和NULL不能解构赋值</li>
<li>函数参数也可以解构赋值（eg.:add([x,y]){return x+y}），可以使用默认值（解构失败时使用）</li>
<li>尽量不要放置圆括号<h3 id="用途："><a href="#用途：" class="headerlink" title="用途："></a>用途：</h3></li>
<li>变换变量值</li>
<li>函数返回多个值</li>
<li>函数参数定义，可无序可有序</li>
<li>快速提取JSON数据</li>
<li>函数参数默认值</li>
<li>遍历MAP结构<h2 id="字符串扩展"><a href="#字符串扩展" class="headerlink" title="字符串扩展"></a>字符串扩展</h2></li>
<li>Unicode支持</li>
<li>codePointAT：JavaScript内部，字符以UTF-16的格式储存，每个字符固定为2个字节。对于那些需要4个字节储存的字符（Unicode码点大于0xFFFF的字符），JavaScript会认为它们是两个字符。</li>
<li>fromCodePoint</li>
<li>字符串遍历接口：for(… of …)，可识别大于0xFFFF的码点</li>
<li>at方法（对应charAt）</li>
<li>normalize()</li>
<li>includes(), startsWith(), endsWith()有、在头、在尾，返回bool</li>
<li>repeat(n)重复字符n次并返回</li>
<li>padStart()，padEnd()，补全字符串</li>
<li>模板字符串，可嵌入变量(${}引入，js表达式均可，函数也可)，可多行，`标识<br>正则扩展<br>数值扩展</li>
<li>Number.isFinite(), Number.isNaN()、Number.isInteger()</li>
<li>Number.parseInt(), Number.parseFloat()</li>
<li>Number.EPSILON:可接受的误差范围，常量</li>
<li>安全整数和Number.isSafeInteger()</li>
<li>Math.trunc()去小数取整、Math.sign()判断正负零</li>
<li>…………………………….</li>
<li>指数运算符<strong>，eg：2</strong>3=8</li>
<li><h2 id="函数扩展"><a href="#函数扩展" class="headerlink" title="函数扩展"></a>函数扩展</h2></li>
<li>默认值</li>
<li>与解构赋值配合使用</li>
<li>Length属性，返回未指定默认值的参数个数</li>
<li>设置默认值有参数单独作用域</li>
<li>Rest参数，即…变量，只能是最后一个参数</li>
<li>name属性</li>
<li>箭头函数<br>1)    返回对象得加大括号<br>2)    可与赋值解构、rest…配合使用<br>3)    This指向固定化，this对象是其定义时所在的对象的this，箭头函数嵌套时this为外层对象的this<br>4)    arguments、super、new.target均指向外层函数对应变量</li>
<li>尾调用（Tail Call）优化（严格模式下有效）。函数f的最后一步是调用函数g（return g()），这就叫尾调用。</li>
<li>尾递归优化（严格模式下有效）</li>
<li>允许函数参数尾逗号<h2 id="数组扩展"><a href="#数组扩展" class="headerlink" title="数组扩展"></a>数组扩展</h2></li>
<li>扩展（spread）运算符…<br>1)    它好比 rest 参数的逆运算，将一个数组转为用逗号分隔的参数序列。<br>2)    主要用于函数调用（函数参数中…是将多个参数整合为一个数组，函数调用使用…将一个数组展开为多个参数）<br>3)    替代apply方法<br>应用：<br>1)    合并数组<br>2)    和解构赋值结合<br>3)    字符串转换为数组[…’hello’]即 [ “h”, “e”, “l”, “l”, “o” ]，比split精准<br>4)    Map、Set、Iterator、Generator</li>
<li>Array.from()<br>Array.from方法用于将两类对象转为真正的数组：类似数组的对象（array-like object）和可遍历（iterable）的对象</li>
<li>Array.of方法用于将一组值，转换为数组。</li>
<li>数组实例的 copyWithin(target,start,end) </li>
<li>数组实例的 find() 和 findIndex()</li>
<li>fill(定值)，用于初始化or格式化数组</li>
<li>数组实例的 entries()键值对，keys()键 和 values()值 ，用于遍历数组</li>
<li>Includes()，是否包含</li>
<li>数组的空位指定为undefined（尽量避免）<h2 id="对象扩展"><a href="#对象扩展" class="headerlink" title="对象扩展"></a>对象扩展</h2></li>
<li>ES6 允许在对象之中，直接写变量。这时，属性名为变量名, 属性值为变量的值。注：简洁写法的属性名总是字符串</li>
<li>Object.assign：Object.assign方法用于对象的合并，将源对象（source）的所有可枚举属性，复制到目标对象（target）。</li>
</ol>
<h2 id="Symbol"><a href="#Symbol" class="headerlink" title="Symbol"></a>Symbol</h2><p>原始数据类型，标识独一无二的值。<br>字符串或数字可以作为属性的键，symbol也可以，它不等同于任何字符串，因而这个以symbol为键的属性可以保证不与任何其它属性产生冲突。<br>原始数据类型（7）：数值（Number）、字符串（String）、Boolean、Object、undefined、Null、Symbol</p>
<h2 id="Set"><a href="#Set" class="headerlink" title="Set"></a>Set</h2><p>成员值唯一，类似数组结构。成员类型不定</p>
<ol>
<li>遍历：keys()、values()、entries()、forEach()</li>
<li>WeakSet：成员只能是对象</li>
</ol>
<h2 id="Map"><a href="#Map" class="headerlink" title="Map"></a>Map</h2><p>Object：键值对集合，字符串作为键值<br>Map: 键值对集合,键值类型不限<br>遍历：同Set<br>WeakMap:只接受对象和null值作为键名<br>Proxy<br>Proxy 实际上重载（overload）了点运算符，即用自己的定义覆盖了语言的原始定义<br>Promise</p>
<h2 id="Iterator"><a href="#Iterator" class="headerlink" title="Iterator"></a>Iterator</h2><p>任意一个对象的Symbol.iterator方法，等于该对象的遍历器生成函数，调用该函数会返回该对象的一个遍历器对象（由next()方法）。<br>Genereator<br>yeild，函数分段执行。</p>
<p>生成器是迭代器。所有的生成器都有内建.next()和<a href="">Symbol.iterator</a>方法的实现。你只须编写循环部分的行为。<br>作用：实现异步处理</p>
<h2 id="Thunk函数"><a href="#Thunk函数" class="headerlink" title="Thunk函数"></a>Thunk函数</h2><p>编译器的”传名调用”实现，往往是将参数放到一个临时函数之中，再将这个临时函数传入函数体。这个临时函数就叫做 Thunk 函数。<br>JS的Thunk函数：<br>JavaScript 语言是传值调用，它的 Thunk 函数含义有所不同。在 JavaScript 语言中，Thunk 函数替换的不是表达式，而是多参数函数，Thunk函数将多参带回调的函数替换成单参数的版本，使该函数只接受回调函数作为参数。Thunk函数接收多参数，返回一个只接受回调函数的函数，即返回一开始被替换的函数。<br>for…of<br>for…of：遍历的是值<br>for…in:数组遍历的是index，对象遍历的是键</p>
<h2 id="继承"><a href="#继承" class="headerlink" title="继承"></a>继承</h2><p>【】（<a href="http://keenwon.com/1524.html）" target="_blank" rel="external">http://keenwon.com/1524.html）</a></p>
<p>ES6和ES5的继承是一模一样的，只是多了class 和extends ，ES6的子类和父类，子类原型和父类原型，通过<strong>proto</strong> 连接。</p>
<h1 id="dva最小知识集中的ES6"><a href="#dva最小知识集中的ES6" class="headerlink" title="dva最小知识集中的ES6"></a>dva最小知识集中的ES6</h1><p><a href="https://github.com/dvajs/dva-knowledgemap#react-component" target="_blank" rel="external">dva最小知识集</a></p>
<ol>
<li>块级作用域，变量let关键字，常量const</li>
<li>对象字面量的属性赋值简写（property value shorthand）这是析构的反向操作，用于重新组织一个 Object 。</li>
<li>赋值解构？？？（需要实践）（let,const实现）析构赋值让我们从 Object 或 Array 里取部分数据存为变量。<br>Import和export会用到<br>export在导出接口的时候，必须与模块内部的变量具有一一对应的关系{}<br><a href="http://imweb.io/topic/582293894067ce9726778be9" target="_blank" rel="external">http://imweb.io/topic/582293894067ce9726778be9</a></li>
<li>Spread Operator…<br>函数参数- 默认值、参数打包、数组展开（Default【函数参数可定默认值x=1一类】、Rest【获取数组部分项。函数参数…y是多个值，进入函数被转换为y数组】、Spread【…[1,2,3]】）</li>
<li>箭头函数<br>1) 简化了代码形式，默认return表达式结果。<br>2) 自动绑定语义this，即定义函数时的this。</li>
<li>字符串模板 Template strings</li>
<li>Iterators（迭代器，next）+ for..of</li>
<li>生成器（Generrators）<br>dva 的 effects 是通过 generator 组织的。Generator 返回的是迭代器，通过 yield 关键字实现暂停功能。</li>
<li>Class（语法糖，有constractor、extends、super方法）<br>语法糖: 没有给计算机语言添加新功能，而只是对人类来说更“甜蜜”的语法。语法糖往往给程序员提供了更实用的编码方式，有益于更好的编码风格，更易读。不过其并没有给语言添加什么新东西。糖在不改变其所在位置的语法结构的前提下，实现了运行时等价。</li>
<li>Modules(import and export)（AMD+CommonJs）<br>ES6的内置模块功能借鉴了CommonJS和AMD各自的优点：<br>1) 具有CommonJS的精简语法、唯一导出出口(single exports)和循环依赖(cyclic dependencies)的特点。<br>2) 类似AMD，支持异步加载和可配置的模块加载。</li>
<li>Map + Set + WeakMap + WeakSet<br>四种集合类型，WeakMap、WeakSet作为属性键的对象如果没有别的变量在引用它们，则会被回收释放掉。</li>
<li>新API(Math + Number + String + Array + Object APIs)</li>
<li>Proxies（使用代理（Proxy）监听对象的操作，然后可以做一些相应事情。）</li>
<li>Symbols: Symbol是一种基本类型。Symbol 通过调用symbol函数产生，它接收一个可选的名字参数，该函数返回的symbol是唯一的。</li>
<li>Promises：Promises是处理异步操作的对象，使用了 Promise 对象之后可以用一种链式调用的方式来组织代码，让代码更加直观（类似jQuery的deferred 对象）。</li>
</ol>
]]></content>
      
        <categories>
            
            <category> Front-end </category>
            
            <category> Basic </category>
            
        </categories>
        
        
        <tags>
            
            <tag> React </tag>
            
            <tag> Javascript </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[React实现点击其它地方隐藏组件]]></title>
      <url>/2017/09/25/front-end/React/Practice/React%20click%20hide/</url>
      <content type="html"><![CDATA[<p>在网上找了一圈，基本都是通过遮罩实现的，但不是那么想用遮罩，没找着想用的方法。看antd就实现得不错，想源码里肯定有，于是分析了一下antd Select的源码，找到了个antd的实现方式，路是绕了些，但看看源码还是能有点收获的。<br><a id="more"></a><br>一点点题外话:</p>
<blockquote>
<p>大清早起来发现antd的Dropdown是有菜单隐藏方式设置的，又是为自己的粗心买了时间帐…好在阅读源码也有点收获，事不过三就好</p>
</blockquote>
<p>详细步骤</p>
<ol>
<li><p>设计为document绑定onmousedown的方法</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div></pre></td><td class="code"><pre><div class="line">  <span class="comment">// 绑定或解绑点击其他地方隐藏</span></div><div class="line">bindOnDocumentClickHide = <span class="function"><span class="params">()</span> =&gt;</span> &#123;</div><div class="line">  <span class="keyword">if</span> (<span class="keyword">this</span>.state.dropdownVisible) &#123;</div><div class="line">    <span class="built_in">console</span>.log(<span class="string">'bind'</span>)</div><div class="line">    <span class="keyword">let</span> currentDocument</div><div class="line">    <span class="keyword">if</span> (!<span class="keyword">this</span>.clickOutsideHandler) &#123;</div><div class="line">      currentDocument = <span class="built_in">window</span>.document</div><div class="line">      <span class="built_in">console</span>.log(<span class="string">'currentDocument'</span>, currentDocument)</div><div class="line">      <span class="comment">// import addEventListener from 'rc-util/lib/Dom/addEventListener'</span></div><div class="line">      <span class="comment">// 可直接用下面语句使用原生js绑定事件(对IE有兼容问题  )</span></div><div class="line">      <span class="comment">// this.clickOutsideHandler = currentDocument.addEventListener('mousedown', this.onDocumentClick)</span></div><div class="line">      <span class="keyword">this</span>.clickOutsideHandler = addEventListener(currentDocument,</div><div class="line">        <span class="string">'mousedown'</span>, <span class="keyword">this</span>.onDocumentClick)</div><div class="line">    &#125;</div><div class="line">    <span class="comment">// always hide on mobile</span></div><div class="line">    <span class="keyword">if</span> (!<span class="keyword">this</span>.touchOutsideHandler) &#123;</div><div class="line">      currentDocument = currentDocument || <span class="built_in">window</span>.document</div><div class="line">      <span class="keyword">this</span>.touchOutsideHandler = addEventListener(currentDocument,</div><div class="line">        <span class="string">'touchstart'</span>, <span class="keyword">this</span>.onDocumentClick)</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">return</span></div><div class="line">  &#125;</div><div class="line">  <span class="keyword">this</span>.clearOutsideHandler()</div><div class="line">&#125;</div></pre></td></tr></table></figure>
</li>
<li><p>设计实现document的onmousedown事件回调</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> contains <span class="keyword">from</span> <span class="string">'rc-util/lib/Dom/contains'</span></div><div class="line"><span class="comment">// ...</span></div><div class="line">  onDocumentClick = <span class="function">(<span class="params">event</span>) =&gt;</span> &#123;</div><div class="line">    <span class="keyword">const</span> target = event.target</div><div class="line">    <span class="built_in">console</span>.log(<span class="string">'ondocumentchange'</span>)</div><div class="line">    <span class="comment">// ref为声明组件时设置的ref字段</span></div><div class="line">    <span class="keyword">const</span> root = findDOMNode(<span class="keyword">this</span>.refs.dropDown)</div><div class="line">    <span class="keyword">const</span> popupNode = findDOMNode(<span class="keyword">this</span>.refs.dropDownMenu)</div><div class="line">    <span class="comment">// 当点击非本区域内容时隐藏</span></div><div class="line">    <span class="keyword">if</span> (!contains(root, target) &amp;&amp; !contains(popupNode, target)) &#123;</div><div class="line">      <span class="keyword">this</span>.setState(&#123;</div><div class="line">        dropdownVisible: <span class="literal">false</span>,</div><div class="line">      &#125;)</div><div class="line">    &#125;</div><div class="line">  &#125;</div></pre></td></tr></table></figure>
</li>
<li><p>设计为document解绑的方法，供component不可见或被销毁时调用</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">clearOutsideHandler = <span class="function"><span class="params">()</span> =&gt;</span> &#123;</div><div class="line">  <span class="built_in">console</span>.log(<span class="string">'clear'</span>)</div><div class="line">  <span class="keyword">if</span> (<span class="keyword">this</span>.clickOutsideHandler) &#123;</div><div class="line">    <span class="keyword">this</span>.clickOutsideHandler.remove()</div><div class="line">    <span class="keyword">this</span>.clickOutsideHandler = <span class="literal">null</span></div><div class="line">  &#125;</div><div class="line">  <span class="keyword">if</span> (<span class="keyword">this</span>.touchOutsideHandler) &#123;</div><div class="line">    <span class="keyword">this</span>.touchOutsideHandler.remove()</div><div class="line">    <span class="keyword">this</span>.touchOutsideHandler = <span class="literal">null</span></div><div class="line">  &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
</li>
<li><p>当弹出框可见时，为document绑定onClick方法，didUpdate中调用bindOnDocumentClickHide方法</p>
</li>
<li>当弹出框不可见时，为document移除onClick方法，didUpdate中调用bindOnDocumentClickHide方法</li>
<li>当当前组件被unmount时,解绑回调<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">componentWillUnmount() &#123;</div><div class="line">  <span class="keyword">this</span>.clearOutsideHandler()</div><div class="line">&#125;</div></pre></td></tr></table></figure>
</li>
</ol>
<h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><p><a href="http://www.cnblogs.com/wolfocme110/p/4148486.html" target="_blank" rel="external">js事件监听机制</a><br><a href="https://www.w3cschool.cn/jsref/dom-obj-event.html" target="_blank" rel="external">Html DOM事件对象</a></p>
]]></content>
      
        
    </entry>
    
    <entry>
      <title><![CDATA[antd select(trigger)组件源码分析]]></title>
      <url>/2017/09/25/front-end/React/antd/antd%20select%20sc%20analysis/</url>
      <content type="html"><![CDATA[<p>源码分析，点击其他地方实现隐藏<br><a id="more"></a></p>
<h1 id="select组件源码分析"><a href="#select组件源码分析" class="headerlink" title="select组件源码分析"></a>select组件源码分析</h1><p>为了找到react组件到底如何做到点击其它地方隐藏的，决定分析一下select组件的源码。一开始是直接查看的项目中跳转查看源码，一堆_interopRequireDefault，还有好多下划线变量，看了好久都看不懂，一搜才发现这是被babel转译过的源码，怪不得这代码看起来如此非人类。<br>在<a href="https://github.com/ant-design/ant-design" target="_blank" rel="external">antd reposity</a>找到了源码，clone发现包太大了，最后还是选择了在线看源码，顺藤摸瓜地找到了select的构成</p>
<h2 id="rc-select"><a href="#rc-select" class="headerlink" title="rc-select"></a>rc-select</h2><p>select组件最终返回的是个rc-select组件，rc-select组件最后又返回了一个trigger组件</p>
<h2 id="trigger"><a href="#trigger" class="headerlink" title="trigger"></a>trigger</h2><p>实现了多种popup形式，hover、click，这就应该是最终实现点击其它地方隐藏</p>
<h3 id="HTML-DOM事件"><a href="#HTML-DOM事件" class="headerlink" title="HTML DOM事件"></a>HTML DOM事件</h3><p><a href="https://www.w3cschool.cn/jsref/dom-obj-event.html" target="_blank" rel="external">w3cSchool- html dom</a></p>
<blockquote>
<p> onmouseenter 事件类似于onmouseover 事件。 唯一的区别是 onmouseenter 事件不支持冒泡 。<br>1、onmouseleave、onmouseenter，鼠标进入到指定元素区域内触发事件，不支持冒泡，不包含子元素的区域。<br>2、onmouseout、onmouseover、鼠标进入指定元素触发事件，含子元素区域。</p>
<p>onmousedown 事件会在鼠标按键被按下时发生。<br>提示： 与 onmousedown 事件相关连得事件发生次序（ 鼠标左侧/中间 按钮）：<br>onmousedown<br>onmouseup<br>onclick<br>与 onmousedown 事件相关连得事件发生次序 (鼠标右侧按钮):<br>onmousedown<br>onmouseup<br>oncontextmenu</p>
</blockquote>
<h3 id="实现逻辑"><a href="#实现逻辑" class="headerlink" title="实现逻辑"></a>实现逻辑</h3><ol>
<li>fireEvent实现事件扩散(先执行children的相关事件回调，再执行自身事件回调)</li>
<li><p>在componentDidMount(直接调用的componentDidUpdate)和conponentDidUpdate中绑定document区域的’mousedown’(电脑)、touchstart(触屏端)事件</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div></pre></td><td class="code"><pre><div class="line">componentDidUpdate(_, prevState) &#123;</div><div class="line">   <span class="keyword">const</span> props = <span class="keyword">this</span>.props;</div><div class="line">   <span class="keyword">const</span> state = <span class="keyword">this</span>.state;</div><div class="line">   <span class="comment">//...一些其他代码</span></div><div class="line">   <span class="comment">// We must listen to `mousedown` or `touchstart`, edge case:</span></div><div class="line">   <span class="comment">// https://github.com/ant-design/ant-design/issues/5804</span></div><div class="line">   <span class="comment">// https://github.com/react-component/calendar/issues/250</span></div><div class="line">   <span class="comment">// https://github.com/react-component/trigger/issues/50</span></div><div class="line">   <span class="keyword">if</span> (state.popupVisible) &#123;</div><div class="line">     <span class="keyword">let</span> currentDocument;</div><div class="line">     <span class="keyword">if</span> (!<span class="keyword">this</span>.clickOutsideHandler &amp;&amp; <span class="keyword">this</span>.isClickToHide()) &#123;</div><div class="line">       currentDocument = props.getDocument();</div><div class="line">       <span class="keyword">this</span>.clickOutsideHandler = addEventListener(currentDocument,</div><div class="line">         <span class="string">'mousedown'</span>, <span class="keyword">this</span>.onDocumentClick);</div><div class="line">     &#125;</div><div class="line">     <span class="comment">// always hide on mobile</span></div><div class="line">     <span class="keyword">if</span> (!<span class="keyword">this</span>.touchOutsideHandler) &#123;</div><div class="line">       currentDocument = currentDocument || props.getDocument();</div><div class="line">       <span class="keyword">this</span>.touchOutsideHandler = addEventListener(currentDocument,</div><div class="line">         <span class="string">'touchstart'</span>, <span class="keyword">this</span>.onDocumentClick);</div><div class="line">     &#125;</div><div class="line">     <span class="keyword">return</span>;</div><div class="line">   &#125;</div><div class="line"></div><div class="line">   <span class="keyword">this</span>.clearOutsideHandler();</div><div class="line"> &#125;,</div></pre></td></tr></table></figure>
<p>代码分析<br>props.getDocument()由父组件提供，若不存在则默认返回window.document:</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// 默认getDocument方法</span></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">returnDocument</span>(<span class="params"></span>) </span>&#123;</div><div class="line">  <span class="keyword">return</span> <span class="built_in">window</span>.document;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
</li>
<li><p>在刚才监听的事件回调函数中关闭弹出框</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div></pre></td><td class="code"><pre><div class="line">onDocumentClick(event) &#123;</div><div class="line">  <span class="keyword">if</span> (<span class="keyword">this</span>.props.mask &amp;&amp; !<span class="keyword">this</span>.props.maskClosable) &#123;</div><div class="line">    <span class="keyword">return</span>;</div><div class="line">  &#125;</div><div class="line">  <span class="keyword">const</span> target = event.target;</div><div class="line">  <span class="comment">// 测试中返回的其实是trigger一开始显示的组件，如dropdownButton的button</span></div><div class="line">  <span class="comment">// 为什么不是返回整个组件???</span></div><div class="line">  <span class="keyword">const</span> root = findDOMNode(<span class="keyword">this</span>);</div><div class="line">  <span class="comment">// 返回popup的组件，如dropdown的下拉框内容</span></div><div class="line">  <span class="keyword">const</span> popupNode = <span class="keyword">this</span>.getPopupDomNode();<span class="comment">//自定义的函数</span></div><div class="line">  <span class="keyword">if</span> (!contains(root, target) &amp;&amp; !contains(popupNode, target)) &#123;</div><div class="line">    <span class="keyword">this</span>.close();</div><div class="line">  &#125;</div><div class="line">&#125;</div><div class="line">getPopupDomNode() &#123;</div><div class="line">  <span class="comment">// for test</span></div><div class="line">  <span class="keyword">if</span> (<span class="keyword">this</span>._component &amp;&amp; <span class="keyword">this</span>._component.getPopupDomNode) &#123;</div><div class="line">    <span class="keyword">return</span> <span class="keyword">this</span>._component.getPopupDomNode();</div><div class="line">  &#125;</div><div class="line">  <span class="keyword">return</span> <span class="literal">null</span>;</div><div class="line">&#125;,</div></pre></td></tr></table></figure>
<p>代码分析:<br>findDOMNode为react-dom提供的方法，用于获取真实的DOM节点，参数为组件句柄，本组件的话可直接为this，若要获取子组件真实节点，可指定其ref再获取，示例如下:</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> MyComponent = React.createClass(&#123;</div><div class="line">  handleClick: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</div><div class="line">    <span class="comment">// 指定ref后可直接通过this.refs.ref名获得其句柄</span></div><div class="line">    React.findDOMNode(<span class="keyword">this</span>.refs.myTextInput).focus();</div><div class="line">  &#125;,</div><div class="line">  render: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</div><div class="line">    <span class="keyword">return</span> (</div><div class="line">      &lt;div&gt;</div><div class="line">        &lt;input type=<span class="string">"text"</span> ref=<span class="string">"myTextInput"</span> /&gt;</div><div class="line">        &lt;input type=<span class="string">"button"</span> value=<span class="string">"Focus the text input"</span> onClick=&#123;<span class="keyword">this</span>.handleClick&#125; /&gt;</div><div class="line">      &lt;<span class="regexp">/div&gt;</span></div><div class="line"><span class="regexp">    );</span></div><div class="line"><span class="regexp">  &#125;</span></div><div class="line"><span class="regexp">&#125;);</span></div></pre></td></tr></table></figure>
</li>
<li><p>在render中检查触发事件是否存在于props定义的action中，绑定相应事件</p>
</li>
<li>执行各个事件回调<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">fireEvents(type, e) &#123;</div><div class="line">  <span class="keyword">const</span> childCallback = <span class="keyword">this</span>.props.children.props[type];</div><div class="line">  <span class="keyword">if</span> (childCallback) &#123;</div><div class="line">    childCallback(e);</div><div class="line">  &#125;</div><div class="line">  <span class="keyword">const</span> callback = <span class="keyword">this</span>.props[type];</div><div class="line">  <span class="keyword">if</span> (callback) &#123;</div><div class="line">    callback(e);</div><div class="line">  &#125;</div><div class="line">&#125;,</div></pre></td></tr></table></figure>
</li>
</ol>
<h2 id="tips"><a href="#tips" class="headerlink" title="tips"></a>tips</h2><p><a href="https://github.com/react-component?utf8=%E2%9C%93&amp;q=trigger&amp;type=&amp;language=" target="_blank" rel="external">antd的底层react componnet</a><br>github也可以直接查看demo效果的！地址如下:</p>
<blockquote>
<p><a href="http://react-component.github.io/badgeboard/" target="_blank" rel="external">http://react-component.github.io/badgeboard/</a> 这是整体demo地址，从这里也可以看出，底层的form组件用得最多的还是rc-trigger、rc-align和rc-animation</p>
<h2 id="自动化构建工具"><a href="#自动化构建工具" class="headerlink" title="自动化构建工具"></a>自动化构建工具</h2><h3 id="webpack"><a href="#webpack" class="headerlink" title="webpack"></a>webpack</h3></blockquote>
<h3 id="gulp"><a href="#gulp" class="headerlink" title="gulp"></a>gulp</h3><p>javascript/coffee/sass/less/html/image/css 等文件的的测试、检查、合并、压缩、格式化、浏览器自动刷新、部署文件生成，并监听文件在改动后重复指定的这些步骤。在实现上，她借鉴了Unix操作系统的管道（pipe）思想，前一级的输出，直接变成后一级的输入，使得在操作上非常简单。通过本文，我们将学习如何使用Gulp来改变开发流程，从而使开发更加快速高效。<br>觉得题主应该了解一下构建工具，比如cmake, ant, maven之类的。</p>
<h3 id="GNU-make-co"><a href="#GNU-make-co" class="headerlink" title="GNU make/co"></a>GNU make/co</h3><h2 id="Typescript"><a href="#Typescript" class="headerlink" title="Typescript"></a>Typescript</h2>]]></content>
      
        <categories>
            
            <category> Front-end </category>
            
            <category> React </category>
            
        </categories>
        
        
        <tags>
            
            <tag> React </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[170925]]></title>
      <url>/2017/09/25/dailyDiary/2017/170925/</url>
      <content type="html"><![CDATA[<script src=/js/crypto-js.js></script><script>
function doDecrypt(pwd, onError) {
	console.log("in doDecrypt");
	var txt = document.getElementById("enc_content").innerHTML;
	var plantext;
	try {
	  	var bytes = CryptoJS.AES.decrypt(txt, pwd);
		plaintext = bytes.toString(CryptoJS.enc.Utf8);
	} catch(err) {
		if(onError) {onError(err);}
		return;
	}
	document.getElementById("enc_content").innerHTML = plaintext;
	document.getElementById("enc_content").style.display = "block";
   document.getElementById("enc_passwd").style.display = "none";
}
</script>
<div id="enc_content" style="display:none">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</div><div id="enc_passwd"> <input id="enc_pwd_input" type="text" style="border-radius: 5px;border-style: groove;height: 30px;width: 50%;cursor: auto;font-size: 102%;color: currentColor;outline: none;text-overflow: initial;padding-left: 5px;" onkeydown="if (event.keyCode == 13) { decrypt(); return false;}"> <input type="submit" value="解&nbsp;密" onclick="decrypt()" style="width: 58px;height: 34px;border-radius: 5px;background-color: white;border-style: solid;color: currentColor;"><div id="enc_error" style="display: inline-block;color: #d84527;margin-left: 10px"></div>
<script>
var onError = function(error) {
	document.getElementById("enc_error").innerHTML = "password error!"
};
function decrypt() {
var passwd = document.getElementById("enc_pwd_input").value;
console.log(passwd);
doDecrypt(passwd, onError);
}
</script>
</div>]]></content>
      
        <categories>
            
            <category> dailyDiary </category>
            
        </categories>
        
        
        <tags>
            
            <tag> morningDiary </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[效率，效率，效率]]></title>
      <url>/2017/09/25/dailyDiary/2017/efficiency/</url>
      <content type="html"><![CDATA[<script src=/js/crypto-js.js></script><script>
function doDecrypt(pwd, onError) {
	console.log("in doDecrypt");
	var txt = document.getElementById("enc_content").innerHTML;
	var plantext;
	try {
	  	var bytes = CryptoJS.AES.decrypt(txt, pwd);
		plaintext = bytes.toString(CryptoJS.enc.Utf8);
	} catch(err) {
		if(onError) {onError(err);}
		return;
	}
	document.getElementById("enc_content").innerHTML = plaintext;
	document.getElementById("enc_content").style.display = "block";
   document.getElementById("enc_passwd").style.display = "none";
}
</script>
<div id="enc_content" style="display:none">U2FsdGVkX18rK6zCrm9UDBdLegPyJFb+BOWejYywdfMrg0bjuI2xmVXEhUIRX1KYLZoRW2gn3j+lI8zDC5e7FkWu9gGxq2n/yIu3zP9mBhkXB5sZUX0PWaa2c4Cr7Vkp1eg02eNbVRKum59C5FRSUJlNGx+JEa9omnelyt6/xkQ9w4o5zIK7PcFSyeEAbJ1aRMOCK/p7GleVO5jefZIZcOZXeWSbjAkqtM96qFP5ni02G4N9yw6LH+uhS0ZT3IE8WVEPM2jjpDqyFZDgyh5VQtr6xn94JUimvKJFW09JZeHaH3fX3fm3tZwc4c9S970R1YfdNvP9c1ad9MpcZxIidsodrp+bW9dCKBqtj8/ZOrN9ypUyJRmfM3TuDeiJxQeZPtf4xsA7RGO5erX+3MUIeCwvXqkiGgdyIa6KemrymzfxBwTKXjWeORyr8l7r1kzczYgvDZPPVYXLHK3HqbatAv2pL6xEN9MFT/LuysBRutSRv/U733kW3mT/ax1QazcAQ8L0BJdt+13cSspK8QyI1SNhDG5ramwZXR67TzhEwMGgahgOzTUaolbcZuaZWfxiDm35Vqee0bN5y548t2sx6BNStTy2/4GJQPGtDm9IZBwYubR9Lwbv4CI20wjthDx2/xPjT1QJM3hPBobC6+LJKq7AHsXou0fcJOJRV4DdiWRv6z3mzUIxOK+nmQ49T7HN9yZ7DnaulbVhj9Vzj6YeHs/UADtYmSsXRug/6bF6jjDdt0kwDbNBzWsGsaCCnndfU5GxzLTWxb4CegH7FglmvQsdNTmjLDv61Uqk32kgiufpsG0P4W+e0gXWpoON+KIZGqUSOzpGm/+8wD3i/uct7cOfbnAK5wcow7HqWHg9wNTmQeWpK8JErrFLgmzglO3+SoCmP6oszj/+SynkbqHYZtnG5vECwTWLzpaEVlhMbuJwF+E8ag5VG0nATngiNNp7SKGic7qca8Tz2OEUOjm7G/ndX9yBvFAnUXACzI3ORikUTQ3Sb/Pk6d95pNXTDDygfhbGfb6FdXys4YLJU1zapnG3yaRl/zstvbLvSEnCDF64cmTaiNu6HUodbSxF/DM5D49I7fXMA3nRUOQ9wWyJgHEnD7qZFUD/2yVms0UGfZyMl/TQsKXhLfFAGL50npeL38tTvZMl9OPrN6blkoIq3h1T9J0DmhvIDUL8dvQmPvPn/7v6IG71syujOGzLP+2EYj3qZVTsCJORMaL/4UGhYM7JRlbMUxgjf5KS5ImzycwqWUaCq2YEhC+JGp6KAtP6L54dprAvCKztI0e+hdo2yUueFplnFR7JzsTryupU0RTxQuRTqpUW4oJMJOBwcaDc8lLXg8JO6byFMIXcb2hHnI49Bx4VcWZLpwAzMcxNLDkTAaltlt+Jj+c1GcE2YjreGPmp4n6NCvj/9RZNrXKCfugkmgCCS1J9gjTyO5JHQ2Wq9Lt7TAkF5Tj0S2Xt1GnrZJwYOSbUG0G428swH8SQztK+awEv6n/HyJVwzzSrmGnwTPQP4t3hAbeXI6p519y6+RXA71x+KtK1w2IsfxniGnhK9jwNRgE2oJUmQChqYK0NeppquZbSSVzTTdeNquRY6VkM1eYnRX7f6kazQmjqBEdO35dSwXLjJ+yt2zygFjIhtv4q2DYMQ+DyOTRyQvqfee/3VLiw0Kp/ieUvLjLG8XyNA/smLYAB8FqNl4YDVmRddotMgWZemiVjtKvkgD/pfycYLbuKiaDbe9P8VbYhVo8iOZNhYo9pHI8FSxtn4NnmRdTLD/YnSpLN/+Oaw7Y4Mi6Zh5mTqMqPaPPCSOZczuV9LfrNOiCJeRZWXFYcGqOgnyQTECBQE0/Cg5cCLTxXy0tk9gKPr5b6OwQlB+u0jiGIsQnEG0Y2yZbHW9jbFqTTfSDR8vTXpVqnROXFbfA3M5tLnZFJ0lMK/x9hHHdjMUt5X5CvuelG4Pwu/HnVkRTDk0EgQo7vy38nifOsKiYM9A22qJkSV8byRa7AvsW5ECtlEen3n6EubuVjtjqL9mHByZ1relzJZfKPvu7IJl3UpXeJP8165BkJCnpj6LYQSCAbQ5Rtea33hN4yPMM4eYjApXO0hLRzKCy9RCkzUe8uYgrW0n7uTTSeJQLprap2FeqHVImfHnlwILayI9nrflXd0xxnAMAEiilMWTZ3ryThLcRSdtRffDLtjRU4bSfJ4ySGRn5Zz1pvaZxDPgquHJqp2Z23LlTLS85MWnFcAwMB4N+7+n2VmoFEbGgfheuEqKj/z2ePW68hiVCncivvEfVxgqG1NB6AS955OaA7A//HTOrzImFKrB1KgXx8kDK698bDrVUbmzEr7GgyamlMJzPFTRNyIL23gL6ACPyqK2NnK4K0/2VJH/jd1c3nJHJqeOchnGHqV1IXXDESntwRcmpe1Je5OD/oCWbsCahd2CzTJAmmoJdg3RysDIMTFe6kbfAzJSf20VuBeEsO0Ea2RVgwX8k5qsRtOgHTTGRobhK4n0jqOt2t0EtE9WpkNmKhx59BHy1fFKbyTdLj7taBnvmKsl+B3U9RwTgeiXnLTw/o+SYL4x50WO6vZosuOacBI0fi35EXAyNpAX8JJxOc+Oee9BH19WkhylKR639UvvLx/C2147u3GqssgdkOU84inpOyY8cL539OR/wfgNWNvOmS0j8sJ2s+2Un1LWdxX848b3L3ERau61mM8T0wib1VTV03Uq6YuJGvrps736RbUgoKMJW4+Ouq3XSBYF3NLUl3bOETA02D8BdK5QFQQAHyr+9wsVIBF3jhyksUs+8LkBZ+nkpE7isvIEOV8bZ8WJzQrbqYFbom26/GZxKjurlO4DbcRXj8/8FC2bxNDTgqJCIaGmDZCg+j3nJU44SVjr0LOj0/OwbJcRQ29gR29fAzG4dU/delR4nTMW7YbRfGOKqQRx3v9rXZC6jFqDrAS6QGz8BFLvg6hO369dav6T+0+mSqP8EG+5onnD9/feD0SkbH1o2SDUzeHi7XcMdsfUl6AZTX/cfTLHZtknPPG7d4PTsG1oILq1a9UVnxq/e/wO6wzDwSiwuEiF8j/dGT+I8hjF2e5IFg7kIuL6eNxzg1GJUHhcv1pE3pZAurMSWRhImo8JNzZSCaC5oE9Uc4dS7vtW0N9+1dgCuOO0Es9809ze9/fKX7qVr7m1f6LIb2GVpXwH7MoVvGXyuJcmFB9elaCb7P4iJMQ8HD+9hjW6eXrErKDFF3JGWjqpNLKGsOwT0dj5UUcVGq+wk0naZhe+y8sY3LoUmCFQXvrdktJlORuJvyDWqS1RToqtXOfDBQaGcRyPNxnrShTZ443cjPSbWUn7kxxYUctBxC8Yr0bC12GAb3bosqPzmdX/jnxvabWWr9+3bCReeIk56R8kNe7PR3SMsGTf1mV0c4RUhXlcWIN3l1fLYula1IfHUNcnD7x+F8SSwwtzOcuAdPtiQT7xV9BMpWUcX0/ZN2ACii3wNc4btU5uIMnrBrCcQi8EY+c5oxwM/2HkxyT9A/3Ks9lbaro2NNr4O4x7FSiteeXM7rSfKc03UUkMrpPGZZxjeSx3WjuD8ygCrp6nhsse1HtddzYp6Z2oUb/I/TmL6VX18qPagjoi95zfZAalD+3SJX0B05vn4mCyr86QhV+Ch89Gd8723jj8y36/UAzrvvr37H+W6CxUvMs/epbNRCckSRr8vVlj1w7guDf21CgM4UB0rq4QIW47t9Gyp+to3146CZ3NHV+C70uVzGRaCSZZuKig5lLErLzI8zWXDxE4GMLRpNpvvIzg6DgmNjghXLWlSDJSB/XKe/jWzftxG0YUCUtbudpqqiOSl/+yQqF5dQJlHENwG/wp1mS8VHJJ39MSQkObw0EamXWiCvo3xIcEP4HvQvcHs523bYX5yI0HXUzYIY0t+x5DptvdL+YlvHSnHQOon/fPJk1io/EO3KPZxvvoIK6O2kR0RMYzXbTK70ZpwcNAN9qcb9XJnuIRU1cj7hcoXGWfRBAYJRVRd3ld/G6sHEI5OvwBSiuS48W8m7nsIt/GN6IpHk+piCA44QiYWUfE2LDITc3hbRxoXcWfalzNWaPSkIiTofKZR3A2rUZImvY3LDUNVojQFVjrVrxy7xl7/2jG9tur4XixOGSzFISEoBe/pW7mT+ohZWI7saPSvo3ou/Et8gRKU5qexVbOXNVwyYnXqMzbzq8GyGBQW7zY/t1sWRS9nFR32RA/5VsbXPgUG0jGRzH2mOrvgmmdh8p+Ko0r7OsZupakbEsYBLaRqc/kc7jDXpfHVQK9DaP4px7JDiffssnKLgFh7X8xHs8QRSN0eijsYPwgQhfmF5I53U4ZJD3Nwi6vYNjz4WoHHrBSWuZrIf+GA4nlVHjaCICWn2OBg189a10z4vmOjRm2xU6tWbc8WpYxCuN6t4kja4L42Q6RAnNiedAtxhjjEr8OJamc4OiM66XkO/Etv7ZxQUv5x+DNEMQA3pQfrL8UN9vKmVpwIm+PLZ8JVrgI+deSL2fIAUtsSEZV1jYc2o0pKa/m9l/r6Wb59kPh4zAAe9whiGAO9So5rzPmumQY9RCP4+5FgYigcbMgKi32PrmnxFAreSO4XAsJhsPYBwu/iRNY6oVjElk1fI4NHCWwU/lb+3FsGMrqzINFT2YMDz4dVoC8/js7g9liLbmLMXJeRFNVyi7AFvpClz3tq4maA3ej4oLEpRnKosGXUuIq/9vERDtEEZC7fpmupV5kI13plU9XMg5ASGPI39PvnKLcFiMs+5FXLtjQB9+p7HTJW8PhUMwW1AQHmyimsxfHFEiuR/BpHgMMiUgDtkqcitJZzxy/hPIAzJsIf/RQNMFz1j9nNmtYnFIXNnGECxOH0UWs2TNSOehrrtg5pGXLGq/lz25HS6wiHUzfF+1aqEL0YOszqxC9qknkxZLu/k8bJzEWIafXqaISMS7XMXFj1xA6cRF5uZpLSNN1Ua7gOTMiMbBJQfBcJTprW2kmadMedkQUZlxqtpqUSAonfx3prBEIx85zddk+JoXxA3cFpqWYweZKzzrQSvjqRndBv19mZQo5q07mR+nM7I29wjvcyUvffi+OOIrUepyj/OCtOgr6nbXDD07Hf2pbd1vDpTqpIJ6vV957U4VOVFeM7CzBlnkf/Hr+VcqVhA4b4DtCyT1RG9EoqfU54dmyMIKJM+0p1WyWKVAirdx84ysWAHvulc78aQSqVfXtyK7zWzbaleH1jAIKJJek/nJ4O8w14WkjDOZZ/y/KftKHEUn19bQRWYLaNP7oRkSF+Mr4LZoRHtVEWXfzmKNl5M9furNdis1Bn4IYKeN+px1Zh6kAaHs5unVbSU2w/DGJTHsc5O4bfx9OkS1oAhdEasi29NIueHawITa1bxk6nh4UErYPH8yaLdBbf/XesoLpZag/4+1W+GAdO4ojalXeJo7zZe0Cca59DzLmCAmFkRVVQDy5kdeQBxa7qpmqfgsm/p0yyXrb6CwAeIs1BJpq8LwDAP504YYNMW8x0nFsmjMaPYFn/2+nZ6objs3qESyBF4UzvDCk4o3648H9wioTueez1xTF9hLjLNz4FD3CxcVz97kdB7VOx19AdMu5aIjjj2SebVpK5pMWV3rn6eFSyadoXFzli3zVnKH2D4KfF6VQdtuExdBHWkSkMjmChN3Z8EHG3BmnMTtHiKKmwyncfUKEBzXmZ6nZjDjk8hLwHySMu5b/yjXgEI1TrHC5RNPB5U6QkpOkfrdM2m25C+uki5+KZ+GfGfmqu621pKIqb4e0ZPZ7YQNjBJHh9VcPk7p4zJiQoPNWOsGPKdENj5jT/pFuKjcONZLEWKRyu3Fd62rNkKTqTiHYJuus2KErBZCeJsvFFbz38w4BPo67ZFpxFZ0vw62yhWO5EkM7rVUxnPFNOLSnL5mSTS7hYUYUCoK66FWzeXaKS+O5lY+A1Ty6DZZBKT7p8IugM/KF20DQ/yJOJe9WXgFNkO8dGmZwD00eRsxPuynU6ccZ0AI9aFqRGk6E5t476D3BkKcNUThRm/aZGH8VZXiL4l2dEohDpRTx00WNvdyqSleuGtd0H2yvPD9b2O2evy4U8r4VJETdgvTHMwydIHVfgg5YbcNY1JDnNkw8NJiP2MegF3RNTRsH4Cf873MkC3mlMujDX1VwqYw1YDUksACF0DaXaR2iRhNN1bYF1rRdDdzb964/v4ajKAxqSDOp2PEda+HxnbTn5YB3hTuE2DbMskrMFNcq9udcDe5fBuUSth25vRdmxwJEfyYGnMmLay7OJItprQFGewtw/bG8xNPv7Ob8YcKwg3kbO2sVl+sGvI6PAGPh1VSOKHuOjxa7YITir7stNGSneA37PZATsdWvEcUtcep2FIoIag3V8o2w7fbleFbbOM8mysRFsv4u+cwEf7TDii</div><div id="enc_passwd"> <input id="enc_pwd_input" type="text" style="border-radius: 5px;border-style: groove;height: 30px;width: 50%;cursor: auto;font-size: 102%;color: currentColor;outline: none;text-overflow: initial;padding-left: 5px;" onkeydown="if (event.keyCode == 13) { decrypt(); return false;}"> <input type="submit" value="解&nbsp;密" onclick="decrypt()" style="width: 58px;height: 34px;border-radius: 5px;background-color: white;border-style: solid;color: currentColor;"><div id="enc_error" style="display: inline-block;color: #d84527;margin-left: 10px"></div>
<script>
var onError = function(error) {
	document.getElementById("enc_error").innerHTML = "password error!"
};
function decrypt() {
var passwd = document.getElementById("enc_pwd_input").value;
console.log(passwd);
doDecrypt(passwd, onError);
}
</script>
</div>]]></content>
      
        
    </entry>
    
    <entry>
      <title><![CDATA[函数式编程]]></title>
      <url>/2017/09/25/front-end/elm/elm/</url>
      <content type="html"><![CDATA[<p>编程<br><a id="more"></a></p>
<h2 id="声明式函数编程"><a href="#声明式函数编程" class="headerlink" title="声明式函数编程"></a>声明式函数编程</h2><blockquote>
<p>告诉“机器”你想要的是什么(what)，让机器想出如何去做(how)。</p>
<h2 id="命令式函数编程"><a href="#命令式函数编程" class="headerlink" title="命令式函数编程"></a>命令式函数编程</h2><p>命令“机器”如何去做事情(how)，这样不管你想要的是什么(what)，它都会按照你的命令实现。</p>
</blockquote>
<h1 id="编程"><a href="#编程" class="headerlink" title="编程"></a>编程</h1><h2 id="函数式编程"><a href="#函数式编程" class="headerlink" title="函数式编程"></a>函数式编程</h2><p>对于值的操作不是修改原来的值，而是产生新的值<br>不使用可变的变量、赋值、循环和其它命令式控制结构进行编程<br>引用透明、无副作用</p>
<blockquote>
<p><a href="https://www.zhihu.com/question/28292740" target="_blank" rel="external">什么是函数式编程思维-用心阁的回答</a></p>
<h2 id="命令式编程"><a href="#命令式编程" class="headerlink" title="命令式编程"></a>命令式编程</h2></blockquote>
]]></content>
      
        <categories>
            
            <category> Front-end </category>
            
            <category> elm </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[在React中使用echarts]]></title>
      <url>/2017/09/24/front-end/advance/echarts%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93/</url>
      <content type="html"><![CDATA[<p>echarts已经做过demo了，但没有总结再回头翻还得重新记概念。<br><a id="more"></a><br>echarts的使用主要是其option的配置<br>使用的库为echarts-for-react</p>
<h2 id="常用配置属性"><a href="#常用配置属性" class="headerlink" title="常用配置属性"></a>常用配置属性</h2><p>color: 配色方案，array<br>title: object<br>toolbox: 工具组件，可配置些工具<br>legend: 图例组件,展现了不同系列的标记(symbol)，颜色和名字。可以通过点击图例控制哪些系列不显示。<br>xAxis: 直角坐标系 grid 中的 x 轴array，一般只配置一个，由data指定坐标轴内容</p>
<pre><code>&gt; 其元素属性:
      type 
      data: array,可定义其textStyle
</code></pre><p>yAxis: 定义y轴格式<br>series: array，定义数据源，每个数组元素的name属性和legend需一一对应才能有legend控制隐藏显示</p>
<pre><code>&gt; 数组元素属性: 
    1. name
    2. type
    3. data数据源的y轴坐标信息，按x轴坐标排列
    4. markLine: 标线，object,常用属性如下 
          1. label(object,定义显示文本信息，分normal和emphasis)
                子项（normal和emphasis）属性:
                    1. show: bool，是否显示
                    2. position： string 定义在何处显示，start，middle，end
                    3. formatter: &apos;{a}{b}{c}{d}&apos;，其中b为data中的name字段
          2. data: 标线的name和线条信息(可只定义xAxis or yAxis，默认贯穿坐标轴)
</code></pre><p>visualMap: 可配置按y值分区域显示不同颜色区块</p>
<h2 id="动态加载数据"><a href="#动态加载数据" class="headerlink" title="动态加载数据"></a>动态加载数据</h2><p>只需动态替换xAxis和series的data即可</p>
<h2 id="简单源码"><a href="#简单源码" class="headerlink" title="简单源码"></a>简单源码</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div><div class="line">126</div><div class="line">127</div><div class="line">128</div><div class="line">129</div><div class="line">130</div><div class="line">131</div><div class="line">132</div><div class="line">133</div><div class="line">134</div><div class="line">135</div><div class="line">136</div><div class="line">137</div><div class="line">138</div><div class="line">139</div><div class="line">140</div><div class="line">141</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> React <span class="keyword">from</span> <span class="string">'react'</span></div><div class="line"><span class="keyword">import</span> ReactEcharts <span class="keyword">from</span> <span class="string">'echarts-for-react'</span></div><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">EchartTest</span> <span class="keyword">extends</span> <span class="title">React</span>.<span class="title">Component</span> </span>&#123;</div><div class="line">  <span class="keyword">constructor</span> (props) &#123;</div><div class="line">    <span class="keyword">super</span>(props)</div><div class="line">    <span class="keyword">this</span>.state = &#123;</div><div class="line">      xdata: [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>],</div><div class="line">      seriesData: [<span class="number">100</span>, <span class="number">700</span>, <span class="number">230</span>, <span class="number">370</span>, <span class="number">450</span>, <span class="number">260</span>, <span class="number">70</span>],</div><div class="line">      yRange: [<span class="number">392.96</span>, <span class="number">442.08</span>],</div><div class="line">    &#125;</div><div class="line">  &#125;</div><div class="line">  render () &#123;</div><div class="line">    <span class="keyword">let</span> colors = [<span class="string">'#5793f3'</span>]</div><div class="line">    <span class="keyword">const</span> &#123; seriesData, xdata, yRange &#125; = <span class="keyword">this</span>.state</div><div class="line">    <span class="keyword">const</span> option = &#123;</div><div class="line">      color: colors,</div><div class="line">      title: &#123;</div><div class="line">        text: <span class="string">'存储状态'</span>,</div><div class="line">        subtext: <span class="string">'纯属虚构'</span>,</div><div class="line">      &#125;,</div><div class="line">      tooltip: &#123;</div><div class="line">        trigger: <span class="string">'axis'</span>,</div><div class="line">        axisPointer: &#123;</div><div class="line">          type: <span class="string">'cross'</span>,</div><div class="line">          label: &#123;</div><div class="line">            backgroundColor: <span class="string">'#283b56'</span>,</div><div class="line">          &#125;,</div><div class="line">        &#125;,</div><div class="line">      &#125;,</div><div class="line">      legend: &#123;</div><div class="line">        x: <span class="string">'40%'</span>,</div><div class="line">        top: <span class="string">'0%'</span>,</div><div class="line">        textStyle: &#123;</div><div class="line">          color: <span class="string">'#90979c'</span>,</div><div class="line">        &#125;,</div><div class="line">        <span class="comment">// 和series中的name一一对应</span></div><div class="line">        data: [<span class="string">'存储空间使用'</span>],</div><div class="line">      &#125;,</div><div class="line">      toolbox: &#123;</div><div class="line">        show: <span class="literal">true</span>,</div><div class="line">        left: <span class="string">'center'</span>,</div><div class="line">        feature: &#123;</div><div class="line">          magicType: &#123;</div><div class="line">            type: [<span class="string">'line'</span>, <span class="string">'bar'</span>],</div><div class="line">          &#125;,</div><div class="line">          restore: &#123;&#125;,</div><div class="line">          saveAsImage: &#123;&#125;,</div><div class="line">        &#125;,</div><div class="line">      &#125;,</div><div class="line">      dataZoom: &#123;</div><div class="line">        show: <span class="literal">false</span>,</div><div class="line">        start: <span class="number">0</span>,</div><div class="line">        end: <span class="number">100</span>,</div><div class="line">      &#125;,</div><div class="line">      xAxis: [</div><div class="line">        &#123;</div><div class="line">          type: <span class="string">'category'</span>,</div><div class="line">          boundaryGap: <span class="literal">false</span>,</div><div class="line">          data: xdata,</div><div class="line">        &#125;,</div><div class="line">      ],</div><div class="line">      yAxis: [</div><div class="line">        &#123;</div><div class="line">          type: <span class="string">'value'</span>,</div><div class="line">          scale: <span class="literal">true</span>,</div><div class="line">          name: <span class="string">'存储状态'</span>,</div><div class="line">          min: <span class="number">0</span>,</div><div class="line">          axisLine: &#123;</div><div class="line">            lineStyle: &#123;</div><div class="line">              color: colors[<span class="number">0</span>],</div><div class="line">            &#125;,</div><div class="line">          &#125;,</div><div class="line">          axisLabel: &#123;</div><div class="line">            formatter: <span class="string">'&#123;value&#125; G'</span>,</div><div class="line">          &#125;,</div><div class="line">        &#125;,</div><div class="line">      ],</div><div class="line">      visualMap: &#123;</div><div class="line">        top: <span class="number">10</span>,</div><div class="line">        right: <span class="number">10</span>,</div><div class="line">        pieces: [&#123;</div><div class="line">          min: <span class="number">0</span>,</div><div class="line">          max: yRange[<span class="number">0</span>],</div><div class="line">          color: <span class="string">'#096'</span>,</div><div class="line">        &#125;, &#123;</div><div class="line">          min: yRange[<span class="number">0</span>],</div><div class="line">          max: yRange[<span class="number">1</span>],</div><div class="line">          color: <span class="string">'#e9a11b'</span>,</div><div class="line">        &#125;, &#123;</div><div class="line">          min: yRange[<span class="number">1</span>],</div><div class="line">          color: <span class="string">'#db5019'</span>,</div><div class="line">        &#125;],</div><div class="line">        outOfRange: &#123;</div><div class="line">          color: <span class="string">'#999'</span>,</div><div class="line">        &#125;,</div><div class="line">      &#125;,</div><div class="line">      series: [</div><div class="line">        &#123;</div><div class="line">          name: <span class="string">'存储空间使用'</span>,</div><div class="line">          type: <span class="string">'line'</span>,</div><div class="line">          xAxisIndex: <span class="number">0</span>,</div><div class="line">          yAxisIndex: <span class="number">0</span>,</div><div class="line">          areaStyle: &#123;</div><div class="line">            normal: &#123;&#125;,</div><div class="line">          &#125;,</div><div class="line">          data: seriesData,</div><div class="line">          markLine: &#123;</div><div class="line">            silent: <span class="literal">false</span>,</div><div class="line">            label: &#123;</div><div class="line">              normal: &#123;</div><div class="line">                show: <span class="literal">false</span>,</div><div class="line">                position: <span class="string">'end'</span>,</div><div class="line">                formatter: <span class="string">'&#123;b&#125;'</span>,</div><div class="line">              &#125;,</div><div class="line">              emphasis: &#123;</div><div class="line">                show: <span class="literal">true</span>,</div><div class="line">                position: <span class="string">'middle'</span>,</div><div class="line">                formatter: <span class="string">'&#123;b&#125;'</span>,</div><div class="line">              &#125;,</div><div class="line">            &#125;,</div><div class="line">            data: [&#123;</div><div class="line">              name: <span class="string">'橙色预警'</span>,</div><div class="line">              yAxis: yRange[<span class="number">0</span>],</div><div class="line">            &#125;, &#123;</div><div class="line">              name: <span class="string">'红色预警'</span>,</div><div class="line">              yAxis: yRange[<span class="number">1</span>],</div><div class="line">            &#125;],</div><div class="line">          &#125;,</div><div class="line">        &#125;,</div><div class="line">      ],</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">return</span> (</div><div class="line">      &lt;div&gt;</div><div class="line">        &lt;ReactEcharts</div><div class="line">          option=&#123;option&#125;</div><div class="line">        /&gt;</div><div class="line">      &lt;<span class="regexp">/div&gt;</span></div><div class="line"><span class="regexp">    )</span></div><div class="line"><span class="regexp">  &#125;</span></div><div class="line"><span class="regexp">&#125;</span></div><div class="line"><span class="regexp">export default EchartTest</span></div></pre></td></tr></table></figure>]]></content>
      
        
        <tags>
            
            <tag> React </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[windows中的SSH终端软件]]></title>
      <url>/2017/09/23/Tec/accumulation/windowsSSH/</url>
      <content type="html"><![CDATA[<ol>
<li>putty 小巧易用</li>
<li>xshell 分商用和个人</li>
<li>MobaXterm 分个人商用，刚开始用感觉还不错，还可以直接浏览目录结构</li>
<li>SecureCRT付费，有破解版，可用于跑脚本</li>
</ol>
<p>其他</p>
<ol>
<li>WinSCP，文件传输<br>参考: <a href="https://www.zhihu.com/question/24447656" target="_blank" rel="external">Xshell比SecureCRT差吗？</a></li>
</ol>
]]></content>
      
        
    </entry>
    
    <entry>
      <title><![CDATA[vscode使用技巧记录]]></title>
      <url>/2017/09/22/Tec/tools/vscode/vscodeTips/</url>
      <content type="html"><![CDATA[<p>水滴石穿<br><a id="more"></a></p>
<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>vscode用来写js还是挺不错的，以前用webstorm也挺好用，但搜索老不全，这个的搜索功能很好用</p>
<table>
<thead>
<tr>
<th>特点</th>
<th>描述 </th>
</tr>
</thead>
<tbody>
<tr>
<td>扩展插件</td>
<td>丰富 </td>
</tr>
<tr>
<td>集成终端</td>
<td>方便  </td>
</tr>
<tr>
<td>搜索功能</td>
<td>全面  </td>
</tr>
</tbody>
</table>
<h2 id="扩展插件"><a href="#扩展插件" class="headerlink" title="扩展插件"></a>扩展插件</h2><p>vscode扩展插件也很丰富</p>
<h3 id="ftp-sync"><a href="#ftp-sync" class="headerlink" title="ftp-sync"></a>ftp-sync</h3><p>实现代码同步，注意：<br>若ssh连接失败:  Error: Unable to start subsystem: sftp<br>解决方案：</p>
<blockquote>
<p>In order to use sftp and scp you have to insert the following line in the configuration file /etc/ssh/sshd_config(RedHat Linux).<br>Subsystem   sftp   /usr/libexec/openssh/sftp-server<br>After this modification you must restart sshd. So you could use sftp and scp only to connect to hosts where sshd is running.<br>具体解决步骤<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">vi /etc/ssh/sshd_config</div><div class="line">插入或解除注释下面一句话</div><div class="line"># Subsystem   sftp   /usr/libexec/openssh/sftp-server</div><div class="line">保存并重启ssh服务</div><div class="line">/etc/init.d/sshd restart</div></pre></td></tr></table></figure></p>
</blockquote>
<h3 id="ESLINT"><a href="#ESLINT" class="headerlink" title="ESLINT"></a>ESLINT</h3><p>eslint是工程用得最多的插件了，用于代码格式纠错，刚开始满屏飘红让人崩溃，现在好多了，但感觉这软件不好的就是不能自动纠错，都知道问题在哪就不能一键纠错么…</p>
<h2 id="使用技巧"><a href="#使用技巧" class="headerlink" title="使用技巧"></a>使用技巧</h2><p>正则替换，相当方便<br>$0为匹配到的最长字符<br>$1开始为正则()含的字符，注意匹配(、)需要转义<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">查找：(system\(&quot;.*?)\s</div><div class="line">替换成: $1&quot;,&quot;</div><div class="line">描述：匹配system(&quot;任意内容加空格</div><div class="line"></div><div class="line">提高：（通过正则取非避免重复匹配）</div><div class="line">查找:(system\(&quot;[^,]*?)\s</div><div class="line">替换：$1&quot;,&quot;</div></pre></td></tr></table></figure></p>
]]></content>
      
        <categories>
            
            <category> Tool </category>
            
            <category> Tools </category>
            
            <category> Vscode </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[vscode使用代码段]]></title>
      <url>/2017/09/21/Tec/tools/vscode/vscodesnippet/</url>
      <content type="html"><![CDATA[<p><img src="https://github.com/vonxq/vonxq.github.io/blob/master/img/snippet.gif?raw=true" alt=""><br><a id="more"></a></p>
<h1 id="使用snippet"><a href="#使用snippet" class="headerlink" title="使用snippet"></a>使用snippet</h1><h2 id="最简单的用法"><a href="#最简单的用法" class="headerlink" title="最简单的用法"></a>最简单的用法</h2><ol>
<li>打开插件库，搜索并下载相应语言的snippet插件</li>
<li>使用插件：在相应的文档中输入快捷prefix就能看到内容了<h2 id="自定义代码段"><a href="#自定义代码段" class="headerlink" title="自定义代码段"></a>自定义代码段</h2>参考网页<a href="http://www.cnblogs.com/summit7ca/p/5225494.html" target="_blank" rel="external">Visual Studio Code 添加设置代码段(snippet)</a><br>详细步骤:<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">1. F1打开vscode命令输入框，输入snippet</div><div class="line">2. 选择相应代码</div><div class="line">3. 输入设置的代码段</div><div class="line">4. 保存</div><div class="line">5. 使用</div></pre></td></tr></table></figure>
</li>
</ol>
]]></content>
      
        <categories>
            
            <category> Tool </category>
            
            <category> Tools </category>
            
            <category> Vscode </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[使用react-dnd+antd tree实现两个列表的拖拽数据传递]]></title>
      <url>/2017/09/20/front-end/React/Practice/drag/</url>
      <content type="html"><![CDATA[<p><img src="https://github.com/vonxq/TreeDragDemo/raw/master/img/dragDemo.gif" alt=""><br><a id="more"></a></p>
<h1 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h1><p>项目内需要用到将已有Tree形式数据组织排列到新的Tree中，新的Tree可动态增删(现在还没实现删除功能)，还可以动态地改变Tree排序方式<br>主要实现以下功能：<br>DragSource可拖拽到DragTarget中，DragTarget动态添加节点(React-dnd实现)<br>DragTraget可实现拖拽排序功能(antd tree实现)</p>
<h2 id="源码地址"><a href="#源码地址" class="headerlink" title="源码地址"></a>源码地址</h2><p><a href="https://github.com/vonxq/TreeDragDemo" target="_blank" rel="external">https://github.com/vonxq/TreeDragDemo</a></p>
<h2 id="使用工具"><a href="#使用工具" class="headerlink" title="使用工具:"></a>使用工具:</h2><ol>
<li>react-dnd + antd(tree组件)</li>
<li>create-react-app</li>
</ol>
<h1 id="实现详解"><a href="#实现详解" class="headerlink" title="实现详解"></a>实现详解</h1><p><a href="https://github.com/react-dnd/react-dnd" target="_blank" rel="external">react-dnd</a>是一个开源的拖拽实现源码，之前也调研过<a href="https://github.com/atlassian/react-beautiful-dnd" target="_blank" rel="external">react-beautiful-dnd</a>，但这个好像功能较少，最后还是选择了react-dnd</p>
<p>antd是阿里的react组件库，主要是我懒，就用了现成的可拖拽Tree，Tree好像不能实现两个Tree之间的拖拽传递，我试着做了下，但Tree并不能识别不是自己tree的drag节点(key标识)信息，这应该跟底层源码实现有关，估计是被规避了，不想折腾最后两个组件之间的拖拽传递就采用了react-dnd来做</p>
<h2 id="React-dnd的使用"><a href="#React-dnd的使用" class="headerlink" title="React-dnd的使用"></a>React-dnd的使用</h2><p>react-dnd有个官方的实例,效果可以<a href="http://react-dnd.github.io/react-dnd/examples-chessboard-tutorial-app.html" target="_blank" rel="external">点击查看</a><br>具体实现过程<a href="http://react-dnd.github.io/react-dnd/docs-tutorial.html" target="_blank" rel="external">点击查看</a><br>看官方实例再对照API感觉会清晰很多，官方讲解全是英文，自己看得也很吃力，所以说英语还是很重要啊。反正不管怎样，最后这个功能也实现了，最好的学习方式就是示例源码对照着API，很容易理解。</p>
<h3 id="DragSource"><a href="#DragSource" class="headerlink" title="DragSource"></a>DragSource</h3><p>基础用法:<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> &#123; DragSource &#125; <span class="keyword">from</span> <span class="string">'react-dnd'</span>;</div><div class="line"></div><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyComponent</span> </span>&#123;</div><div class="line">  <span class="comment">/* ... */</span></div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">export</span> <span class="keyword">default</span> DragSource(type, spec, collect)(MyComponent);</div></pre></td></tr></table></figure></p>
<h4 id="参数讲解"><a href="#参数讲解" class="headerlink" title="参数讲解:"></a>参数讲解:</h4><blockquote>
<p>type: Required. Either a string, an ES6 symbol, or a function that returns either given the component’s props. Only the drop targets registered for the same type will react to the items produced by this drag source. Read the overview to learn more about the items and types.</p>
<p>spec: Required. A plain JavaScript object with a few allowed methods on it. It describes how the drag source reacts to the drag and drop events. See the drag source specification described in detail in the next section.</p>
<p>collect: Required. The collecting function. It should return a plain object of the props to inject into your component. It receives two parameters: connect and monitor. Read the overview for an introduction to the monitors, the connectors, and the collecting function. See the collecting function described in detail after the next section.</p>
<p>options: Optional. A plain object. If some of the props to your component are not scalar (that is, are not primitive values or functions), specifying a custom arePropsEqual(props, otherProps) function inside the options object can improve the performance. Unless you have performance problems, don’t worry about it.</p>
<h4 id="type"><a href="#type" class="headerlink" title="type"></a><span id="type">type</span></h4><p>必要的。很好懂，类似namespace的概念，只有type相同的DragSource和DragTarget能相互识别</p>
<h4 id="spec"><a href="#spec" class="headerlink" title="spec"></a><span id="spec">spec</span></h4><p>必要的。就是一个对象，定义了几个函数，我做的功能只用到了第一个函数</p>
<h5 id="参数讲解："><a href="#参数讲解：" class="headerlink" title="参数讲解："></a>参数讲解：</h5><p>props: Your component’s current props.<br>monitor: 可以使用getItem()来得到具体的值。<br>  An instance of DragSourceMonitor. Use it to query the information about the current drag state, such as the currently dragged item and its type, the current and initial coordinates and offsets, and whether it was dropped yet. Read the DragSourceMonitor documentation for a complete list of monitor methods, or read the overview for an introduction to the monitors.<br>component: 就是组件句柄，相当于this，可以用这个调用其内部函数。<br>  When specified, it is the instance of your component. Use it to access the underlying DOM node for position or size measurements, or to call setState, and other component methods. It is purposefully missing from isDragging and canDrag because the instance may not be available by the time they are called. If you want these methods to depend on the component’s state, consider lifting the state to the parent component, so that you can just use props. Generally your code will be cleaner if you rely on props instead whenever possible.</p>
</blockquote>
<h5 id="具体可用方法"><a href="#具体可用方法" class="headerlink" title="具体可用方法:"></a>具体可用方法:</h5><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">const</span> spec = &#123;</div><div class="line">  <span class="comment">// 此函数返回一个对象，这个对象用于描述此被draf对象，可在DragTarget的spec的drop方法中通过monitor.getItem()得到</span></div><div class="line">  beginDrag(props, monitor, component)&#123;&#125;<span class="comment">// Required. When the dragging starts, beginDrag is called. You must return a plain JavaScript object describing the data being dragged. What you return is the only information available to the drop targets about the drag source so it's important to pick the minimal data they need to know. You may be tempted to put a reference to the component into it, but you should try very hard to avoid doing this because it couples the drag sources and drop targets. It's a good idea to return something like &#123; id: props.id &#125; from this method.</span></div><div class="line">  endDrag(props, monitor, component)&#123;&#125;<span class="comment">// Optional. When the dragging stops, endDrag is called. For every beginDrag call, a corresponding endDrag call is guaranteed. You may call monitor.didDrop() to check whether or not the drop was handled by a compatible drop target. If it was handled, and the drop target specified a drop result by returning a plain object from its drop() method, it will be available as monitor.getDropResult(). This method is a good place to fire a Flux action. Note: If the component is unmounted while dragging, component parameter is set to be null.</span></div><div class="line"></div><div class="line">  canDrag(props, monitor)&#123;&#125;<span class="comment">//Optional. Use it to specify whether the dragging is currently allowed. If you want to always allow it, just omit this method. Specifying it is handy if you'd like to disable dragging based on some predicate over props. Note: You may not call monitor.canDrag() inside this method.</span></div><div class="line"></div><div class="line">  isDragging(props, monitor)&#123;&#125;<span class="comment">//Optional. By default, only the drag source that initiated the drag operation is considered to be dragging. You can override this behavior by defining a custom isDragging method. It might return something like props.id === monitor.getItem().id. Do this if the original component may be unmounted during the dragging and later “resurrected” with a different parent. For example, when moving a card across the lists in a Kanban board, you want it to retain the dragged appearance—even though technically, the component gets unmounted and a different one gets mounted every time you move it to another list. Note: You may not call monitor.isDragging() inside this method.</span></div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h4 id="collect"><a href="#collect" class="headerlink" title="collect"></a><span id="collect">collect</span></h4><p>必要的,此方法返回一个对象，这个对象会被注入到组件的props中<br>主要做两件事：</p>
<ol>
<li>connect the React DnD event handlers to some node in the component;</li>
<li>pass some knowledge about the dragging state to our component.<br>至少需要返回connect.dragSource()方法，让组件可以将自己连接起来，从而可以被拖拽及响应拖拽<h5 id="示例"><a href="#示例" class="headerlink" title="示例"></a>示例</h5><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// 定义</span></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">collect</span> (<span class="params">connect, monitor</span>) </span>&#123;</div><div class="line">  <span class="keyword">return</span> &#123;</div><div class="line">    connectDragSource: connect.dragSource(),</div><div class="line">    isDragging: monitor.isDragging()</div><div class="line">  &#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="comment">// 组件中应用</span></div><div class="line">render () &#123;</div><div class="line">    <span class="keyword">const</span> &#123; connectDragSource, isDragging, value &#125; = <span class="keyword">this</span>.props</div><div class="line">    <span class="keyword">return</span> connectDragSource(</div><div class="line">      &lt;div style=&#123;&#123;</div><div class="line">        float: <span class="string">"left"</span>,</div><div class="line">        opacity: isDragging ? <span class="number">0.5</span> : <span class="number">1</span>,</div><div class="line">        cursor: isDragging ? <span class="string">'move'</span>: <span class="string">''</span>,</div><div class="line">      &#125;&#125;&gt;</div><div class="line">        &lt;div&gt;<span class="xml"><span class="tag">&lt;<span class="name">Icon</span> <span class="attr">style</span>=<span class="string">&#123;&#123;</span> <span class="attr">marginRight:</span> '<span class="attr">5px</span>' &#125;&#125; <span class="attr">type</span>=<span class="string">"folder-open"</span> /&gt;</span>&#123;value.title&#125;<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></div><div class="line">      &lt;<span class="regexp">/div&gt;</span></div><div class="line"><span class="regexp">    )</span></div><div class="line"><span class="regexp">  &#125;</span></div></pre></td></tr></table></figure>
</li>
</ol>
<h4 id="options"><a href="#options" class="headerlink" title="options"></a>options</h4><p>本项目没具体用到，有需要再看API吧</p>
<h3 id="DropTarget"><a href="#DropTarget" class="headerlink" title="DropTarget"></a>DropTarget</h3><p>老是写成DragTarget…<br>基本用法：<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> &#123; DropTarget &#125; <span class="keyword">from</span> <span class="string">'react-dnd'</span>;</div><div class="line"></div><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyComponent</span> </span>&#123;</div><div class="line">  <span class="comment">/* ... */</span></div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">export</span> <span class="keyword">default</span> DropTarget(types, spec, collect)(MyComponent);</div></pre></td></tr></table></figure></p>
<p>参数讲解:</p>
<blockquote>
<p>types: Required. A string, an ES6 symbol, an array of either, or a function that returns either of those, given component’s props. This drop target will only react to the items produced by the drag sources of the specified type or types. Read the overview to learn more about the items and types.</p>
<p>spec: Required. A plain JavaScript object with a few allowed methods on it. It describes how the drop target reacts to the drag and drop events. See the drop target specification described in detail in the next section.</p>
<p>collect: Required. The collecting function. It should return a plain object of the props to inject into your component. It receives two parameters: connect and monitor. Read the overview for an introduction to the monitors, the connectors, and the collecting function. See the collecting function described in detail after the next section.</p>
<p>options: Optional. A plain object. If some of the props to your component are not scalar (that is, are not primitive values or functions), specifying a custom arePropsEqual(props, otherProps) function inside the options object can improve the performance. Unless you have performance problems, don’t worry about it.</p>
</blockquote>
<h4 id="types"><a href="#types" class="headerlink" title="types"></a>types</h4><p>必要的，基本同<a href="#type">上面的type</a>,只是还可以是多个type的数组，也就是能接收多个来源</p>
<h4 id="spec-1"><a href="#spec-1" class="headerlink" title="spec"></a>spec</h4><p>必要的，就是一些回调<br>参数讲解</p>
<blockquote>
<p>props: Your component’s current props.<br>monitor: 可以使用getItem()来得到刚才在DragSource spec的beginDrag()中返回的对象。An instance of DropTargetMonitor. Use it to query the information about the current drag state, such as the currently dragged item and its type, the current and initial coordinates and offsets, whether it is over the current target, and whether it can be dropped. Read the DropTargetMonitor documentation for a complete list of monitor methods, or read the overview for an introduction to the monitors.<br>component: When specified, it is the instance of your component. Use it to access the underlying DOM node for position or size measurements, or to call setState, and other component methods. It is purposefully missing from canDrop because the instance may not be available by the time it is called. If you want this method to depend on the component’s state, consider lifting the state to the parent component, so that you can just use props. Generally your code will be cleaner if you rely on props instead whenever possible. Do note this is always null when hovering stateless components.</p>
</blockquote>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="comment">//  可以使用getItem()来得到刚才在DragSource spec的beginDrag()中返回的对象</span></div><div class="line"><span class="comment">// component可以调用组件内部方法</span></div><div class="line">drop(props, monitor, component)&#123;&#125;<span class="comment">// Optional. Called when a compatible item is dropped on the target. You may either return undefined, or a plain object. If you return an object, it is going to become the drop result and will be available to the drag source in its endDrag method as monitor.getDropResult(). This is useful in case you want to perform different actions depending on which target received the drop. If you have nested drop targets, you can test whether a nested target has already handled drop by checking monitor.didDrop() and monitor.getDropResult(). Both this method and the source's endDrag method are good places to fire Flux actions. This method will not be called if canDrop() is defined and returns false.</span></div><div class="line">hover(props, monitor, component)&#123;&#125;<span class="comment">// Optional. Called when an item is hovered over the component. You can check monitor.isOver(&#123; shallow: true &#125;) to test whether the hover happens over just the current target, or over a nested one. Unlike drop(), this method will be called even if canDrop() is defined and returns false. You can check monitor.canDrop() to test whether this is the case.</span></div><div class="line">canDrop(props, monitor)&#123;&#125;<span class="comment">// Optional. Use it to specify whether the drop target is able to accept the item. If you want to always allow it, just omit this method. Specifying it is handy if you'd like to disable dropping based on some predicate over props or monitor.getItem(). Note: You may not call monitor.canDrop() inside this method.</span></div></pre></td></tr></table></figure>
<h2 id="tips"><a href="#tips" class="headerlink" title="tips"></a>tips</h2><p>react-dnd的dragSource和dropTraget可以是同一个组件，这种情况一般都是针对单个列表进行操作<br>具体实现可参考github上的<a href="https://github.com/MarshalW/react-sortable.git" target="_blank" rel="external">react-sortable</a><br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">export</span> <span class="keyword">default</span> DragSource(type, itemSource, collectSource)(DropTarget(type,itemTarget,collectTaget)(Item))</div></pre></td></tr></table></figure></p>
<h2 id="Antd-Tree的排序实现"><a href="#Antd-Tree的排序实现" class="headerlink" title="Antd Tree的排序实现"></a>Antd Tree的排序实现</h2><p>这个其实在Antd上有实例代码，我也没做什么大的改动，直接上源码吧,DragT是实现了Tree的动态拖动排序的，具体功能注释中有<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div><div class="line">126</div><div class="line">127</div><div class="line">128</div><div class="line">129</div><div class="line">130</div><div class="line">131</div><div class="line">132</div><div class="line">133</div><div class="line">134</div><div class="line">135</div><div class="line">136</div><div class="line">137</div><div class="line">138</div><div class="line">139</div><div class="line">140</div><div class="line">141</div><div class="line">142</div><div class="line">143</div><div class="line">144</div><div class="line">145</div><div class="line">146</div><div class="line">147</div><div class="line">148</div><div class="line">149</div><div class="line">150</div><div class="line">151</div><div class="line">152</div><div class="line">153</div><div class="line">154</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> React <span class="keyword">from</span> <span class="string">'react'</span></div><div class="line"><span class="keyword">import</span> &#123; Card, Tree, Icon &#125; <span class="keyword">from</span> <span class="string">'antd'</span></div><div class="line"><span class="keyword">import</span> &#123; DropTarget &#125; <span class="keyword">from</span> <span class="string">'react-dnd'</span></div><div class="line"><span class="keyword">import</span> PropTypes <span class="keyword">from</span> <span class="string">'prop-types'</span></div><div class="line"><span class="keyword">const</span>  TreeNode = Tree.TreeNode</div><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">DragT</span> <span class="keyword">extends</span> <span class="title">React</span>.<span class="title">Component</span> </span>&#123;</div><div class="line">  <span class="keyword">constructor</span> (props) &#123;</div><div class="line">    <span class="keyword">super</span>(props)</div><div class="line">    <span class="keyword">this</span>.state = &#123;</div><div class="line">      selectedKey: <span class="string">''</span>,</div><div class="line">      treeContent: [],</div><div class="line">    &#125;</div><div class="line">  &#125;</div><div class="line">  onDragEnter = <span class="function">(<span class="params">info</span>) =&gt;</span> &#123;</div><div class="line">    <span class="built_in">console</span>.log(info)</div><div class="line">  &#125;</div><div class="line">  <span class="comment">// 遍历数组,找出key值与之相同的对象(节点)，执行callback函数</span></div><div class="line">  <span class="comment">// 若key值不匹配且含有children，则循环遍历</span></div><div class="line">  <span class="comment">// 否则不执行任何操作</span></div><div class="line"> loop = <span class="function">(<span class="params">data, key, callback</span>) =&gt;</span> &#123;</div><div class="line">    data.forEach(<span class="function">(<span class="params">item, index, arr</span>) =&gt;</span> &#123;</div><div class="line">      <span class="keyword">if</span> (item.key === key) &#123;</div><div class="line">        <span class="keyword">return</span> callback(item, index, arr)</div><div class="line">      &#125;</div><div class="line">      <span class="keyword">if</span> (item.children) &#123;</div><div class="line">        <span class="keyword">return</span> <span class="keyword">this</span>.loop(item.children, key, callback)</div><div class="line">      &#125;</div><div class="line">    &#125;)</div><div class="line">  &#125;</div><div class="line">  onDrop = <span class="function">(<span class="params">info</span>) =&gt;</span> &#123;</div><div class="line">    <span class="comment">// console.log(info)</span></div><div class="line">    <span class="keyword">const</span> dropKey = info.node.props.eventKey</div><div class="line">    <span class="keyword">const</span> dragKey = info.dragNode.props.eventKey</div><div class="line">    <span class="keyword">const</span> data = <span class="keyword">this</span>.state.treeContent</div><div class="line">    <span class="keyword">let</span> dragObj</div><div class="line">    <span class="comment">// 保存节点信息并删除节点</span></div><div class="line">    <span class="keyword">this</span>.loop(data, dragKey, (item, index, arr) =&gt; &#123;</div><div class="line">      arr.splice(index, <span class="number">1</span>)</div><div class="line">      dragObj = item</div><div class="line">    &#125;)</div><div class="line">    <span class="comment">// 将节点插入到正确位置</span></div><div class="line">    <span class="keyword">if</span> (info.dropToGap) &#123;</div><div class="line">      <span class="keyword">let</span> ar</div><div class="line">      <span class="keyword">let</span> i</div><div class="line">      <span class="keyword">this</span>.loop(data, dropKey, (item, index, arr) =&gt; &#123;</div><div class="line">        ar.splice(i, <span class="number">0</span>, dragObj)        </div><div class="line">      &#125;)</div><div class="line">    &#125; <span class="keyword">else</span> &#123;</div><div class="line">      <span class="keyword">this</span>.loop(data, dropKey, (item) =&gt; &#123;</div><div class="line">        item.children = item.children || []</div><div class="line">        <span class="comment">// where to insert 示例添加到尾部，可以是随意位置</span></div><div class="line">        item.children.push(dragObj)</div><div class="line">      &#125;)</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">this</span>.setState(&#123;</div><div class="line">      treeContent: data,</div><div class="line">    &#125;)</div><div class="line">  &#125;</div><div class="line">  onNodeSelect = <span class="function">(<span class="params">selectedKeys, e</span>) =&gt;</span> &#123;</div><div class="line">    <span class="built_in">console</span>.log(<span class="string">'select'</span>, selectedKeys, e)</div><div class="line">    <span class="keyword">this</span>.setState(&#123; <span class="attr">selectedKey</span>: selectedKeys[<span class="number">0</span>] &#125;)</div><div class="line">  &#125;</div><div class="line">  <span class="comment">// 由数组生成Tree</span></div><div class="line">  getTreeNode = <span class="function">(<span class="params">treeContent</span>) =&gt;</span> &#123;</div><div class="line">    <span class="keyword">if</span> (!treeContent || treeContent.length === <span class="number">0</span>) &#123;</div><div class="line">      <span class="keyword">return</span> <span class="literal">null</span></div><div class="line">    &#125;</div><div class="line">    <span class="keyword">const</span> treeNode = treeContent.map(<span class="function">(<span class="params">value</span>) =&gt;</span> &#123;</div><div class="line">      <span class="keyword">if</span> (value.id === <span class="string">'all'</span>) &#123;</div><div class="line">        <span class="keyword">return</span> (</div><div class="line">          &lt;TreeNode</div><div class="line">            title=&#123;&lt;div&gt;<span class="xml"><span class="tag">&lt;<span class="name">Icon</span> <span class="attr">style</span>=<span class="string">&#123;&#123;</span> <span class="attr">marginRight:</span> '<span class="attr">5px</span>' &#125;&#125; <span class="attr">type</span>=<span class="string">"folder-open"</span> /&gt;</span>&#123;value.title&#125;<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span>&#125;</div><div class="line">            key=&#123;value.key&#125;</div><div class="line">          &gt;</div><div class="line">            &#123;<span class="keyword">this</span>.getTreeNode(value.children)&#125;</div><div class="line">          &lt;<span class="regexp">/TreeNode&gt;)</span></div><div class="line"><span class="regexp">      &#125;</span></div><div class="line"><span class="regexp">      return (</span></div><div class="line"><span class="regexp">        &lt;TreeNode</span></div><div class="line"><span class="regexp">          draggable</span></div><div class="line"><span class="regexp">          title=&#123; &lt;span&gt;&#123;value.title&#125;&lt;/</span>span&gt;&#125;</div><div class="line">          key=&#123;value.key&#125;</div><div class="line">        &gt;</div><div class="line">          &#123;<span class="keyword">this</span>.getTreeNode(value.children)&#125;</div><div class="line">        &lt;<span class="regexp">/TreeNode&gt;</span></div><div class="line"><span class="regexp">      )</span></div><div class="line"><span class="regexp">    &#125;)</span></div><div class="line"><span class="regexp">    return (</span></div><div class="line"><span class="regexp">      treeNode</span></div><div class="line"><span class="regexp">    )</span></div><div class="line"><span class="regexp">  &#125;</span></div><div class="line"><span class="regexp">  setItemKeys = (Item) =&gt; &#123;</span></div><div class="line"><span class="regexp">    Item = Object.assign(&#123;&#125;, Item, &#123;key: Item.id + Date.now()&#125;)</span></div><div class="line"><span class="regexp">    if (!Item.children || Item.children.length === 0) &#123;</span></div><div class="line"><span class="regexp">      return Item</span></div><div class="line"><span class="regexp">    &#125;</span></div><div class="line"><span class="regexp">    const children = Item.children.map((value) =&gt; &#123;</span></div><div class="line"><span class="regexp">      return this.setItemKeys(value)</span></div><div class="line"><span class="regexp">    &#125;)</span></div><div class="line"><span class="regexp">    const ret = Object.assign(&#123;&#125;, Item, &#123;children&#125;)</span></div><div class="line"><span class="regexp">    return ret</span></div><div class="line"><span class="regexp">  &#125;</span></div><div class="line"><span class="regexp">  /</span><span class="regexp">/ 新增Item</span></div><div class="line"><span class="regexp">  addItem = (Item) =&gt; &#123;</span></div><div class="line"><span class="regexp">    /</span><span class="regexp">/ 为新加Item设置新的key</span></div><div class="line"><span class="regexp">    let &#123; treeContent &#125; = this.state</span></div><div class="line"><span class="regexp">    Item= this.setItemKeys(Item)</span></div><div class="line"><span class="regexp">    console.log('new key:', Item.key)</span></div><div class="line"><span class="regexp">    treeContent.push(Item)</span></div><div class="line"><span class="regexp">    this.setState(&#123; treeContent &#125;)</span></div><div class="line"><span class="regexp">  &#125;</span></div><div class="line"><span class="regexp">  render () &#123;</span></div><div class="line"><span class="regexp">    const &#123; treeContent &#125; = this.state</span></div><div class="line"><span class="regexp">    const treeNodes = this.getTreeNode(treeContent)</span></div><div class="line"><span class="regexp">    const &#123; connectDropTarget &#125; = this.props</span></div><div class="line"><span class="regexp">    return connectDropTarget(</span></div><div class="line"><span class="regexp">      &lt;div</span></div><div class="line"><span class="regexp">        style=&#123;&#123;</span></div><div class="line"><span class="regexp">          float: "left",</span></div><div class="line"><span class="regexp">          minHeight: '500px',</span></div><div class="line"><span class="regexp">          border: '1px solid red',</span></div><div class="line"><span class="regexp">          marginLeft: '50px',</span></div><div class="line"><span class="regexp">          marginRight: '100px',</span></div><div class="line"><span class="regexp">          padding: '20px',</span></div><div class="line"><span class="regexp">        &#125;&#125;</span></div><div class="line"><span class="regexp">      &gt;</span></div><div class="line"><span class="regexp">        我可以接收drag、且本地可以排序的</span></div><div class="line"><span class="regexp">        &lt;Tree</span></div><div class="line"><span class="regexp">          draggable</span></div><div class="line"><span class="regexp">          draggable</span></div><div class="line"><span class="regexp">          onDragEnter=&#123;this.onDragEnter&#125;</span></div><div class="line"><span class="regexp">          onDrop=&#123;this.onDrop&#125;</span></div><div class="line"><span class="regexp">          onSelect=&#123;this.onNodeSelect&#125;</span></div><div class="line"><span class="regexp">        &gt;</span></div><div class="line"><span class="regexp">            &#123;treeNodes&#125;</span></div><div class="line"><span class="regexp">          &lt;/</span>Tree&gt;</div><div class="line">      &lt;<span class="regexp">/div&gt;</span></div><div class="line"><span class="regexp">    )</span></div><div class="line"><span class="regexp">  &#125;</span></div><div class="line"><span class="regexp">&#125;</span></div><div class="line"><span class="regexp">const spec = &#123;</span></div><div class="line"><span class="regexp">  /</span><span class="regexp">/ monitor.getItem()可获取之前dragsource在beginDrag中return的Object</span></div><div class="line"><span class="regexp">  /</span><span class="regexp">/component可直接调用组件内部方法</span></div><div class="line"><span class="regexp">  drop (props, monitor, component) &#123;</span></div><div class="line"><span class="regexp">    component.addItem(monitor.getItem())</span></div><div class="line"><span class="regexp">  &#125;</span></div><div class="line"><span class="regexp">&#125;</span></div><div class="line"><span class="regexp">function collect (connect, monitor) &#123;</span></div><div class="line"><span class="regexp">  return &#123;</span></div><div class="line"><span class="regexp">    connectDropTarget: connect.dropTarget(),</span></div><div class="line"><span class="regexp">    isOver: monitor.isOver(),</span></div><div class="line"><span class="regexp">  &#125;</span></div><div class="line"><span class="regexp">&#125;</span></div><div class="line"><span class="regexp">export default DropTarget('hahaha', spec, collect)(DragT)</span></div></pre></td></tr></table></figure></p>
]]></content>
      
        <categories>
            
            <category> Front-end </category>
            
            <category> React </category>
            
            <category> Practice </category>
            
        </categories>
        
        
        <tags>
            
            <tag> React </tag>
            
            <tag> Antd </tag>
            
            <tag> Drag-dnd </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[上传项目到github]]></title>
      <url>/2017/09/20/Tec/git/uploadProjectToGithub/</url>
      <content type="html"><![CDATA[<p>项目是已有的<br><a id="more"></a><br>本文参考：<a href="http://www.jianshu.com/p/0fce531dba31" target="_blank" rel="external">用 Git 上传项目到 GitHub</a></p>
<h1 id="上传步骤"><a href="#上传步骤" class="headerlink" title="上传步骤"></a>上传步骤</h1><p>在项目根目录执行以下语句<br><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># 初始化项目</span></div><div class="line">git init</div><div class="line"><span class="comment"># 设置远端仓库地址</span></div><div class="line">git remote add origin git@github.com:用户名/Git仓库名称.git</div><div class="line"><span class="comment"># 通常主远端仓库被称为 origin</span></div><div class="line">git config branch.master.remote origin  </div><div class="line">git config branch.master.merge refs/heads/master（设置分支的，可不设）</div><div class="line"><span class="comment"># 上传</span></div><div class="line">git push origin master</div></pre></td></tr></table></figure></p>
<h1 id="tips"><a href="#tips" class="headerlink" title="tips"></a>tips</h1><h2 id="忽略部分文件（不上传）"><a href="#忽略部分文件（不上传）" class="headerlink" title="忽略部分文件（不上传）"></a>忽略部分文件（不上传）</h2><p>项目根目录下新建.gitignore文件，填入需要忽略的文件，如：</p>
<blockquote>
<p>node_moudules</p>
</blockquote>
<h2 id="README-md中添加图片"><a href="#README-md中添加图片" class="headerlink" title="README.md中添加图片"></a>README.md中添加图片</h2><p>可直接使用相对地址，如在项目主目录下新建img文件夹，放入图片test.jpg，使用方式;<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">![一些说明](test.jpg)</div></pre></td></tr></table></figure></p>
]]></content>
      
        <categories>
            
            <category> Tec </category>
            
            <category> Git </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Github </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[前端事件机制]]></title>
      <url>/2017/09/20/front-end/basic/cssAndHtml/htmlEvent/</url>
      <content type="html"><![CDATA[<p>前端事件机制一个总结<br><a id="more"></a></p>
<h2 id="HTML-DOM事件"><a href="#HTML-DOM事件" class="headerlink" title="HTML DOM事件"></a>HTML DOM事件</h2><p><a href="http://www.runoob.com/jsref/dom-obj-event.html" target="_blank" rel="external">HTML DOM 事件</a><br>oncontextmenu 事件，右键点击</p>
<h2 id="JS相关方法"><a href="#JS相关方法" class="headerlink" title="JS相关方法"></a>JS相关方法</h2><ol>
<li>阻止事件冒泡<br>e.stopPropagation</li>
</ol>
<h2 id="Q-amp-A"><a href="#Q-amp-A" class="headerlink" title="Q&amp;A"></a>Q&amp;A</h2><ol>
<li>浏览器事件实冒泡还是下发如何判断、如何设置?</li>
</ol>
]]></content>
      
        <categories>
            
            <category> Front-end </category>
            
            <category> Basic </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Front-end </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[使用vscode插件ftp-sync实现代码同步到虚拟机]]></title>
      <url>/2017/09/18/Tec/tools/vscode/sftpSync/</url>
      <content type="html"><![CDATA[<p> <img src="https://camo.githubusercontent.com/068aa97ac2f6532050786b5f459e674210c170a2/687474703a2f2f692e696d6775722e636f6d2f573968347077572e676966" alt="步骤图示"><br><a id="more"></a><br>参考网页：</p>
<ol>
<li><a href="http://blog.csdn.net/dotuian/article/details/51119650" target="_blank" rel="external">在vs code中使用ftp-sync插件实现客户端与服务器端代码的同步</a></li>
<li><a href="https://github.com/lukasz-wronski/vscode-ftp-sync" target="_blank" rel="external">插件github地址</a>,本文动图来自于此<br>步骤如下：</li>
<li>在vscode搜索并安装此插件<blockquote>
<p>若安装不在插件商店的插件, 则可以放置到用户目录下的 .vscode/extensions 文件夹中。然后重启 VS Code 即可生效</p>
</blockquote>
</li>
<li><p>F1 或ctrl+shift+p,输入：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">&gt;Ftp-sync init</div></pre></td></tr></table></figure>
</li>
<li><p>配置文件信息并保存<br>注: 云端的文件夹如果显示不存在的话可能是权限不够，将文件夹权限直接改为7777<br>实例如下：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div></pre></td><td class="code"><pre><div class="line">  &#123;</div><div class="line">    &quot;remotePath&quot;: &quot;/var/www/html/frontend&quot;,</div><div class="line">    &quot;host&quot;: &quot;10.206.136.12&quot;,</div><div class="line">    &quot;username&quot;: &quot;root&quot;,</div><div class="line">    &quot;password&quot;: &quot;root&quot;,</div><div class="line">    &quot;port&quot;: 22,</div><div class="line">    &quot;secure&quot;: false,</div><div class="line">    &quot;protocol&quot;: &quot;sftp&quot;,</div><div class="line">    &quot;uploadOnSave&quot;: false,</div><div class="line">    &quot;passive&quot;: false,</div><div class="line">    &quot;debug&quot;: false,</div><div class="line">    &quot;privateKeyPath&quot;: null,</div><div class="line">    &quot;passphrase&quot;: null,</div><div class="line">    &quot;ignore&quot;: [</div><div class="line">        &quot;\\.vscode&quot;,</div><div class="line">        &quot;\\.git&quot;,</div><div class="line">        &quot;\\.DS_Store&quot;,</div><div class="line">        &quot;node_modules\/\\.cache&quot;</div><div class="line">    ],</div><div class="line">    &quot;generatedFiles&quot;: &#123;</div><div class="line">        &quot;uploadOnSave&quot;: false,</div><div class="line">        &quot;extensionsToInclude&quot;: [],</div><div class="line">        &quot;path&quot;: &quot;&quot;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
</li>
<li><p>使用命令进行同步吧</p>
</li>
</ol>
<h1 id="错误解决"><a href="#错误解决" class="headerlink" title="错误解决"></a>错误解决</h1><p>若ssh连接失败:  Error: Unable to start subsystem: sftp<br>解决方案：</p>
<blockquote>
<p>In order to use sftp and scp you have to insert the following line in the configuration file /etc/ssh/sshd_config(RedHat Linux).<br>Subsystem   sftp   /usr/libexec/openssh/sftp-server<br>After this modification you must restart sshd. So you could use sftp and scp only to connect to hosts where sshd is running.<br>具体解决步骤<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">vi /etc/ssh/sshd_config</div><div class="line">插入或解除注释下面一句话</div><div class="line"># Subsystem   sftp   /usr/libexec/openssh/sftp-server</div><div class="line">保存并重启ssh服务</div><div class="line">/etc/init.d/sshd restart</div></pre></td></tr></table></figure></p>
</blockquote>
<h1 id="附录-命令集合"><a href="#附录-命令集合" class="headerlink" title="附录. 命令集合"></a>附录. 命令集合</h1>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">&gt;Ftp-sync: init</div><div class="line">&gt;Ftp-sync: Local to Remote</div><div class="line">&gt;Ftp-sync: Remote to Local</div><div class="line">&gt;....</div></pre></td></tr></table></figure>
<p>虚拟机:<br>package的dev字段:<br>   “dev”: “HOST=0.0.0.0 HTTPS=true roadhog server”,<br>日常显示:<br> cd /var/www/html/frontend<br> npm run dev</p>
]]></content>
      
        <categories>
            
            <category> Tool </category>
            
            <category> Tools </category>
            
            <category> Vscode </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[单向数据绑定和双向数据绑定]]></title>
      <url>/2017/09/17/front-end/advance/dataFlow/</url>
      <content type="html"><![CDATA[<p>详解单向数据流和双向数据流的区别与各自特点<br><a id="more"></a><br>非UI控件只有单向，不存在双向。</p>
<h2 id="Links"><a href="#Links" class="headerlink" title="Links"></a>Links</h2><p><a href="https://www.zhihu.com/question/49964363" target="_blank" rel="external">知乎——单向数据绑定和双向数据绑定的优缺点，适合什么场景？</a></p>
<h2 id="单向数据绑定"><a href="#单向数据绑定" class="headerlink" title="单向数据绑定"></a>单向数据绑定</h2><p>model到View<br>导致数据流也是单向的<br>单向 + inline event(组件钩子函数)实现数据的修改</p>
<h3 id="单向数据流"><a href="#单向数据流" class="headerlink" title="单向数据流"></a>单向数据流</h3><h3 id="优点"><a href="#优点" class="headerlink" title="优点"></a>优点</h3><p>便于实施统一状态管理(flux、redux)<br>便于维护</p>
<h3 id="缺点"><a href="#缺点" class="headerlink" title="缺点"></a>缺点</h3><p>代码量大，组件通信麻烦些</p>
<h2 id="双向数据绑定"><a href="#双向数据绑定" class="headerlink" title="双向数据绑定"></a>双向数据绑定</h2><p>model和view双向绑定<br>将数据变更的操作隐藏在了框架内部，调用者不会直接感知</p>
<h3 id="优点-1"><a href="#优点-1" class="headerlink" title="优点"></a>优点</h3><p>编写简单</p>
<h3 id="缺点-1"><a href="#缺点-1" class="headerlink" title="缺点"></a>缺点</h3><p>复杂，出错不好追溯</p>
]]></content>
      
        
        <tags>
            
            <tag> Front-end </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[antd Form自定义表单设计]]></title>
      <url>/2017/09/17/front-end/React/Practice/ReactComponnetDivision/</url>
      <content type="html"><![CDATA[<p><a href="https://ant.design/components/form/#components-form-demo-customized-form-controls" target="_blank" rel="external">Antd-自定义表单控件</a><br><a id="more"></a></p>
<h1 id="实现步骤"><a href="#实现步骤" class="headerlink" title="实现步骤"></a>实现步骤</h1><ol>
<li>子组件的值在componnetWillReceiveProps中set</li>
<li>子组件内控件绑定onChange方法，方法内触发triggerChange事件，通过props.onChange({值})回传value值<h2 id="示例源码-子组件value为object"><a href="#示例源码-子组件value为object" class="headerlink" title="示例源码: 子组件value为object"></a>示例源码: 子组件value为object</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> React <span class="keyword">from</span> <span class="string">'react'</span></div><div class="line"><span class="keyword">import</span> PropTypes <span class="keyword">from</span> <span class="string">'prop-types'</span></div><div class="line"><span class="keyword">import</span> &#123; DatePicker, Select, Checkbox &#125; <span class="keyword">from</span> <span class="string">'antd'</span></div><div class="line"><span class="keyword">import</span> moment <span class="keyword">from</span> <span class="string">'moment'</span></div><div class="line"><span class="comment">// import &#123; getInitialTimeRange &#125; from '../../../../utils/index'</span></div><div class="line"><span class="keyword">const</span> RangePicker = DatePicker.RangePicker</div><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">DateSelect</span> <span class="keyword">extends</span> <span class="title">React</span>.<span class="title">Component</span> </span>&#123;</div><div class="line">  <span class="keyword">constructor</span> (props) &#123;</div><div class="line">    <span class="keyword">super</span>(props)</div><div class="line">    <span class="keyword">const</span> value = props.value || &#123;&#125;</div><div class="line">    <span class="keyword">this</span>.state = &#123;</div><div class="line">      dateType: value.dateType || <span class="string">'day'</span>,</div><div class="line">      dateRange: value.dateRange || [moment(), moment()],</div><div class="line">      onlyWork: value.onlyWork || <span class="literal">false</span>,</div><div class="line">    &#125;</div><div class="line">  &#125;</div><div class="line">  componentWillReceiveProps (nextProps) &#123;</div><div class="line">    <span class="comment">// Should be a controlled component.</span></div><div class="line">    <span class="keyword">if</span> (<span class="string">'value'</span> <span class="keyword">in</span> nextProps) &#123;</div><div class="line">      <span class="keyword">const</span> value = nextProps.value</div><div class="line">      <span class="keyword">this</span>.setState(value)</div><div class="line">    &#125;</div><div class="line">  &#125;</div><div class="line">  onCheckChange = <span class="function">(<span class="params">e</span>) =&gt;</span> &#123;</div><div class="line">    <span class="keyword">const</span> onlyWork = e.target.checked</div><div class="line">    <span class="keyword">if</span> (!(<span class="string">'value'</span> <span class="keyword">in</span> <span class="keyword">this</span>.props)) &#123;</div><div class="line">      <span class="keyword">this</span>.setState(&#123; onlyWork &#125;)</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">this</span>.triggerChange(&#123; onlyWork &#125;)</div><div class="line">  &#125;</div><div class="line">  onPickerChange = <span class="function">(<span class="params">dateRange</span>) =&gt;</span> &#123;</div><div class="line">    <span class="keyword">if</span> (!(<span class="string">'value'</span> <span class="keyword">in</span> <span class="keyword">this</span>.props)) &#123;</div><div class="line">      <span class="keyword">this</span>.setState(&#123; dateRange &#125;)</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">this</span>.triggerChange(&#123; dateRange &#125;)</div><div class="line">  &#125;</div><div class="line">  onSelectChange = <span class="function">(<span class="params">dateType</span>) =&gt;</span> &#123;</div><div class="line">    <span class="keyword">if</span> (!(<span class="string">'value'</span> <span class="keyword">in</span> <span class="keyword">this</span>.props)) &#123;</div><div class="line">      <span class="keyword">this</span>.setState(&#123; dateType &#125;)</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">this</span>.triggerChange(&#123; dateType &#125;)</div><div class="line">  &#125;</div><div class="line">  triggerChange = <span class="function">(<span class="params">changedValue</span>) =&gt;</span> &#123;</div><div class="line">    <span class="comment">// Should provide an event to pass value to Form.</span></div><div class="line">    <span class="keyword">const</span> onChange = <span class="keyword">this</span>.props.onChange</div><div class="line">    <span class="keyword">if</span> (onChange) &#123;</div><div class="line">      onChange(<span class="built_in">Object</span>.assign(&#123;&#125;, <span class="keyword">this</span>.state, changedValue))</div><div class="line">    &#125;</div><div class="line">  &#125;</div><div class="line">  render () &#123;</div><div class="line">    <span class="keyword">const</span> &#123; dateType, dateRange, onlyWork &#125; = <span class="keyword">this</span>.state</div><div class="line">    <span class="keyword">return</span> (</div><div class="line">      &lt;div&gt;</div><div class="line">        &lt;Select</div><div class="line">          onSelect=&#123;<span class="keyword">this</span>.onSelectChange&#125;</div><div class="line">          value=&#123;dateType&#125;</div><div class="line">          style=&#123;&#123; <span class="attr">width</span>: <span class="string">'100px'</span> &#125;&#125;</div><div class="line">        &gt;</div><div class="line">          &lt;Select.Option value=<span class="string">"week"</span>&gt;周&lt;<span class="regexp">/Select.Option&gt;</span></div><div class="line"><span class="regexp">          &lt;Select.Option value="month"&gt;月&lt;/</span>Select.Option&gt;</div><div class="line">          &lt;Select.Option value=<span class="string">"day"</span>&gt;日&lt;<span class="regexp">/Select.Option&gt;</span></div><div class="line"><span class="regexp">          &lt;Select.Option value="customize"&gt;自定义&lt;/</span>Select.Option&gt;</div><div class="line">        &lt;<span class="regexp">/Select&gt;</span></div><div class="line"><span class="regexp">        &lt;RangePicker format</span></div><div class="line"><span class="regexp">          value=&#123;dateRange&#125;</span></div><div class="line"><span class="regexp">          onChange=&#123;this.onPickerChange&#125;</span></div><div class="line"><span class="regexp">          format="YYYY-MM-DD"</span></div><div class="line"><span class="regexp">          allowClear=&#123;false&#125;</span></div><div class="line"><span class="regexp">          style=&#123;&#123; marginLeft: '10px' &#125;&#125;</span></div><div class="line"><span class="regexp">        /</span>&gt;</div><div class="line">        &lt;Checkbox checked=&#123;onlyWork&#125; style=&#123;&#123; <span class="attr">marginLeft</span>: <span class="string">'10px'</span> &#125;&#125; onChange=&#123;<span class="keyword">this</span>.onCheckChange&#125; disabled=&#123;dateType === <span class="string">'day'</span>&#125;&gt;只选工作日&lt;<span class="regexp">/Checkbox&gt;</span></div><div class="line"><span class="regexp">      &lt;/</span>div&gt;</div><div class="line">    )</div><div class="line">  &#125;</div><div class="line">&#125;</div><div class="line">DateSelect.propTypes = &#123;</div><div class="line">  onChange: PropTypes.func,</div><div class="line">  value: PropTypes.object,</div><div class="line">&#125;</div><div class="line"><span class="keyword">export</span> <span class="keyword">default</span> DateSelect</div></pre></td></tr></table></figure>
</li>
</ol>
<h2 id="示例源码-子组件value为一个单一的值"><a href="#示例源码-子组件value为一个单一的值" class="headerlink" title="示例源码: 子组件value为一个单一的值"></a>示例源码: 子组件value为一个单一的值</h2><p>适用于自定义表单只有一个值但需要有和其它组件联动<br>这时要注意收到的props格式为{ value: ‘一个值’}<br>triggerChange时只需要提交value的值，如 onChange(‘改变的值’)<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> React <span class="keyword">from</span> <span class="string">'react'</span></div><div class="line"><span class="keyword">import</span> &#123; Select, Button, Icon &#125; <span class="keyword">from</span> <span class="string">'antd'</span></div><div class="line"><span class="keyword">import</span> PropTypes <span class="keyword">from</span> <span class="string">'prop-types'</span></div><div class="line"><span class="keyword">const</span> Option = Select.Option</div><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">TimeServer</span> <span class="keyword">extends</span> <span class="title">React</span>.<span class="title">Component</span> </span>&#123;</div><div class="line">  <span class="keyword">constructor</span> (props) &#123;</div><div class="line">    <span class="keyword">super</span>(props)</div><div class="line">    <span class="keyword">this</span>.state = &#123;</div><div class="line">      value: <span class="string">''</span>,</div><div class="line">    &#125;</div><div class="line">  &#125;</div><div class="line">  componentWillReceiveProps (nextProps) &#123;</div><div class="line">    <span class="keyword">if</span> (<span class="string">'value'</span> <span class="keyword">in</span> nextProps) &#123;</div><div class="line">      <span class="keyword">const</span> value = nextProps.value</div><div class="line">      <span class="built_in">console</span>.log(value)</div><div class="line">      <span class="keyword">this</span>.setState(&#123; value &#125;)</div><div class="line">    &#125;</div><div class="line">  &#125;</div><div class="line">  onSelectChange = <span class="function">(<span class="params">value</span>) =&gt;</span> &#123;</div><div class="line">    <span class="keyword">if</span> (!(<span class="string">'value'</span> <span class="keyword">in</span> <span class="keyword">this</span>.props)) &#123;</div><div class="line">      <span class="keyword">this</span>.setState(&#123; value &#125;)</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">this</span>.triggerChange(value)</div><div class="line">  &#125;</div><div class="line">  triggerChange = <span class="function">(<span class="params">changedValue</span>) =&gt;</span> &#123;</div><div class="line">    <span class="comment">// Should provide an event to pass value to Form.</span></div><div class="line">    <span class="keyword">const</span> onChange = <span class="keyword">this</span>.props.onChange</div><div class="line">    <span class="keyword">if</span> (onChange) &#123;</div><div class="line">      onChange(changedValue)</div><div class="line">    &#125;</div><div class="line">  &#125;</div><div class="line">  handleSyncTime = <span class="function"><span class="params">()</span> =&gt;</span> &#123;</div><div class="line">    <span class="built_in">console</span>.log(<span class="string">`sync<span class="subst">$&#123;<span class="keyword">this</span>.state.value&#125;</span>`</span>)</div><div class="line">  &#125;</div><div class="line">  render = <span class="function"><span class="params">()</span> =&gt;</span> &#123;</div><div class="line">    <span class="keyword">const</span> &#123; value &#125; = <span class="keyword">this</span>.state</div><div class="line">    <span class="keyword">const</span> options = [</div><div class="line">      &#123;</div><div class="line">        optValue: <span class="string">'1'</span>,</div><div class="line">        name: <span class="string">'123.com'</span>,</div><div class="line">      &#125;,</div><div class="line">      &#123;</div><div class="line">        optValue: <span class="string">'2'</span>,</div><div class="line">        name: <span class="string">'234.com'</span>,</div><div class="line">      &#125;,</div><div class="line">      &#123;</div><div class="line">        optValue: <span class="string">'3'</span>,</div><div class="line">        name: <span class="string">'456.com'</span>,</div><div class="line">      &#125;,</div><div class="line">    ]</div><div class="line">    <span class="built_in">console</span>.log(<span class="string">'tis:'</span>, value)</div><div class="line">    <span class="keyword">return</span> (</div><div class="line">      &lt;div&gt;</div><div class="line">        &lt;div&gt;</div><div class="line">          &lt;Select style=&#123;&#123; <span class="attr">width</span>: <span class="string">'100px'</span>, <span class="attr">float</span>: <span class="string">'left'</span> &#125;&#125; value=&#123;value&#125; onChange=&#123;<span class="keyword">this</span>.onSelectChange&#125;&gt;</div><div class="line">            &#123;options.map(<span class="function">(<span class="params">&#123; optValue, name &#125;</span>) =&gt;</span> &lt;Option value=&#123;optValue&#125;&gt;&#123;name&#125;&lt;<span class="regexp">/Option&gt;)&#125;</span></div><div class="line"><span class="regexp">          &lt;/</span>Select&gt;</div><div class="line">          &lt;Button style=&#123;&#123; <span class="attr">marginLeft</span>: <span class="string">'10px'</span> &#125;&#125; onClick=&#123;<span class="keyword">this</span>.handleSyncTime&#125;&gt;<span class="xml"><span class="tag">&lt;<span class="name">Icon</span> <span class="attr">type</span>=<span class="string">"sync"</span> /&gt;</span>立即同步<span class="tag">&lt;/<span class="name">Button</span>&gt;</span></span></div><div class="line">        &lt;<span class="regexp">/div&gt;</span></div><div class="line"><span class="regexp">      &lt;/</span>div&gt;</div><div class="line">    )</div><div class="line">  &#125;</div><div class="line">&#125;</div><div class="line">TimeServer.propTypes = &#123;</div><div class="line">  onChange: PropTypes.func,</div><div class="line">&#125;</div><div class="line"><span class="keyword">export</span> <span class="keyword">default</span> TimeServer</div></pre></td></tr></table></figure></p>
<h1 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h1><p>看api看仔细些，能省很多时间</p>
<h1 id="弯路"><a href="#弯路" class="headerlink" title="弯路"></a>弯路</h1><p>今天本打算做React的总结的(总结说起来容易，做起来真的是千头万绪理不清…)，看着有时间做了会Form表单，没想到一做就半天，效果如下图，做起来也遇到些问题，记录以下吧，今天的总结看来会是得泡汤了…<br><img src="https://github.com/vonxq/vonxq.github.io/blob/master/img/form.png?raw=true" alt=""><br>Form表单是直接用的Antd插件，</p>
<h2 id="整体布局"><a href="#整体布局" class="headerlink" title="整体布局"></a>整体布局</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="comment">//分割线</span></div><div class="line">  &lt;hr style=&#123;&#123; <span class="attr">border</span>: <span class="string">'0.5px dotted #cccccc'</span> &#125;&#125; /&gt;</div><div class="line"><span class="comment">// 段标题</span></div><div class="line">  &lt;span className=&#123;styles[<span class="string">'type-intro'</span>]&#125;&gt;过滤条件&lt;<span class="regexp">/span&gt;</span></div><div class="line"><span class="regexp">.type-intro&#123;</span></div><div class="line"><span class="regexp">  position: relative;</span></div><div class="line"><span class="regexp">  bottom: -25px;</span></div><div class="line"><span class="regexp">  font-weight: bold;</span></div><div class="line"><span class="regexp">&#125;</span></div></pre></td></tr></table></figure>
<h2 id="Form表单排列"><a href="#Form表单排列" class="headerlink" title="Form表单排列"></a>Form表单排列</h2><p>图中的表单较为复杂</p>
<ol>
<li>时间范围：有三个子表项</li>
<li>指定时段：只有在选择指定时段选项时才会出现时间段1和时间段2的具体设置，否则只显示选择框</li>
</ol>
<p>实现:</p>
<h3 id="时间范围"><a href="#时间范围" class="headerlink" title="时间范围"></a>时间范围</h3><p>FormItem中嵌套一个组件(不能是纯函数组件)，当时间范围中任何一个表项发生变化时，直接通过setFieldsValue改变Form值</p>
<p>组件内表项的值从props中获取，Form组件中在state中存储对应值</p>
<h3 id="指定时段"><a href="#指定时段" class="headerlink" title="指定时段"></a>指定时段</h3><p>原理同上，分三层 Form——》指定时段——》时间段（1,2）</p>
<p>存在的问题:</p>
<ol>
<li>每次改变都需set然后下发，性能不好</li>
<li>form表单内容的组织该以怎样的形式？本文的设计方法会使表单内容有很多嵌套的object</li>
<li>子组件中的每一个小组件的变化都需要写onChange方法（每种组件的onChange的参数不同），有没有简便的做法？？？</li>
</ol>
]]></content>
      
        <categories>
            
            <category> Front-end </category>
            
            <category> React </category>
            
            <category> Practice </category>
            
        </categories>
        
        
        <tags>
            
            <tag> React </tag>
            
            <tag> Antd </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[babel使用小结]]></title>
      <url>/2017/09/17/front-end/React/TechStack/babel/</url>
      <content type="html"><![CDATA[<p>babel使用小结<br><a id="more"></a></p>
<h1 id="babel"><a href="#babel" class="headerlink" title="babel"></a>babel</h1><blockquote>
<p>Babel 把用最新标准编写的 JavaScript 代码向下编译成可以在今天随处可用的版本。 这一过程叫做“源码到源码”编译， 也被称为转换编译。<br>通俗的说，就是我们可以用ES6, ES7等来编写代码，Babel会把他们统统转为ES5。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">npm install --save-dev babel-core babel-loader babel-preset-es2015 babel-preset-react babel-preset-stage-0</div></pre></td></tr></table></figure></p>
</blockquote>
<h2 id="配置文件"><a href="#配置文件" class="headerlink" title="配置文件"></a>配置文件</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">&#123;</div><div class="line">  &quot;presets&quot;: [</div><div class="line">    &quot;es2015&quot;,</div><div class="line">    &quot;react&quot;,</div><div class="line">    &quot;stage-0&quot;</div><div class="line">  ],</div><div class="line">  &quot;plugins&quot;: []</div><div class="line">&#125;</div></pre></td></tr></table></figure>]]></content>
      
        
    </entry>
    
    <entry>
      <title><![CDATA[immutableJS笔记整理]]></title>
      <url>/2017/09/17/front-end/React/TechStack/immutableJS/</url>
      <content type="html"><![CDATA[<p>数据不可变会避免很多对象引用的错误。<br><a id="more"></a><br>ImmutableJS 提供了 7 种不可修改的数据类型：List、Map、Stack、OrderedMap、Set、OrderedSet、Record。若是对 Immutable 对象操作都会回传一个新值。其中比较常用的有 List、Map 和 Set：</p>
<ol>
<li>map:键值对对象，可增删更新….与ES6的map对应</li>
<li>List：有序且可以重复值，对应于一般的 Array</li>
<li>Set：没有顺序且不能重复的列表<br>特性</li>
<li>数据一旦被创建就不能被修改，$以示区别</li>
<li>Structural sharing</li>
<li>Support Lazy Operation</li>
<li>fromJS()、toJS()转换，会消耗大量资源</li>
<li>支持函数式编程</li>
<li>容易实现Redo/Undo历史回顾</li>
</ol>
]]></content>
      
        
    </entry>
    
    <entry>
      <title><![CDATA[前端相关术语记录]]></title>
      <url>/2017/09/17/front-end/basic/Terminology/</url>
      <content type="html"><![CDATA[<p>一些碰到的术语整理。<br><a id="more"></a></p>
<h2 id="前端基础"><a href="#前端基础" class="headerlink" title="前端基础"></a>前端基础</h2><p>BEM规则:<br>  css命名规则，格式如下:<br>  模块（Block）-节点名(Element)-节点状态(Modifier)<br>MVVM:<br>   Modal-View-ViewModal(Modal Of View) <a href="https://github.com/livoras/blog/issues/11" target="_blank" rel="external">参考</a><br>polyfill垫片库:<br>  解决兼容性问题<br>Repl:<br>   “读取-求值-输出”循环(Read-Eval-Print Loop）是一个简单的，交互式的编程环境。这也被称做交互式顶层构件（interactive toplevel）。REPL使得探索性的编程和调试更加便捷，因为“读取-求值-输出”循环通常会比经典的“编辑-编译-运行-调试”模式要更快。<br>Hook：<br>  钩子，在已经可以正常运作的程序中额外添加流程控制。可以实现但不限于获取所hook流程中特定时刻的各种数据，修改数据，修改程序流程</p>
<h2 id="React相关"><a href="#React相关" class="headerlink" title="React相关"></a>React相关</h2><p>虚拟DOM: 虚拟DOM使用diff算法做到最小更新，优化性能简化了页面更新维护操作。MVVM视图和状态绑定，双向绑定引擎根据状态自动更新视图。<br><!-- ES: 事件溯源，事件改变状态 --></p>
<h2 id="项目相关"><a href="#项目相关" class="headerlink" title="项目相关"></a>项目相关</h2>]]></content>
      
        <categories>
            
            <category> Front-end </category>
            
            <category> Basic </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[shells]]></title>
      <url>/2017/09/17/Tec/shell/shells/</url>
      <content type="html"><![CDATA[<p>linux shell、bash、windows cmd区别与联系<br>都是命令行解释器,都是一个用户与操作系统的交互接口。<br><a id="more"></a></p>
<h1 id="综述"><a href="#综述" class="headerlink" title="综述"></a>综述</h1><h1 id="shell"><a href="#shell" class="headerlink" title="shell"></a>shell</h1><p>shell是一个命令解释器，处于内核和用户之间，负责把用户的指令传递给内核并且把执行结果回显给用户，同时，shell也可以作为一门强大的编程语言。</p>
<p>shell种类：</p>
<ol>
<li>Bourne Shell（/usr/bin/sh或/bin/sh）</li>
<li>Bourne Again Shell（/bin/bash）</li>
<li>C Shell（/usr/bin/csh）</li>
<li>K Shell（/usr/bin/ksh）</li>
<li>Shell for Root（/sbin/sh）<h2 id="shell脚本-shell-script"><a href="#shell脚本-shell-script" class="headerlink" title="shell脚本(shell script)"></a>shell脚本(shell script)</h2><a href="http://www.runoob.com/linux/linux-shell.html" target="_blank" rel="external">shell教程</a><blockquote>
<p>其中有很多条命令,让Shell一次把这些命令执行完,而不必一条一条地敲 命令。Shell脚本和编程语言很相似,也有变量和流程控制语句,包括循环和分支。但Shell脚本是解释执行的,不需 要编译,Shell程序从脚本中一行一行读取并执行这些命令,相当于一个用户把脚本中的命令一行一 行敲到Shell提示符下执行。作为程序设计语言，它虽然不是 Linux系统内核的一部分，但它调用了系统内核的大部分功能来执行程序、创建文档并以并行的方式协调各个程序的运行。</p>
<h1 id="bash"><a href="#bash" class="headerlink" title="bash"></a>bash</h1><p>Bourne Again Shell<br>是shell的一种，最常用的shell之一。</p>
<h1 id="git-bash"><a href="#git-bash" class="headerlink" title="git bash"></a>git bash</h1><p>git bash是Windows下的命令行工具。<br>方便你在windows下使用git命令的模拟终端（windows自带的cmd功能太弱）linux、unix可以直接使用git。<br>基于msys GNU环境，有git分布式版本控制工具，也主要用于git。<br>GNU环境，就是说如果你喜欢linux/unix的环境，就可以选择使用git bash。<br>里面有你熟悉的linux工具，tar，grep，awk等，且可以安装编译环境gcc，make等。</p>
</blockquote>
</li>
</ol>
]]></content>
      
        <categories>
            
            <category> Tec </category>
            
            <category> Shell </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[svn使用小结]]></title>
      <url>/2017/09/16/Tec/svn/svn/</url>
      <content type="html"><![CDATA[<a id="more"></a>
<p>从svn删除文件</p>
]]></content>
      
        <categories>
            
            <category> Tec </category>
            
            <category> Svn </category>
            
        </categories>
        
        
        <tags>
            
            <tag> svn </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Javascript模块化(todo)]]></title>
      <url>/2017/09/16/front-end/advance/JsModular/</url>
      <content type="html"><![CDATA[<p>前端项目开发的过程中，为了提高效率肯定会涉及到JS模块化，按需加载资源。<br><a id="more"></a><br>本文参考：</p>
<ol>
<li><a href="http://www.cnblogs.com/chenguangliang/p/5856701.html" target="_blank" rel="external">js模块化编程之彻底弄懂CommonJS和AMD/CMD</a></li>
</ol>
<h1 id="JS模块规范"><a href="#JS模块规范" class="headerlink" title="JS模块规范"></a>JS模块规范</h1><h2 id="CommonJS"><a href="#CommonJS" class="headerlink" title="CommonJS"></a>CommonJS</h2><h2 id="AMD"><a href="#AMD" class="headerlink" title="AMD"></a>AMD</h2><h2 id="CMD"><a href="#CMD" class="headerlink" title="CMD"></a>CMD</h2>]]></content>
      
        <categories>
            
            <category> Front-end </category>
            
            <category> Engineering </category>
            
        </categories>
        
        
        <tags>
            
            <tag> JAVASCRIPT </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[React开发流程梳理]]></title>
      <url>/2017/09/16/front-end/React/Practice/ReactDemoRecord/</url>
      <content type="html"><![CDATA[<p>React学习整整两个月了，从看基础文档到理解分析项目源码，然后自己慢慢依葫芦画瓢，到现在能初步地掌握一些基础知识，我学得确实很慢。不总结一番老觉得自己像是只学了Antd，今天周六，抽一天时间把React整个开发流程过一下吧。<br><a id="more"></a><br>参考材料：</p>
<ol>
<li><a href="https://facebook.github.io/react/docs/installation.html#creating-a-new-application" target="_blank" rel="external">Facebook-react</a></li>
<li><a href="http://www.runoob.com/react/react-tutorial.html" target="_blank" rel="external">菜鸟教程-react</a><h1 id="React程序的运行"><a href="#React程序的运行" class="headerlink" title="React程序的运行"></a>React程序的运行</h1>不得不说一开始就懵了，写程序的时候都是使用的DVA脚手架，但React绝不局限于Dva啊<br>刚看见一篇文章分享也写得不错，比我全:<a href="http://www.w3cplus.com/react/taming-react-setup.html" target="_blank" rel="external">React几种基本配置方案</a><h2 id="不使用脚手架"><a href="#不使用脚手架" class="headerlink" title="不使用脚手架"></a>不使用脚手架</h2>先来看看抛弃脚手架之后React如何运行吧<h3 id="在线加载依赖"><a href="#在线加载依赖" class="headerlink" title="在线加载依赖"></a>在线加载依赖</h3><blockquote>
<p>react.min.js - React 的核心库<br>react-dom.min.js - 提供与 DOM 相关的功能<br>babel.min.js-Babel可以将ES6代码转为ES5代码，这样我们就能在目前不支持ES6浏览器上执行React代码。Babel内嵌了对JSX的支持。通过将Babel和babel-sublime包(package)一同使用可以让源码的语法渲染上升到一个全新的水平。</p>
</blockquote>
</li>
</ol>
<p>下面文件加载了react、ract-dom、babel等库，实现了hello world<br><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">head</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span> /&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Hello React!<span class="tag">&lt;/<span class="name">title</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"https://cdn.bootcss.com/react/15.4.2/react.min.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"https://cdn.bootcss.com/react/15.4.2/react-dom.min.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"https://cdn.bootcss.com/babel-standalone/6.22.1/babel.min.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div><div class="line">  <span class="tag">&lt;/<span class="name">head</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">body</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"example"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/babel"</span>&gt;</span><span class="undefined"></span></div><div class="line"><span class="undefined">      ReactDOM.render(</span></div><div class="line"><span class="javascript">        &lt;h1&gt;Hello, world!<span class="xml"><span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span>,</span></div><div class="line"><span class="javascript">        <span class="built_in">document</span>.getElementById(<span class="string">'example'</span>)</span></div><div class="line"><span class="undefined">      );</span></div><div class="line"><span class="undefined">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div><div class="line">  <span class="tag">&lt;/<span class="name">body</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></div></pre></td></tr></table></figure></p>
<h3 id="本地npm包运行"><a href="#本地npm包运行" class="headerlink" title="本地npm包运行"></a>本地npm包运行</h3><p><a href=""></a><br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"></div><div class="line"></div></pre></td></tr></table></figure></p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"></div><div class="line"></div></pre></td></tr></table></figure>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"></div><div class="line"></div></pre></td></tr></table></figure>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"></div><div class="line"></div></pre></td></tr></table></figure>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"></div><div class="line"></div></pre></td></tr></table></figure>
<h2 id="create-react-app脚手架"><a href="#create-react-app脚手架" class="headerlink" title="create-react-app脚手架"></a>create-react-app脚手架</h2><p><a href="https://github.com/facebookincubator/create-react-app" target="_blank" rel="external">create-react-app官方文档(github)</a><br>create-react-app来自于Facebook，通过该命令我们无需配置就能快速构建React开发环境。<br>create-react-app自动创建的项目是基于Webpack + ES6 。<br>create-react-app通过react-scripts这个npm module调用webpack及webpack-dev-server,PORT不可定制</p>
<h3 id="特性："><a href="#特性：" class="headerlink" title="特性："></a>特性：</h3><blockquote>
<p>If you’re getting started with React, use create-react-app to automate the build of your app. There is no configuration file, and react-scripts is the only extra build dependency in your package.json. Your environment will have everything you need to build a modern React app:</p>
<ol>
<li>React, JSX, ES6, and Flow syntax support.</li>
<li>Language extras beyond ES6 like the object spread operator.</li>
<li>A dev server that lints for common errors.</li>
<li>Import CSS and image files directly from JavaScript.</li>
<li>Autoprefixed CSS, so you don’t need -webkit or other prefixes.</li>
<li>A build script to bundle JS, CSS, and images for production, with sourcemaps.</li>
<li>An offline-first service worker and a web app manifest, meeting all the Progressive Web App criteria.</li>
</ol>
</blockquote>
<p>The feature set is intentionally limited. It doesn’t support advanced features such as server rendering or CSS modules. The tool is also non-configurable because it is hard to provide a cohesive experience and easy updates across a set of tools when the user can tweak anything.<br>You don’t have to use this. Historically it has been easy to gradually adopt React. However many people create new single-page React apps from scratch every day. We’ve heard loud and clear that this process can be error-prone and tedious, especially if this is your first JavaScript build stack. This project is an attempt to figure out a good way to start developing React apps.</p>
<h3 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">npm install -g create-react-app</div><div class="line">create-react-app my-app</div><div class="line"></div><div class="line">cd my-app</div><div class="line">npm start</div></pre></td></tr></table></figure>
<h2 id="使用dva脚手架"><a href="#使用dva脚手架" class="headerlink" title="使用dva脚手架"></a>使用dva脚手架</h2><h3 id="dva-cli介绍"><a href="#dva-cli介绍" class="headerlink" title="dva-cli介绍"></a>dva-cli介绍</h3><p>脚手架，命令行工具，可以新建并初始化一个dva项目，为dva安装相关依赖<br>dva项目的运行依赖roadhog，roadhog的介绍可参考<a href="https://github.com/sorrycc/blog/issues/15" target="_blank" rel="external">介绍 roadhog —— 让 create-react-app 可配的命令行工具 #15</a>.<br>roadhog依赖webpack</p>
<h3 id="dva介绍"><a href="#dva介绍" class="headerlink" title="dva介绍"></a>dva介绍</h3><p><a href="https://github.com/dvajs/dva/issues/1" target="_blank" rel="external">dva简介</a></p>
<blockquote>
<p>dva 是基于现有应用架构 (redux + react-router + redux-saga 等)的一层轻量封装，没有引入任何新概念，全部代码不到 100 行。( Inspired by elm and choo. )<br>dva 是 framework，不是 library，类似 emberjs，会很明确地告诉你每个部件应该怎么写，这对于团队而言，会更可控。另外，除了 react 和 react-dom 是 peerDependencies 以外，dva 封装了所有其他依赖。<br>dva 实现上尽量不创建新语法，而是用依赖库本身的语法，比如 router 的定义还是用 react-router 的 JSX 语法的方式(dynamic config 是性能的考虑层面，之后会支持)。<br>最核心的是提供了 app.model 方法，用于把 reducer, initialState, action, saga 封装到一起</p>
<h4 id="特性"><a href="#特性" class="headerlink" title="特性"></a>特性</h4><ol>
<li>易学易用：仅有 6 个 api，对 redux 用户尤其友好</li>
<li>elm 概念：通过 reducers, effects 和 subscriptions 组织 model</li>
<li>支持 mobile 和 react-native：跨平台 (react-native 例子)</li>
<li>支持 HMR：目前基于 babel-plugin-dva-hmr 支持 components、routes 和 models 的 HMR<br>动态加载 Model 和路由：按需加载加快访问速度 (例子)</li>
<li>插件机制：比如 dva-loading 可以自动处理 loading 状态，不用一遍遍地写 showLoading 和 hideLoading</li>
<li>完善的语法分析库 dva-ast：dva-cli 基于此实现了智能创建 model, router 等</li>
<li>支持 TypeScript：通过 d.ts (例子)</li>
</ol>
</blockquote>
<h3 id="使用-1"><a href="#使用-1" class="headerlink" title="使用"></a>使用</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">npm install dva-cli -g</div><div class="line"># 版本要 &gt;= 0.8.1(170917最新版本为0.8.1)</div><div class="line">dva -v</div><div class="line"></div><div class="line">dva new dva-quickstart</div><div class="line">cd dva-quickstart</div><div class="line">npm start</div><div class="line"></div><div class="line">#  安装 antd 和 babel-plugin-import</div><div class="line"># babel-plugin-import 是用来按需加载 antd 的脚本和样式的</div><div class="line">npm install antd babel-plugin-import --save</div></pre></td></tr></table></figure>
<h2 id="tips"><a href="#tips" class="headerlink" title="tips"></a>tips</h2><h3 id="开发环境配置文档"><a href="#开发环境配置文档" class="headerlink" title="开发环境配置文档"></a>开发环境配置文档</h3><ol>
<li>Package.json<br>项目信息，依赖信息，通过—save-dev安装的插件信息在”devDependencies”项中</li>
<li>Webpack.config.js<br>项目打包入口，打包输出地址，loader(babel)，devSever开放（伺服资源文件，资源服务器,热替换，即时更新）<br>1) devSever<br><a href="http://www.jianshu.com/p/941bfaf13be1" target="_blank" rel="external">WEBPACK DEV SERVER</a><br>小型的node.js Express静态文件服务器,它使用webpack-dev-middleware中间件来为通过webpack打包生成的资源文件提供Web服务<br>2) 1<br>Webpack</li>
<li>.babelrc<br>[在node中使用babel6的一些简单分享]<br>(<a href="https://cnodejs.org/topic/56460e0d89b4b49902e7fbd3" target="_blank" rel="external">https://cnodejs.org/topic/56460e0d89b4b49902e7fbd3</a>)<br>rc结尾的文件通常代表运行时自动加载的文件，配置等。<br>A.    “presets”<br>要启动什么样的预设转码<br>对.babelrc的设置，可以直接存放在package.json中，“babel”字段    <h1 id="使用dva开发自己的程序"><a href="#使用dva开发自己的程序" class="headerlink" title="使用dva开发自己的程序"></a>使用dva开发自己的程序</h1><h2 id="router简单使用"><a href="#router简单使用" class="headerlink" title="router简单使用"></a>router简单使用</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> Test <span class="keyword">from</span> <span class="string">'./routes/test'</span>;</div><div class="line">...</div><div class="line">&lt;Route path=<span class="string">"/test"</span> exact component=&#123;Test&#125; /&gt;</div></pre></td></tr></table></figure>
</li>
</ol>
<h1 id="克隆antd-admin快速开发"><a href="#克隆antd-admin快速开发" class="headerlink" title="克隆antd-admin快速开发"></a>克隆antd-admin快速开发</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line">git clone https://github.com/zuiidea/antd-admin.git</div><div class="line">npm i 或者 yarn install</div><div class="line"># 开发：</div><div class="line">npm run build:dll #第一次npm run dev时需运行此命令，使开发时编译更快</div><div class="line">npm run dev</div><div class="line">打开 http://localhost:8000</div><div class="line"></div><div class="line"># 构建</div><div class="line">npm run build</div><div class="line">将会打包至dist/&#123;version&#125;目录 #package.json里version字段</div><div class="line">npm run build:new</div><div class="line">将会打包至dist/&#123;version增加1&#125;目录 #package.json里version字段</div><div class="line"></div><div class="line"># 代码检测</div><div class="line">npm run lint</div></pre></td></tr></table></figure>
]]></content>
      
        <categories>
            
            <category> Front-end </category>
            
            <category> React </category>
            
        </categories>
        
        
        <tags>
            
            <tag> React </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[yarn和npm、cnpm使用对比小结]]></title>
      <url>/2017/09/16/Tec/tools/node/yarnAndNpm/</url>
      <content type="html"><![CDATA[<h1 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h1><h2 id="yarn安装"><a href="#yarn安装" class="headerlink" title="yarn安装"></a>yarn安装</h2><a id="more"></a>
<figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">npm install yarn -g</div><div class="line">yarn -v </div><div class="line">// 注：需要将yarn global路径添加到系统环境变量中</div><div class="line">yarn global bin</div><div class="line">//  非常重要!!!!!!!!!!! 将bin路径添加到系统环境变量中,保证yarn的global add的东西可用</div></pre></td></tr></table></figure>
<h1 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h1><p>yarn的具体使用可查看<a href="https://yarnpkg.com/zh-Hans/docs/cli/install" target="_blank" rel="external">官方文档</a></p>
<table>
<thead>
<tr>
<th>命令名</th>
<th>npm</th>
<th>yarn</th>
</tr>
</thead>
<tbody>
<tr>
<td>安装package依赖</td>
<td>npm install</td>
<td>yarn</td>
</tr>
<tr>
<td>安装xxx插件</td>
<td>npm install xxx (–save)</td>
<td>yarn add xxx(包立即被保存到 package.json 中)</td>
</tr>
<tr>
<td>安装xxx插件并添加到开发环境依赖</td>
<td>npm install xxx –save-dev</td>
<td>yarn add xxx –dev</td>
</tr>
<tr>
<td>全局安装xxx插件</td>
<td>npm install xxx -g</td>
<td>yarn global add xxx</td>
</tr>
<tr>
<td>卸载xxx插件</td>
<td>npm uninstall xxx (–save)</td>
<td>yarn remove xxx</td>
</tr>
<tr>
<td>卸载xxx插件</td>
<td>npm uninstall xxx (–save)</td>
<td>yarn remove xxx</td>
</tr>
<tr>
<td>查看xxx插件云端最新版本</td>
<td>npm view xxx version</td>
<td>yarn info xxx version</td>
</tr>
<tr>
<td>查看xxx插件云端全部版本</td>
<td>npm view xxx versions</td>
<td>yarn info xxx versions</td>
</tr>
<tr>
<td>查看xxx插件云端信息</td>
<td>npm info xxx</td>
<td>yarn info xxx(@版本号可查看特定版本信息)</td>
</tr>
</tbody>
</table>
<h2 id="cnpm安装"><a href="#cnpm安装" class="headerlink" title="cnpm安装"></a>cnpm安装</h2><p>国内使用npm速度很慢，可以使用淘宝定制的cnpm(gzip压缩支持)命令行工具代替默认的npm:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">npm install -g cnpm --registry=https://registry.npm.taobao.org</div><div class="line"># 注：其他脚手架安装插件时可能使用npm的registry，故需要设置一下</div><div class="line">npm config set registry https://registry.npm.taobao.org</div><div class="line"></div><div class="line"># 使用：</div><div class="line">cnpm install [name]</div></pre></td></tr></table></figure></p>
<h2 id="问题及解决"><a href="#问题及解决" class="headerlink" title="问题及解决"></a>问题及解决</h2><p>问题: npm ERR! network getaddrinfo ENOTFOUND registry.cnpmjs.org registry.cnpmjs.org<br>换成其他npm源也会这样<br>解决:</p>
<blockquote>
<ol>
<li>先把镜像换回去<br>npm config set registry <a href="http://registry.npmjs.org/" target="_blank" rel="external">http://registry.npmjs.org/</a><br>or<br>vi ~/.npmrc<br>registry=<a href="https://registry.npmjs.org/" target="_blank" rel="external">https://registry.npmjs.org/</a></li>
<li>npm config delete proxy(这步应该没啥用，先放着了)</li>
<li>参照<a href="https://github.com/npm/npm/issues/6686" target="_blank" rel="external">Glavin001的解决办法</a>，最重要的应该是在host里面添加相应registry的host记录，这里是<br>151.101.32.162 registry.npmjs.org<br>$ npm info express –verbose<h1 id="Error-message-npm-info-retry-will-retry-error-on-last-attempt-Error-getaddrinfo-ENOTFOUND-registry-npmjs-org-registry-npmjs-org-443"><a href="#Error-message-npm-info-retry-will-retry-error-on-last-attempt-Error-getaddrinfo-ENOTFOUND-registry-npmjs-org-registry-npmjs-org-443" class="headerlink" title="Error message: npm info retry will retry, error on last attempt: Error: getaddrinfo ENOTFOUND registry.npmjs.org registry.npmjs.org:443"></a>Error message: npm info retry will retry, error on last attempt: Error: getaddrinfo ENOTFOUND registry.npmjs.org registry.npmjs.org:443</h1>$ nslookup registry.npmjs.org<br>Server:     8.8.8.8<br>Address:    8.8.8.8#53<br>Non-authoritative answer:<br>registry.npmjs.org  canonical name = a.sni.fastly.net.<br>a.sni.fastly.net    canonical name = prod.a.sni.global.fastlylb.net.<br>Name:   prod.a.sni.global.fastlylb.net<br>Address: 151.101.32.162<br>$ sudo vim /etc/hosts <h1 id="Add-“151-101-32-162-registry-npmjs-org-to-hosts-file"><a href="#Add-“151-101-32-162-registry-npmjs-org-to-hosts-file" class="headerlink" title="Add “151.101.32.162 registry.npmjs.org` to hosts file"></a>Add “151.101.32.162 registry.npmjs.org` to hosts file</h1>$ npm info express –verbose<h1 id="Works-now"><a href="#Works-now" class="headerlink" title="Works now!"></a>Works now!</h1></li>
</ol>
</blockquote>
]]></content>
      
        <categories>
            
            <category> Tool </category>
            
            <category> Tools </category>
            
            <category> Node </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Yarn </tag>
            
            <tag> Npm </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[日子一天一天过]]></title>
      <url>/2017/09/08/dailyDiary/2017/cheerup/</url>
      <content type="html"><![CDATA[<script src=/js/crypto-js.js></script><script>
function doDecrypt(pwd, onError) {
	console.log("in doDecrypt");
	var txt = document.getElementById("enc_content").innerHTML;
	var plantext;
	try {
	  	var bytes = CryptoJS.AES.decrypt(txt, pwd);
		plaintext = bytes.toString(CryptoJS.enc.Utf8);
	} catch(err) {
		if(onError) {onError(err);}
		return;
	}
	document.getElementById("enc_content").innerHTML = plaintext;
	document.getElementById("enc_content").style.display = "block";
   document.getElementById("enc_passwd").style.display = "none";
}
</script>
<div id="enc_content" style="display:none">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</div><div id="enc_passwd"> <input id="enc_pwd_input" type="text" style="border-radius: 5px;border-style: groove;height: 30px;width: 50%;cursor: auto;font-size: 102%;color: currentColor;outline: none;text-overflow: initial;padding-left: 5px;" onkeydown="if (event.keyCode == 13) { decrypt(); return false;}"> <input type="submit" value="解&nbsp;密" onclick="decrypt()" style="width: 58px;height: 34px;border-radius: 5px;background-color: white;border-style: solid;color: currentColor;"><div id="enc_error" style="display: inline-block;color: #d84527;margin-left: 10px"></div>
<script>
var onError = function(error) {
	document.getElementById("enc_error").innerHTML = "password error!"
};
function decrypt() {
var passwd = document.getElementById("enc_pwd_input").value;
console.log(passwd);
doDecrypt(passwd, onError);
}
</script>
</div>]]></content>
      
        <categories>
            
            <category> dailyDiary </category>
            
        </categories>
        
        
        <tags>
            
            <tag> von </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[python文件操作]]></title>
      <url>/2017/09/08/Tec/python/pythonMethods/</url>
      <content type="html"><![CDATA[<p>最近项目要实现国际化方案，很多中文需要替换，现学了python脚本来做些简单替换，一路走来也总结了一些小函数，记录一下吧。<br><a id="more"></a></p>
<h1 id="Python"><a href="#Python" class="headerlink" title="Python"></a>Python</h1><p><a href="http://blog.csdn.net/gatieme/article/details/43235791" target="_blank" rel="external">Python正则表达式匹配中文</a>，相当棒的一篇文章,各种语言文字匹配</p>
<h2 id="简单读写文本内容"><a href="#简单读写文本内容" class="headerlink" title="简单读写文本内容"></a>简单读写文本内容</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#!/usr/bin/python3</span></div><div class="line">print(<span class="string">"Hello, World!"</span>)</div><div class="line">f = open(<span class="string">'testx.js'</span>, <span class="string">'rb+'</span>)</div><div class="line">f.seek(<span class="number">1</span>)</div><div class="line"><span class="comment">#!python2的话只能有一个参数??</span></div><div class="line">f.write(bytes(<span class="string">"yyyz"</span>,<span class="string">"UTF-8"</span>))</div><div class="line">f.close()</div></pre></td></tr></table></figure>
<h2 id="读取文件夹"><a href="#读取文件夹" class="headerlink" title="读取文件夹"></a>读取文件夹</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> os  </div><div class="line">path = <span class="string">"D:/Python34/news"</span> <span class="comment">#文件夹目录  </span></div><div class="line">files= os.listdir(path) <span class="comment">#得到文件夹下的所有文件名称  </span></div><div class="line">s = []  </div><div class="line"><span class="keyword">for</span> file <span class="keyword">in</span> files: <span class="comment">#遍历文件夹  </span></div><div class="line">     <span class="keyword">if</span> <span class="keyword">not</span> os.path.isdir(file): <span class="comment">#判断是否是文件夹，不是文件夹才打开  </span></div><div class="line">          f = open(path+<span class="string">"/"</span>+file); <span class="comment">#打开文件  </span></div><div class="line">          iter_f = iter(f); <span class="comment">#创建迭代器  </span></div><div class="line">          str = <span class="string">""</span>  </div><div class="line">          <span class="keyword">for</span> line <span class="keyword">in</span> iter_f: <span class="comment">#遍历文件，一行行遍历，读取文本  </span></div><div class="line">              str = str + line  </div><div class="line">          s.append(str) <span class="comment">#每个文件的文本存到list中  </span></div><div class="line">print(s) <span class="comment">#打印结果</span></div></pre></td></tr></table></figure>
<h2 id="从命令行获取参数并逐行读取文本内容"><a href="#从命令行获取参数并逐行读取文本内容" class="headerlink" title="从命令行获取参数并逐行读取文本内容"></a>从命令行获取参数并逐行读取文本内容</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># -*- coding: utf-8 -*-</span></div><div class="line"><span class="keyword">import</span> sys</div><div class="line"><span class="keyword">import</span> os  </div><div class="line"><span class="keyword">if</span> (len(sys.argv) &lt;= <span class="number">1</span>):</div><div class="line">    print(<span class="string">'arg num is error'</span>)</div><div class="line">    exit()</div><div class="line">_list_content = []</div><div class="line"></div><div class="line"><span class="comment">#需要将打开的模式设定为二进制模式，这样就不会更改里面的换行符了。</span></div><div class="line"><span class="comment">#脚本的思想：将文件中的每行读取到list中，之后遍历list，对需要修改的某行进行修改</span></div><div class="line">fh = open(<span class="string">'./testx.js'</span>, <span class="string">'rb'</span>)</div><div class="line"><span class="keyword">for</span> i <span class="keyword">in</span> fh.readlines():</div><div class="line">    _list_content.append(i)</div><div class="line">fh.close()</div><div class="line"></div><div class="line">_content = <span class="string">'key1'</span></div><div class="line"></div><div class="line"><span class="keyword">for</span> i <span class="keyword">in</span> _list_content:</div><div class="line">    <span class="keyword">if</span>(i.find(<span class="string">'key'</span>) &gt;= <span class="number">0</span>):</div><div class="line">        <span class="comment"># i = '121 ' + sys.argv[1] + ' -n ' + sys.argv[2] + '\r\n'</span></div><div class="line">        i = <span class="string">'121 '</span></div><div class="line">    _content = _content + i</div><div class="line">open(<span class="string">'./testx.js'</span>, <span class="string">'wb'</span>).writelines(_content)</div></pre></td></tr></table></figure>
<h2 id="综合处理"><a href="#综合处理" class="headerlink" title="综合处理"></a>综合处理</h2><h3 id="正则表达式匹配结果"><a href="#正则表达式匹配结果" class="headerlink" title="正则表达式匹配结果"></a>正则表达式匹配结果</h3><p>tips: </p>
<blockquote>
<ol>
<li>最短匹配(.)*?</li>
<li>匹配所有字符：(包括换行符) <figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">[\s\S]</div></pre></td></tr></table></figure>
</li>
</ol>
</blockquote>
<h3 id="具体实现源码"><a href="#具体实现源码" class="headerlink" title="具体实现源码:"></a>具体实现源码:</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#!/usr/bin/python</span></div><div class="line"><span class="comment"># -*- coding: utf-8 -*-</span></div><div class="line"><span class="keyword">import</span> sys</div><div class="line"><span class="keyword">import</span> os </div><div class="line"><span class="keyword">import</span> re </div><div class="line">type = sys.getfilesystemencoding()</div><div class="line"><span class="comment"># 定义函数,处理文件，将文件的｛name:'文字', key：'key值'｝替换为｛name:Intl.get('key值'), key：'key值'｝</span></div><div class="line"><span class="comment"># 同时将key值追加到lan.js中</span></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">processFile</span><span class="params">( path )</span>:</span></div><div class="line">    dec = <span class="string">'处理文件'</span> + path</div><div class="line">    <span class="keyword">print</span> dec.decode(<span class="string">'utf-8'</span>).encode(type)</div><div class="line">    f = open(path)</div><div class="line">    f_lan = open(<span class="string">'./lan.js'</span>)</div><div class="line">    f_lan_w = open(<span class="string">'./lan.js'</span>,<span class="string">'a'</span>)</div><div class="line">    iter_f = iter(f)</div><div class="line">    iter_f_lan = iter(f_lan)</div><div class="line">    str1 = <span class="string">""</span>  </div><div class="line">    str_lan = <span class="string">""</span>  </div><div class="line">    tmp = <span class="string">""</span></div><div class="line">    <span class="keyword">for</span> line <span class="keyword">in</span> iter_f: <span class="comment">#遍历文件，一行行遍历，读取文本  </span></div><div class="line">        str1 = str1 + line  </div><div class="line">    <span class="keyword">for</span> line <span class="keyword">in</span> iter_f_lan: <span class="comment">#遍历文件，一行行遍历，读取文本  </span></div><div class="line">        str_lan = str_lan + line  </div><div class="line">    matches = re.findall(<span class="string">r'[\s\S]*?(&#123;[\s\S]*?title:([\s\S]*?),[\s\S]*?key:\s([\s\S]*?),[\s\S]*?&#125;,)'</span>, str1) <span class="comment"># found, match.group() == "iii"</span></div><div class="line">    hint = <span class="string">'  匹配到'</span>+str(len(matches))+<span class="string">'项数据，处理中...'</span></div><div class="line">    <span class="keyword">print</span> hint.decode(<span class="string">'utf-8'</span>).encode(type)</div><div class="line">    <span class="keyword">for</span> match <span class="keyword">in</span> matches:</div><div class="line">        <span class="keyword">if</span> <span class="keyword">not</span> match[<span class="number">2</span>] <span class="keyword">in</span> str_lan:</div><div class="line">            f_lan_w.write(match[<span class="number">2</span>]+<span class="string">': '</span>+match[<span class="number">2</span>]+<span class="string">'\n'</span>)</div><div class="line">        tmp = re.sub(match[<span class="number">1</span>], <span class="string">'Intl.get('</span>+match[<span class="number">2</span>]+<span class="string">')'</span>,match[<span class="number">0</span>])</div><div class="line">        tt = re.sub(<span class="string">r'\\'</span>, <span class="string">r'\\\\'</span>,match[<span class="number">0</span>])</div><div class="line">        str1=str1.replace(match[<span class="number">0</span>],tmp)</div><div class="line">    open(path, <span class="string">'wb'</span>).writelines(str1)</div><div class="line">    <span class="keyword">print</span> <span class="string">'成功\n'</span>.decode(<span class="string">'utf-8'</span>).encode(type)</div><div class="line">    <span class="comment"># print(str1)</span></div><div class="line">    <span class="keyword">return</span></div><div class="line"></div><div class="line"><span class="comment">#check number of arg, if the number is less than 1, exit </span></div><div class="line"><span class="keyword">if</span> (len(sys.argv) &lt;= <span class="number">1</span> <span class="keyword">or</span> <span class="keyword">not</span> os.path.exists(sys.argv[<span class="number">1</span>])):</div><div class="line">    print(<span class="string">'arg num is error'</span>)</div><div class="line">    exit()</div><div class="line">path = sys.argv[<span class="number">1</span>] <span class="comment">#文件夹目录  </span></div><div class="line">str1 = <span class="string">""</span></div><div class="line"><span class="keyword">if</span> os.path.isdir(path):</div><div class="line">    <span class="comment"># print('文件夹'.decode('utf-8').encode(type)) #打印结果</span></div><div class="line">    files= os.listdir(path) <span class="comment">#得到文件夹下的所有文件名称</span></div><div class="line">    <span class="keyword">for</span> file <span class="keyword">in</span> files: <span class="comment">#遍历文件夹  </span></div><div class="line">     <span class="keyword">if</span> <span class="keyword">not</span> os.path.isdir(file): <span class="comment">#判断是否是文件夹，不是文件夹才打开  </span></div><div class="line">          processFile(path+<span class="string">"/"</span>+file)</div><div class="line"><span class="keyword">else</span>:</div><div class="line">    processFile(path)</div></pre></td></tr></table></figure>
<h2 id="python实现文件拷贝"><a href="#python实现文件拷贝" class="headerlink" title="python实现文件拷贝"></a>python实现文件拷贝</h2><p>以下源码实现从一个文件中读取每行文件地址复制到另一个文件夹中，保存原本目录结构<br><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#!/usr/bin/python</span></div><div class="line"><span class="comment"># -*- coding: utf-8 -*-</span></div><div class="line"><span class="keyword">import</span> sys</div><div class="line"><span class="keyword">import</span> os </div><div class="line"><span class="keyword">import</span> re </div><div class="line"><span class="keyword">import</span> shutil</div><div class="line">type = sys.getfilesystemencoding()</div><div class="line"><span class="comment"># 定义函数,复制目标文件到copy1下的相同目录结构文件夹中</span></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">processFile</span><span class="params">( path )</span>:</span></div><div class="line">    <span class="keyword">if</span>(<span class="keyword">not</span> os.path.exists(path)):</div><div class="line">      dect =  path + <span class="string">'不存在'</span></div><div class="line">      <span class="keyword">print</span> dect.decode(<span class="string">'utf-8'</span>).encode(type)</div><div class="line">      <span class="keyword">return</span></div><div class="line">    dst = <span class="string">'./copy1'</span>+path[<span class="number">1</span>:]</div><div class="line">    dst_dir = re.findall(<span class="string">'^.*/'</span>,dst)[<span class="number">0</span>]</div><div class="line">    <span class="keyword">print</span> dst_dir</div><div class="line">    <span class="comment"># 若文件夹不存在则创建</span></div><div class="line">    <span class="keyword">if</span>(<span class="keyword">not</span> os.path.exists(dst_dir)):</div><div class="line">      os.makedirs(dst_dir)</div><div class="line">    dec = <span class="string">'复制文件'</span> + path + <span class="string">'到'</span> + dst</div><div class="line">    <span class="keyword">print</span> dec.decode(<span class="string">'utf-8'</span>).encode(type)</div><div class="line">    shutil.copy(path,dst) </div><div class="line">    <span class="keyword">print</span> <span class="string">'成功'</span>.decode(<span class="string">'utf-8'</span>).encode(type)</div><div class="line">    <span class="keyword">return</span></div><div class="line"><span class="comment">#check number of arg, if the number is less than 1, exit </span></div><div class="line"><span class="keyword">if</span> (len(sys.argv) &lt;= <span class="number">1</span> <span class="keyword">or</span> <span class="keyword">not</span> os.path.exists(sys.argv[<span class="number">1</span>])):</div><div class="line">    print(<span class="string">'arg num is error'</span>)</div><div class="line">    exit()</div><div class="line">path = sys.argv[<span class="number">1</span>] <span class="comment">#文件夹目录  </span></div><div class="line">f = open(path)</div><div class="line">iter_f = iter(f)</div><div class="line"><span class="keyword">for</span> line <span class="keyword">in</span> iter_f: <span class="comment">#遍历文件，一行行遍历，读取待处理文本</span></div><div class="line">  processFile(line.strip(<span class="string">'\n'</span>))</div></pre></td></tr></table></figure></p>
<h2 id="python实现字典文件操作"><a href="#python实现字典文件操作" class="headerlink" title="python实现字典文件操作"></a>python实现字典文件操作</h2><p>字典格式 dict_t = {‘a’:’b’,’c’: {‘d’:’e’}}，可多层嵌套<br>字典格式的读入读出，使用json来控制<br><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> os</div><div class="line"><span class="keyword">import</span> codecs</div><div class="line"><span class="keyword">import</span> json</div><div class="line"><span class="keyword">import</span> types</div><div class="line">a=&#123;<span class="string">'d'</span>:<span class="string">'dd'</span>,<span class="string">'e'</span>:<span class="string">'ee'</span>,<span class="string">'f'</span>:&#123;<span class="string">'g'</span>:<span class="string">'j'</span>&#125;,<span class="string">'h'</span>:&#123;<span class="string">'g'</span>:<span class="string">'i'</span>&#125;&#125;<span class="comment">#获取字典中的objkey对应的值，适用于字典嵌套</span></div><div class="line"><span class="comment">#把字典内容存入文件</span></div><div class="line">f=codecs.open(<span class="string">'data.txt'</span>,<span class="string">'w'</span>)   <span class="comment">#新建文件data.txt</span></div><div class="line">a[<span class="string">'f'</span>][<span class="string">'ha'</span>]=<span class="string">'hahah'</span></div><div class="line">a[<span class="string">'f'</span>].pop(<span class="string">'g'</span>)</div><div class="line">aa = json.dumps(a, indent=<span class="number">4</span>)      <span class="comment">#把a序列化存入文件，格式便于观看</span></div><div class="line">f.write(aa)</div><div class="line">f.close()</div><div class="line"><span class="comment">#把内容读入字典</span></div><div class="line">ff=codecs.open(<span class="string">'data.txt'</span>,<span class="string">'r'</span>,encoding=<span class="string">'utf-8'</span>)    <span class="comment">#打开文件，避免出现中文乱码</span></div><div class="line">aaa = ff.read()</div><div class="line">aaaa = json.loads(aaa)</div><div class="line">aaaa[<span class="string">'a'</span>] = <span class="string">'c'</span></div><div class="line">print(aaaa[<span class="string">'a'</span>])  <span class="comment">#输出c</span></div><div class="line">print(aaaa[<span class="string">'h'</span>][<span class="string">'g'</span>])      <span class="comment">#输出i</span></div></pre></td></tr></table></figure></p>
<h2 id="python实现特殊字符串转义"><a href="#python实现特殊字符串转义" class="headerlink" title="python实现特殊字符串转义"></a>python实现特殊字符串转义</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">zhuanyi</span><span class="params">(keyword)</span>:</span></div><div class="line">    fbsArr = [ <span class="string">"\\"</span>, <span class="string">"$"</span>, <span class="string">"("</span>, <span class="string">")"</span>, <span class="string">"*"</span>, <span class="string">"+"</span>, <span class="string">"."</span>, <span class="string">"["</span>, <span class="string">"]"</span>, <span class="string">"?"</span>, <span class="string">"^"</span>, <span class="string">"&#123;"</span>, <span class="string">"&#125;"</span>, <span class="string">"|"</span> ]</div><div class="line">    <span class="keyword">for</span> key <span class="keyword">in</span> fbsArr:</div><div class="line">        <span class="comment"># keyword.index('q')</span></div><div class="line">        <span class="keyword">if</span> (<span class="keyword">True</span>):</div><div class="line">            keyword = keyword.replace(key, <span class="string">"\\"</span> + key);    </div><div class="line">    <span class="keyword">return</span> keyword</div></pre></td></tr></table></figure>
<h2 id="python实现在线翻译"><a href="#python实现在线翻译" class="headerlink" title="python实现在线翻译"></a>python实现在线翻译</h2><p>参考网址<a href="http://hao.jobbole.com/google-translate-python/" target="_blank" rel="external">一个Python在线翻译模块</a><br><a href="https://github.com/terryyin/google-translate-python" target="_blank" rel="external">项目github开源地址</a><br>安装：pip install translate<br>使用：<br>命令行：translate “This is a pen.” 或 translate -f zh -t ja 我是谁？<br>程序中使用:<br><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">from</span> translate <span class="keyword">import</span> Translator</div><div class="line">translator= Translator(to_lang=<span class="string">"zh"</span>)</div><div class="line">translation = translator.translate(<span class="string">"This is a pen."</span>)</div></pre></td></tr></table></figure></p>
<p>tips:<br>各语言编码如下：<a href="https://en.wikipedia.org/wiki/ISO_639-1" target="_blank" rel="external">查看编码</a></p>
]]></content>
      
        <categories>
            
            <category> Tec </category>
            
            <category> Python </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Python </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[在博客中使用本地图片]]></title>
      <url>/2017/09/05/Tec/Blog/useImgInBlog/</url>
      <content type="html"><![CDATA[<p>在博客中使用本地图片，一开始放在source下可以，但不知道怎么不行了，替换方案如下<br>精髓：</p>
<ol>
<li>hexo-asset-image插件</li>
<li>xxx.md相同目录下有同名文件夹xxx</li>
<li>xxx.md中通过<img src="xxx/图片" alt="">引用</li>
</ol>
<p>注：我的文件夹自己组织之后就没效果了，不如自己在src建一个img文件夹放图片，之后只需要引用图片如下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">![alt](https://github.com/vonxq/vonxq.github.io/blob/master/img/snippet.gif?raw=true)</div><div class="line">替换称自己的图片地址即可，不用上传自己也应该可以拼出来</div></pre></td></tr></table></figure></p>
<a id="more"></a>
<ol>
<li><p>_config.yml:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">post_asset_folder:true</div></pre></td></tr></table></figure>
</li>
<li><p>加载</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">npm install hexo-asset-image --save</div></pre></td></tr></table></figure>
</li>
<li><p>hexo new ‘’来新建博客，会自动生成同名文件夹</p>
</li>
<li>在同名文件夹中加入图片</li>
<li>在博客中加入图片<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">![alt](同名文件夹名/图片（带扩展）)</div></pre></td></tr></table></figure></li>
</ol>
]]></content>
      
        <categories>
            
            <category> Tec </category>
            
            <category> Blog </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Hexo </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[解决git上传项目有文件夹无法打开情况]]></title>
      <url>/2017/09/05/Tec/git/gitError/</url>
      <content type="html"><![CDATA[<p>在码云上传文件夹出现以下情况<br><img src="https://github.com/vonxq/vonxq.github.io/blob/master/img/gitFolderError.png?raw=true" alt="gitFolderError"><br><a id="more"></a><br>git则显示文件夹为灰色</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">错误提示: </div><div class="line">1. Assertion failed（删除了.git但未执行后面的代码）</div></pre></td></tr></table></figure>
<p>原因是因为文件夹内可能有其他git仓库的代码，里面有.git文件夹<br>解决方案:</p>
<ol>
<li>删除.git文件夹</li>
<li>依次执行下面代码<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">git rm --cached directory</div><div class="line">git add directory</div></pre></td></tr></table></figure></li>
</ol>
]]></content>
      
        <categories>
            
            <category> Tec </category>
            
            <category> Git </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Git </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[git基本知识]]></title>
      <url>/2017/09/04/Tec/git/gitBasic/</url>
      <content type="html"><![CDATA[<h2 id="相关概念"><a href="#相关概念" class="headerlink" title="相关概念"></a>相关概念</h2><p>pull request<br>参考<a href="https://www.zhihu.com/question/21682976/answer/20835845" target="_blank" rel="external">GitHub 的 Pull Request 是指什么意思？
</a></p>
<blockquote>
<p>有一个仓库，叫Repo A。你如果要往里贡献代码，首先要Fork这个Repo，于是在你的Github账号下有了一个Repo A2,。然后你在这个A2下工作，Commit，push等。然后你希望原始仓库Repo A合并你的工作，你可以在Github上发起一个Pull Request，意思是请求Repo A的所有者从你的A2合并分支。如果被审核通过并正式合并，这样你就为项目A做贡献了</p>
</blockquote>
<h2 id="github单个文件夹下载"><a href="#github单个文件夹下载" class="headerlink" title="github单个文件夹下载"></a>github单个文件夹下载</h2><p><a href="https://minhaskamal.github.io/DownGit/#/home" target="_blank" rel="external">DownGit,超好用</a><br><a href="https://www.zhihu.com/question/25369412" target="_blank" rel="external">如何在github上下载单个文件夹？-知乎</a><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">要下载文件url</div><div class="line">https://github.com/reactjs/redux/tree/master/examples/todos</div><div class="line">svn下载url:（若不是主分支， /trunk/ 换成 /branches/branchname(分支名)/ ）</div><div class="line">https://github.com/reactjs/redux/trunk/examples/todos</div></pre></td></tr></table></figure></p>
<h2 id="问题管理"><a href="#问题管理" class="headerlink" title="问题管理"></a>问题管理</h2><ol>
<li><p>git push报错如下</p>
<blockquote>
<p>SSL certificate problem: self signed certificate in certificate chain问题<br>问题解决:<br>git config –global http.sslVerify false</p>
</blockquote>
</li>
<li><p>git pull 冲突<br>在家里和公司同步git项目出现的问题，自己解决方法比较暴力，直接把冲突文件全删了，然后就能pull成功了<br>注: pull命令主要是把云端有改动文件同步过来，不会覆盖本地已改动的文件(若两边都有修改，则是出现冲突，可以像上面一样暴力pull，也可以参照下面的链接进行同分支代码的合并)<br><a href="http://www.01happy.com/git-resolve-conflicts/" target="_blank" rel="external">使用git pull文件时和本地文件冲突怎么办？</a></p>
</li>
</ol>
]]></content>
      
        <categories>
            
            <category> Tec </category>
            
            <category> Git </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Git </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[CSS Modules概念及其使用]]></title>
      <url>/2017/09/04/front-end/advance/cssMoudulesAnd/</url>
      <content type="html"><![CDATA[<h1 id="CSSModules"><a href="#CSSModules" class="headerlink" title="CSSModules"></a>CSSModules</h1><p><a href="https://github.com/camsong/blog/issues/5" target="_blank" rel="external">CSS Modules 详解及 React 中实践</a><br><a href="http://www.ruanyifeng.com/blog/2016/06/css_modules.html" target="_blank" rel="external">阮一峰CSS Modules用法教程</a><br><a href="http://www.bootcss.com/p/lesscss/#about" target="_blank" rel="external">Less详解</a><br><a id="more"></a></p>
<h2 id="基础概念"><a href="#基础概念" class="headerlink" title="基础概念"></a>基础概念</h2><p>目标：实现css模块化，避免全局污染</p>
<blockquote>
<p>CSS Modules 很好的解决了 CSS 目前面临的模块化难题。支持与 Sass/Less/PostCSS 等搭配使用，能充分利用现有技术积累。同时也能和全局样式灵活搭配，便于项目中逐步迁移至 CSS Modules。</p>
</blockquote>
<ol>
<li>在css/less 文件里写 .button {…}，并在组件里通过 className={styles.button} 来引用他。会生成无明明冲突的CSS class名</li>
<li>默认局部作用域，通过:global(.title){}的方式定义全局class，全局的claa组件引用只需class    Name=”title”</li>
<li>classnames Package：组件中定义className常量，规定class规则…传入不同的 type 给 App 组件，就会返回不同的 className 组合</li>
</ol>
<h2 id="用法"><a href="#用法" class="headerlink" title="用法"></a>用法</h2><p><a href="https://github.com/camsong/blog/issues/5" target="_blank" rel="external">CSS Modules 详解及 React 中实践</a></p>
<h3 id="方法一"><a href="#方法一" class="headerlink" title="方法一"></a>方法一</h3><p>import export…（一般不用）</p>
<h3 id="方法二"><a href="#方法二" class="headerlink" title="方法二"></a>方法二</h3><p>结合webpack,定义好css相关文件解析规则<br>在css中定义样式，之后在js文件中用className=styles[‘样式名’]来使用</p>
<h2 id="命名规范"><a href="#命名规范" class="headerlink" title="命名规范"></a>命名规范</h2><p>BEM规则，模块（Block）-节点名(Element)-节点状态(Modifier)</p>
<h2 id="使用规范"><a href="#使用规范" class="headerlink" title="使用规范"></a>使用规范</h2><blockquote>
<ol>
<li>不使用选择器，只使用 class 名来定义样式</li>
<li>不层叠多个 class，只使用一个 class 把所有样式定义好</li>
<li>所有样式通过 composes 组合来实现复用</li>
<li>不嵌套</li>
</ol>
</blockquote>
<h2 id="一些常用知识"><a href="#一些常用知识" class="headerlink" title="一些常用知识"></a>一些常用知识</h2><figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">minHeight</span>: <span class="selector-tag">calc</span>(100<span class="selector-tag">vh</span> <span class="selector-tag">-</span> 120<span class="selector-tag">px</span>)</div></pre></td></tr></table></figure>
<h2 id="一些小坑"><a href="#一些小坑" class="headerlink" title="一些小坑"></a>一些小坑</h2><p>width : calc(100% - 25px) 会被识别为75%,修改:<br>width : calc(~”100% - 25px”);</p>
]]></content>
      
        <categories>
            
            <category> Frontend </category>
            
            <category> Advance </category>
            
        </categories>
        
        
        <tags>
            
            <tag> CSS </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[常见网络攻击]]></title>
      <url>/2017/09/04/front-end/advance/webSafe/</url>
      <content type="html"><![CDATA[<p><a href="http://www.bingdun.com/support/tech/1092.htm" target="_blank" rel="external">网络攻击常见手段及终端防护方法</a><br> <a id="more"></a></p>
<ol>
<li>DoS（Denail of service）: 拒绝服务攻击</li>
<li>DDoS（Distirbuted …）: 分布式拒绝服务攻击</li>
<li>ARP攻击(只能在局域网内攻击)<blockquote>
<p>ARP攻击就是通过伪造IP地址和MAC地址实现ARP欺骗，能够在网络中产生大量的ARP通信量使网络阻塞，攻击者只要持续不断的发出伪造的ARP响应包就能更改目标主机ARP缓存中的IP-MAC条目，造成网络中断或中间人攻击。 </p>
</blockquote>
</li>
</ol>
<p>注：ARP（Address Resolution Protocol，地址解析协议）是一个位于TCP/IP协议栈中的网络层，负责将某个IP地址解析成对应的MAC地址。</p>
<ol>
<li>脚本攻击<br>如SQL注入攻击</li>
</ol>
]]></content>
      
        <categories>
            
            <category> Front-end </category>
            
            <category> Advance </category>
            
        </categories>
        
        
        <tags>
            
            <tag> WebSafe </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[linux]]></title>
      <url>/2017/09/04/Tec/linux/linux/</url>
      <content type="html"><![CDATA[<h1 id="linux常用命令"><a href="#linux常用命令" class="headerlink" title="linux常用命令"></a>linux常用命令</h1><h2 id="文件操作"><a href="#文件操作" class="headerlink" title="文件操作"></a>文件操作</h2><p>解压:<br>tar -zxvf 文件.tgz(.gz) -C 目的文件夹  （默认解压到当前目录）<br>unzip 文件.zip -d 目的文件夹</p>
<h2 id="网络相关"><a href="#网络相关" class="headerlink" title="网络相关"></a>网络相关</h2><p><a href="http://blog.csdn.net/doiido/article/details/42495709" target="_blank" rel="external">Linux 网卡设置 IP地址配置</a><br>增加IP: ifconfig eth0:1 192.168.10.198 netmask 255.255.255.0(非永久)<br>        route -p add 172.124.111.187 mask 255.255.255.0 172.24.111.1(永久有效，好像不能运行…)<br>删除IP:<br>配置网关: GATEWAY=192.168.1.1<br>修改DNS: nameserver 192.168.1.1<br>重新加载: /etc/init.d/network restart<br>重启路由网络配置： service restart network<br>新增路由： route add -net 某ip netmask 掩码 gw 网管 dev 设备(bri0)</p>
<h3 id="为虚拟机增加IP"><a href="#为虚拟机增加IP" class="headerlink" title="为虚拟机增加IP"></a>为虚拟机增加IP</h3><p><a href="http://blog.sina.com.cn/s/blog_7880d33501019axl.html" target="_blank" rel="external">浅谈集线器、路由器、交换机、网关、网桥、网卡的作用与区别</a></p>
<blockquote>
<p>2、网络适配器（网卡）工作在OSI参考模型中的第二层数据链路层，是连接计算机和网络的硬件设备，网卡的功能有两个：一是将电脑的数据封装为帧，并通过网线或无线网将数据送到网络上去；二是接受网络上传来的帧，将帧重新组成数据，发送到电脑中，网卡接收所有在网络上传输的信号，但只接收发送到刚电脑上的帧和广播帧，其余的帧丢弃。<br> 6、网桥，当两种相同类型但又使用不同通信协议的网络进行互连时，就需要使用桥接器，也就是网桥，网桥的工作原理：当网桥刚安装时，它对网络中的各工作站一无所知。在工作站开始传送数据时，网桥会自动记下其地址，直到建立起一张完整的网络地址表为止，一旦地址表建完，信息数据在通过网桥时，网桥就根据信息包比较其目的地址的网络号与源地址的网络号是否相同，若不同，则进行格式转换，将信息包传过“桥”，否则，不转换也不过“桥”。网桥对应参考模型的第二层（包括物理层与数据链路层），没有路径选择能力，因此网桥只能连接同一类型的网络（如以太网与以太网）</p>
<p>eth0代表网卡一，以此类推<br><a href="http://benjr.tw/20497" target="_blank" rel="external">Linux – Bridge</a>,文章不错只是还是一大堆不知道的问题<br> <figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"># 查看网桥信息</div><div class="line">brictl show</div></pre></td></tr></table></figure></p>
</blockquote>
<p>静态方法<br><strong>/etc/sysconfig/network文件内容</strong><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">NETWORKING=yes</div><div class="line">HOSTNAME=NS</div><div class="line">GATEWAY=10.206.0.254</div><div class="line">NETWORKING_IPV6=yes</div></pre></td></tr></table></figure></p>
<p><strong>/etc/sysconfig/network-scripts/ifcfg-eth0文件内容</strong><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">DEVICE=eth0</div><div class="line">ONBOOT=yes</div><div class="line">TYPE=Ethernet</div><div class="line">BRIDGE=bri0</div><div class="line">NSDEVTYPE=out</div></pre></td></tr></table></figure></p>
<p><strong>/etc/sysconfig/network-scripts/ifcfg-bri0文件内容</strong>，配完后可ping通同网段主机<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">DEVICE=bri0</div><div class="line">IPADDR=10.206.136.12</div><div class="line">NETMASK=255.255.0.0</div><div class="line">STP=off</div><div class="line">TYPE=Bridge</div></pre></td></tr></table></figure></p>
<h2 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h2><p>在不能ctrl+c关闭npm启动的服务时，可用killall node暴力关闭所有服务</p>
<h2 id="版本"><a href="#版本" class="headerlink" title="版本"></a>版本</h2><p>查看版本信息<br>$cat /proc/version<br>Linux version 2.6.32-358.NSOS5.0.x86_64 (ruijuan_zhang@localhost.localdomain) (gcc version 4.4.7 20120313 (Red Hat 4.4.7-3) (GCC) ) #1 SMP Tue Aug 30 13:41:31 CST 2016<br>$cat /etc/issue<br>Netentsec OS 3.0<br>$cat /etc/redhat-release<br>Netentsec OS 3.0<br>$file /bin/bash<br>/bin/bash: ELF 64-bit LSB executable, x86-64, version 1 (SYSV), dynamically linked (uses shared libs), for GNU/Linux 2.6.18, stripped</p>
]]></content>
      
        <categories>
            
            <category> Tec </category>
            
            <category> Linux </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[路漫漫到底有多远]]></title>
      <url>/2017/09/03/dailyDiary/2017/how-to-learn/</url>
      <content type="html"><![CDATA[<script src=/js/crypto-js.js></script><script>
function doDecrypt(pwd, onError) {
	console.log("in doDecrypt");
	var txt = document.getElementById("enc_content").innerHTML;
	var plantext;
	try {
	  	var bytes = CryptoJS.AES.decrypt(txt, pwd);
		plaintext = bytes.toString(CryptoJS.enc.Utf8);
	} catch(err) {
		if(onError) {onError(err);}
		return;
	}
	document.getElementById("enc_content").innerHTML = plaintext;
	document.getElementById("enc_content").style.display = "block";
   document.getElementById("enc_passwd").style.display = "none";
}
</script>
<div id="enc_content" style="display:none">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</div><div id="enc_passwd"> <input id="enc_pwd_input" type="text" style="border-radius: 5px;border-style: groove;height: 30px;width: 50%;cursor: auto;font-size: 102%;color: currentColor;outline: none;text-overflow: initial;padding-left: 5px;" onkeydown="if (event.keyCode == 13) { decrypt(); return false;}"> <input type="submit" value="解&nbsp;密" onclick="decrypt()" style="width: 58px;height: 34px;border-radius: 5px;background-color: white;border-style: solid;color: currentColor;"><div id="enc_error" style="display: inline-block;color: #d84527;margin-left: 10px"></div>
<script>
var onError = function(error) {
	document.getElementById("enc_error").innerHTML = "password error!"
};
function decrypt() {
var passwd = document.getElementById("enc_pwd_input").value;
console.log(passwd);
doDecrypt(passwd, onError);
}
</script>
</div>]]></content>
      
        <categories>
            
            <category> dailyDiary </category>
            
        </categories>
        
        
        <tags>
            
            <tag> von </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[小总结]]></title>
      <url>/2017/09/01/summary/summary/</url>
      <content type="html"><![CDATA[<script src=/js/crypto-js.js></script><script>
function doDecrypt(pwd, onError) {
	console.log("in doDecrypt");
	var txt = document.getElementById("enc_content").innerHTML;
	var plantext;
	try {
	  	var bytes = CryptoJS.AES.decrypt(txt, pwd);
		plaintext = bytes.toString(CryptoJS.enc.Utf8);
	} catch(err) {
		if(onError) {onError(err);}
		return;
	}
	document.getElementById("enc_content").innerHTML = plaintext;
	document.getElementById("enc_content").style.display = "block";
   document.getElementById("enc_passwd").style.display = "none";
}
</script>
<div id="enc_content" style="display:none"></div><div id="enc_passwd"> <input id="enc_pwd_input" type="text" style="border-radius: 5px;border-style: groove;height: 30px;width: 50%;cursor: auto;font-size: 102%;color: currentColor;outline: none;text-overflow: initial;padding-left: 5px;" onkeydown="if (event.keyCode == 13) { decrypt(); return false;}"> <input type="submit" value="解&nbsp;密" onclick="decrypt()" style="width: 58px;height: 34px;border-radius: 5px;background-color: white;border-style: solid;color: currentColor;"><div id="enc_error" style="display: inline-block;color: #d84527;margin-left: 10px"></div>
<script>
var onError = function(error) {
	document.getElementById("enc_error").innerHTML = "password error!"
};
function decrypt() {
var passwd = document.getElementById("enc_pwd_input").value;
console.log(passwd);
doDecrypt(passwd, onError);
}
</script>
</div>]]></content>
      
        <categories>
            
            <category> Summary </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Summery </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[脚本实现批量文件操作]]></title>
      <url>/2017/08/31/Tec/accumulation/fileOperate/</url>
      <content type="html"><![CDATA[<h1 id="Node-JS"><a href="#Node-JS" class="headerlink" title="Node.JS"></a>Node.JS</h1><p><a href="http://www.runoob.com/nodejs/nodejs-fs.html" target="_blank" rel="external">NodeJS文件系统</a><br><a id="more"></a></p>
<h2 id="入门-读取文件内容"><a href="#入门-读取文件内容" class="headerlink" title="入门:读取文件内容"></a>入门:读取文件内容</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> fs = <span class="built_in">require</span>(<span class="string">"fs"</span>);</div><div class="line"><span class="comment">// 异步读取</span></div><div class="line"><span class="comment">// fs.readFile('input.txt', function (err, data) &#123;</span></div><div class="line"><span class="comment">//    if (err) &#123;</span></div><div class="line"><span class="comment">//        return console.error(err);</span></div><div class="line"><span class="comment">//    &#125;</span></div><div class="line"><span class="comment">//    console.log("异步读取: " + data.toString());</span></div><div class="line"><span class="comment">// &#125;);</span></div><div class="line"><span class="comment">// // 同步读取</span></div><div class="line"><span class="comment">// var data = fs.readFileSync('input.txt');</span></div><div class="line"><span class="comment">// console.log("同步读取: " + data.toString());</span></div><div class="line"><span class="keyword">var</span> glob = <span class="built_in">require</span>(<span class="string">"glob"</span>)</div><div class="line"><span class="comment">// options is optional</span></div><div class="line">glob(<span class="string">"user/*"</span>, <span class="function"><span class="keyword">function</span> (<span class="params">err, files</span>) </span>&#123;</div><div class="line">    <span class="keyword">for</span>(<span class="keyword">let</span> file <span class="keyword">of</span> files) &#123;</div><div class="line">        fs.readFile(file, <span class="function"><span class="keyword">function</span> (<span class="params">err, data</span>) </span>&#123;</div><div class="line">            <span class="keyword">if</span> (err) &#123;</div><div class="line">                <span class="keyword">return</span> <span class="built_in">console</span>.error(err);</div><div class="line">            &#125;</div><div class="line">            <span class="built_in">console</span>.log(<span class="string">"异步读取: "</span> + data.toString());            </div><div class="line">        &#125;)</div><div class="line">    &#125;</div><div class="line">    <span class="built_in">console</span>.log(files)</div><div class="line">&#125;)</div></pre></td></tr></table></figure>
<h1 id="shell"><a href="#shell" class="headerlink" title="shell"></a>shell</h1><h1 id="Python"><a href="#Python" class="headerlink" title="Python"></a>Python</h1><p><a href="http://blog.csdn.net/gatieme/article/details/43235791" target="_blank" rel="external">Python正则表达式匹配中文</a>，相当棒的一篇文章,各种语言文字匹配</p>
<h2 id="简单读写文本内容"><a href="#简单读写文本内容" class="headerlink" title="简单读写文本内容"></a>简单读写文本内容</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#!/usr/bin/python3</span></div><div class="line">print(<span class="string">"Hello, World!"</span>)</div><div class="line">f = open(<span class="string">'testx.js'</span>, <span class="string">'rb+'</span>)</div><div class="line">f.seek(<span class="number">1</span>)</div><div class="line"><span class="comment">#!python2的话只能有一个参数??</span></div><div class="line">f.write(bytes(<span class="string">"yyyz"</span>,<span class="string">"UTF-8"</span>))</div><div class="line">f.close()</div></pre></td></tr></table></figure>
<h2 id="读取文件夹"><a href="#读取文件夹" class="headerlink" title="读取文件夹"></a>读取文件夹</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> os  </div><div class="line">path = <span class="string">"D:/Python34/news"</span> <span class="comment">#文件夹目录  </span></div><div class="line">files= os.listdir(path) <span class="comment">#得到文件夹下的所有文件名称  </span></div><div class="line">s = []  </div><div class="line"><span class="keyword">for</span> file <span class="keyword">in</span> files: <span class="comment">#遍历文件夹  </span></div><div class="line">     <span class="keyword">if</span> <span class="keyword">not</span> os.path.isdir(file): <span class="comment">#判断是否是文件夹，不是文件夹才打开  </span></div><div class="line">          f = open(path+<span class="string">"/"</span>+file); <span class="comment">#打开文件  </span></div><div class="line">          iter_f = iter(f); <span class="comment">#创建迭代器  </span></div><div class="line">          str = <span class="string">""</span>  </div><div class="line">          <span class="keyword">for</span> line <span class="keyword">in</span> iter_f: <span class="comment">#遍历文件，一行行遍历，读取文本  </span></div><div class="line">              str = str + line  </div><div class="line">          s.append(str) <span class="comment">#每个文件的文本存到list中  </span></div><div class="line">print(s) <span class="comment">#打印结果</span></div></pre></td></tr></table></figure>
<h2 id="从命令行获取参数并逐行读取文本内容"><a href="#从命令行获取参数并逐行读取文本内容" class="headerlink" title="从命令行获取参数并逐行读取文本内容"></a>从命令行获取参数并逐行读取文本内容</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># -*- coding: utf-8 -*-</span></div><div class="line"><span class="keyword">import</span> sys</div><div class="line"><span class="keyword">import</span> os  </div><div class="line"><span class="keyword">if</span> (len(sys.argv) &lt;= <span class="number">1</span>):</div><div class="line">    print(<span class="string">'arg num is error'</span>)</div><div class="line">    exit()</div><div class="line">_list_content = []</div><div class="line"></div><div class="line"><span class="comment">#需要将打开的模式设定为二进制模式，这样就不会更改里面的换行符了。</span></div><div class="line"><span class="comment">#脚本的思想：将文件中的每行读取到list中，之后遍历list，对需要修改的某行进行修改</span></div><div class="line">fh = open(<span class="string">'./testx.js'</span>, <span class="string">'rb'</span>)</div><div class="line"><span class="keyword">for</span> i <span class="keyword">in</span> fh.readlines():</div><div class="line">    _list_content.append(i)</div><div class="line">fh.close()</div><div class="line"></div><div class="line">_content = <span class="string">'key1'</span></div><div class="line"></div><div class="line"><span class="keyword">for</span> i <span class="keyword">in</span> _list_content:</div><div class="line">    <span class="keyword">if</span>(i.find(<span class="string">'key'</span>) &gt;= <span class="number">0</span>):</div><div class="line">        <span class="comment"># i = '121 ' + sys.argv[1] + ' -n ' + sys.argv[2] + '\r\n'</span></div><div class="line">        i = <span class="string">'121 '</span></div><div class="line">    _content = _content + i</div><div class="line">open(<span class="string">'./testx.js'</span>, <span class="string">'wb'</span>).writelines(_content)</div></pre></td></tr></table></figure>
<h2 id="综合处理"><a href="#综合处理" class="headerlink" title="综合处理"></a>综合处理</h2><h3 id="正则表达式匹配结果"><a href="#正则表达式匹配结果" class="headerlink" title="正则表达式匹配结果"></a>正则表达式匹配结果</h3><p>tips: </p>
<blockquote>
<ol>
<li>最短匹配(.)*?</li>
<li>匹配所有字符：(包括换行符) <figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">[\s\S]</div></pre></td></tr></table></figure>
</li>
</ol>
</blockquote>
<h3 id="具体实现源码"><a href="#具体实现源码" class="headerlink" title="具体实现源码:"></a>具体实现源码:</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#!/usr/bin/python</span></div><div class="line"><span class="comment"># -*- coding: utf-8 -*-</span></div><div class="line"><span class="keyword">import</span> sys</div><div class="line"><span class="keyword">import</span> os </div><div class="line"><span class="keyword">import</span> re </div><div class="line">type = sys.getfilesystemencoding()</div><div class="line"><span class="comment"># 定义函数,处理文件，将文件的｛name:'文字', key：'key值'｝替换为｛name:Intl.get('key值'), key：'key值'｝</span></div><div class="line"><span class="comment"># 同时将key值追加到lan.js中</span></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">processFile</span><span class="params">( path )</span>:</span></div><div class="line">    dec = <span class="string">'处理文件'</span> + path</div><div class="line">    <span class="keyword">print</span> dec.decode(<span class="string">'utf-8'</span>).encode(type)</div><div class="line">    f = open(path)</div><div class="line">    f_lan = open(<span class="string">'./lan.js'</span>)</div><div class="line">    f_lan_w = open(<span class="string">'./lan.js'</span>,<span class="string">'a'</span>)</div><div class="line">    iter_f = iter(f)</div><div class="line">    iter_f_lan = iter(f_lan)</div><div class="line">    str1 = <span class="string">""</span>  </div><div class="line">    str_lan = <span class="string">""</span>  </div><div class="line">    tmp = <span class="string">""</span></div><div class="line">    <span class="keyword">for</span> line <span class="keyword">in</span> iter_f: <span class="comment">#遍历文件，一行行遍历，读取文本  </span></div><div class="line">        str1 = str1 + line  </div><div class="line">    <span class="keyword">for</span> line <span class="keyword">in</span> iter_f_lan: <span class="comment">#遍历文件，一行行遍历，读取文本  </span></div><div class="line">        str_lan = str_lan + line  </div><div class="line">    matches = re.findall(<span class="string">r'[\s\S]*?(&#123;[\s\S]*?title:([\s\S]*?),[\s\S]*?key:\s([\s\S]*?),[\s\S]*?&#125;,)'</span>, str1) <span class="comment"># found, match.group() == "iii"</span></div><div class="line">    hint = <span class="string">'  匹配到'</span>+str(len(matches))+<span class="string">'项数据，处理中...'</span></div><div class="line">    <span class="keyword">print</span> hint.decode(<span class="string">'utf-8'</span>).encode(type)</div><div class="line">    <span class="keyword">for</span> match <span class="keyword">in</span> matches:</div><div class="line">        <span class="keyword">if</span> <span class="keyword">not</span> match[<span class="number">2</span>] <span class="keyword">in</span> str_lan:</div><div class="line">            f_lan_w.write(match[<span class="number">2</span>]+<span class="string">': '</span>+match[<span class="number">2</span>]+<span class="string">'\n'</span>)</div><div class="line">        tmp = re.sub(match[<span class="number">1</span>], <span class="string">'Intl.get('</span>+match[<span class="number">2</span>]+<span class="string">')'</span>,match[<span class="number">0</span>])</div><div class="line">        tt = re.sub(<span class="string">r'\\'</span>, <span class="string">r'\\\\'</span>,match[<span class="number">0</span>])</div><div class="line">        str1=str1.replace(match[<span class="number">0</span>],tmp)</div><div class="line">    open(path, <span class="string">'wb'</span>).writelines(str1)</div><div class="line">    <span class="keyword">print</span> <span class="string">'成功\n'</span>.decode(<span class="string">'utf-8'</span>).encode(type)</div><div class="line">    <span class="comment"># print(str1)</span></div><div class="line">    <span class="keyword">return</span></div><div class="line"></div><div class="line"><span class="comment">#check number of arg, if the number is less than 1, exit </span></div><div class="line"><span class="keyword">if</span> (len(sys.argv) &lt;= <span class="number">1</span> <span class="keyword">or</span> <span class="keyword">not</span> os.path.exists(sys.argv[<span class="number">1</span>])):</div><div class="line">    print(<span class="string">'arg num is error'</span>)</div><div class="line">    exit()</div><div class="line">path = sys.argv[<span class="number">1</span>] <span class="comment">#文件夹目录  </span></div><div class="line">str1 = <span class="string">""</span></div><div class="line"><span class="keyword">if</span> os.path.isdir(path):</div><div class="line">    <span class="comment"># print('文件夹'.decode('utf-8').encode(type)) #打印结果</span></div><div class="line">    files= os.listdir(path) <span class="comment">#得到文件夹下的所有文件名称</span></div><div class="line">    <span class="keyword">for</span> file <span class="keyword">in</span> files: <span class="comment">#遍历文件夹  </span></div><div class="line">     <span class="keyword">if</span> <span class="keyword">not</span> os.path.isdir(file): <span class="comment">#判断是否是文件夹，不是文件夹才打开  </span></div><div class="line">          processFile(path+<span class="string">"/"</span>+file)</div><div class="line"><span class="keyword">else</span>:</div><div class="line">    processFile(path)</div></pre></td></tr></table></figure>
<h2 id="python实现文件拷贝"><a href="#python实现文件拷贝" class="headerlink" title="python实现文件拷贝"></a>python实现文件拷贝</h2><p>以下源码实现从一个文件中读取每行文件地址复制到另一个文件夹中，保存原本目录结构<br><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#!/usr/bin/python</span></div><div class="line"><span class="comment"># -*- coding: utf-8 -*-</span></div><div class="line"><span class="keyword">import</span> sys</div><div class="line"><span class="keyword">import</span> os </div><div class="line"><span class="keyword">import</span> re </div><div class="line"><span class="keyword">import</span> shutil</div><div class="line">type = sys.getfilesystemencoding()</div><div class="line"><span class="comment"># 定义函数,复制目标文件到copy1下的相同目录结构文件夹中</span></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">processFile</span><span class="params">( path )</span>:</span></div><div class="line">    <span class="keyword">if</span>(<span class="keyword">not</span> os.path.exists(path)):</div><div class="line">      dect =  path + <span class="string">'不存在'</span></div><div class="line">      <span class="keyword">print</span> dect.decode(<span class="string">'utf-8'</span>).encode(type)</div><div class="line">      <span class="keyword">return</span></div><div class="line">    dst = <span class="string">'./copy1'</span>+path[<span class="number">1</span>:]</div><div class="line">    dst_dir = re.findall(<span class="string">'^.*/'</span>,dst)[<span class="number">0</span>]</div><div class="line">    <span class="keyword">print</span> dst_dir</div><div class="line">    <span class="comment"># 若文件夹不存在则创建</span></div><div class="line">    <span class="keyword">if</span>(<span class="keyword">not</span> os.path.exists(dst_dir)):</div><div class="line">      os.makedirs(dst_dir)</div><div class="line">    dec = <span class="string">'复制文件'</span> + path + <span class="string">'到'</span> + dst</div><div class="line">    <span class="keyword">print</span> dec.decode(<span class="string">'utf-8'</span>).encode(type)</div><div class="line">    shutil.copy(path,dst) </div><div class="line">    <span class="keyword">print</span> <span class="string">'成功'</span>.decode(<span class="string">'utf-8'</span>).encode(type)</div><div class="line">    <span class="keyword">return</span></div><div class="line"><span class="comment">#check number of arg, if the number is less than 1, exit </span></div><div class="line"><span class="keyword">if</span> (len(sys.argv) &lt;= <span class="number">1</span> <span class="keyword">or</span> <span class="keyword">not</span> os.path.exists(sys.argv[<span class="number">1</span>])):</div><div class="line">    print(<span class="string">'arg num is error'</span>)</div><div class="line">    exit()</div><div class="line">path = sys.argv[<span class="number">1</span>] <span class="comment">#文件夹目录  </span></div><div class="line">f = open(path)</div><div class="line">iter_f = iter(f)</div><div class="line"><span class="keyword">for</span> line <span class="keyword">in</span> iter_f: <span class="comment">#遍历文件，一行行遍历，读取待处理文本</span></div><div class="line">  processFile(line.strip(<span class="string">'\n'</span>))</div></pre></td></tr></table></figure></p>
<h2 id="python实现字典文件操作"><a href="#python实现字典文件操作" class="headerlink" title="python实现字典文件操作"></a>python实现字典文件操作</h2><p>字典格式 dict_t = {‘a’:’b’,’c’: {‘d’:’e’}}，可多层嵌套<br>字典格式的读入读出，使用json来控制<br><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> os</div><div class="line"><span class="keyword">import</span> codecs</div><div class="line"><span class="keyword">import</span> json</div><div class="line"><span class="keyword">import</span> types</div><div class="line">a=&#123;<span class="string">'d'</span>:<span class="string">'dd'</span>,<span class="string">'e'</span>:<span class="string">'ee'</span>,<span class="string">'f'</span>:&#123;<span class="string">'g'</span>:<span class="string">'j'</span>&#125;,<span class="string">'h'</span>:&#123;<span class="string">'g'</span>:<span class="string">'i'</span>&#125;&#125;<span class="comment">#获取字典中的objkey对应的值，适用于字典嵌套</span></div><div class="line"><span class="comment">#把字典内容存入文件</span></div><div class="line">f=codecs.open(<span class="string">'data.txt'</span>,<span class="string">'w'</span>)   <span class="comment">#新建文件data.txt</span></div><div class="line">a[<span class="string">'f'</span>][<span class="string">'ha'</span>]=<span class="string">'hahah'</span></div><div class="line">a[<span class="string">'f'</span>].pop(<span class="string">'g'</span>)</div><div class="line">aa = json.dumps(a, indent=<span class="number">4</span>)      <span class="comment">#把a序列化存入文件，格式便于观看</span></div><div class="line">f.write(aa)</div><div class="line">f.close()</div><div class="line"><span class="comment">#把内容读入字典</span></div><div class="line">ff=codecs.open(<span class="string">'data.txt'</span>,<span class="string">'r'</span>,encoding=<span class="string">'utf-8'</span>)    <span class="comment">#打开文件，避免出现中文乱码</span></div><div class="line">aaa = ff.read()</div><div class="line">aaaa = json.loads(aaa)</div><div class="line">aaaa[<span class="string">'a'</span>] = <span class="string">'c'</span></div><div class="line">print(aaaa[<span class="string">'a'</span>])  <span class="comment">#输出c</span></div><div class="line">print(aaaa[<span class="string">'h'</span>][<span class="string">'g'</span>])      <span class="comment">#输出i</span></div></pre></td></tr></table></figure></p>
<h2 id="python实现特殊字符串转义"><a href="#python实现特殊字符串转义" class="headerlink" title="python实现特殊字符串转义"></a>python实现特殊字符串转义</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">zhuanyi</span><span class="params">(keyword)</span>:</span></div><div class="line">    fbsArr = [ <span class="string">"\\"</span>, <span class="string">"$"</span>, <span class="string">"("</span>, <span class="string">")"</span>, <span class="string">"*"</span>, <span class="string">"+"</span>, <span class="string">"."</span>, <span class="string">"["</span>, <span class="string">"]"</span>, <span class="string">"?"</span>, <span class="string">"^"</span>, <span class="string">"&#123;"</span>, <span class="string">"&#125;"</span>, <span class="string">"|"</span> ]</div><div class="line">    <span class="keyword">for</span> key <span class="keyword">in</span> fbsArr:</div><div class="line">        <span class="comment"># keyword.index('q')</span></div><div class="line">        <span class="keyword">if</span> (<span class="keyword">True</span>):</div><div class="line">            keyword = keyword.replace(key, <span class="string">"\\"</span> + key);    </div><div class="line">    <span class="keyword">return</span> keyword</div></pre></td></tr></table></figure>
<h2 id="python实现在线翻译"><a href="#python实现在线翻译" class="headerlink" title="python实现在线翻译"></a>python实现在线翻译</h2><p>参考网址<a href="http://hao.jobbole.com/google-translate-python/" target="_blank" rel="external">一个Python在线翻译模块</a><br><a href="https://github.com/terryyin/google-translate-python" target="_blank" rel="external">项目github开源地址</a><br>安装：pip install translate<br>使用：<br>命令行：translate “This is a pen.” 或 translate -f zh -t ja 我是谁？<br>程序中使用:<br><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">from</span> translate <span class="keyword">import</span> Translator</div><div class="line">translator= Translator(to_lang=<span class="string">"zh"</span>)</div><div class="line">translation = translator.translate(<span class="string">"This is a pen."</span>)</div></pre></td></tr></table></figure></p>
<p>tips:<br>各语言编码如下：<a href="https://en.wikipedia.org/wiki/ISO_639-1" target="_blank" rel="external">查看编码</a></p>
]]></content>
      
        <categories>
            
            <category> Tec </category>
            
            <category> Accumulation </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Python </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[产品相关(todo)]]></title>
      <url>/2017/08/28/work/ims3/</url>
      <content type="html"><![CDATA[<p>hub: 集线器<br>NAT: 网络地址转换（Network Address Translation，缩写为NAT），是一种在IP数据包通过路由器或防火墙时重写来源IP地址或目的IP地址的技术。这种技术被普遍使用在有多台主机但只通过一个公有IP地址访问因特网的私有网络中。根据规范，路由器是不能这样工作的，但它的确是一个方便并得到了广泛应用的技术。当然，NAT也让主机之间的通信变得复杂，导致通信效率的降低。</p>
<p>SSL： 安全套接层 </p>
<p>必备技能:<br>react<br>js<br>布局<br>linux<br>网络相关<br>svn</p>
]]></content>
      
        <categories>
            
            <category> Work </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Work </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[前端跨域实现(todo)]]></title>
      <url>/2017/08/27/front-end/advance/cross/</url>
      <content type="html"><![CDATA[<p>res.header(“Access-Control-Allow-Origin”, “*”)<br><a id="more"></a></p>
<h2 id="服务器方法"><a href="#服务器方法" class="headerlink" title="服务器方法"></a>服务器方法</h2><p>date: 2017-10-27 18:19:49<br>res.header(“Access-Control-Allow-Origin”, “*”)</p>
]]></content>
      
        
    </entry>
    
    <entry>
      <title><![CDATA[笔记整理及问题记录]]></title>
      <url>/2017/08/19/front-end/React/record/mypen/</url>
      <content type="html"><![CDATA[<script src=/js/crypto-js.js></script><script>
function doDecrypt(pwd, onError) {
	console.log("in doDecrypt");
	var txt = document.getElementById("enc_content").innerHTML;
	var plantext;
	try {
	  	var bytes = CryptoJS.AES.decrypt(txt, pwd);
		plaintext = bytes.toString(CryptoJS.enc.Utf8);
	} catch(err) {
		if(onError) {onError(err);}
		return;
	}
	document.getElementById("enc_content").innerHTML = plaintext;
	document.getElementById("enc_content").style.display = "block";
   document.getElementById("enc_passwd").style.display = "none";
}
</script>
<div id="enc_content" style="display:none">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</div><div id="enc_passwd"> <input id="enc_pwd_input" type="text" style="border-radius: 5px;border-style: groove;height: 30px;width: 50%;cursor: auto;font-size: 102%;color: currentColor;outline: none;text-overflow: initial;padding-left: 5px;" onkeydown="if (event.keyCode == 13) { decrypt(); return false;}"> <input type="submit" value="解&nbsp;密" onclick="decrypt()" style="width: 58px;height: 34px;border-radius: 5px;background-color: white;border-style: solid;color: currentColor;"><div id="enc_error" style="display: inline-block;color: #d84527;margin-left: 10px"></div>
<script>
var onError = function(error) {
	document.getElementById("enc_error").innerHTML = "password error!"
};
function decrypt() {
var passwd = document.getElementById("enc_pwd_input").value;
console.log(passwd);
doDecrypt(passwd, onError);
}
</script>
</div>]]></content>
      
        <categories>
            
            <category> Summary </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Summary </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[HTML/css实现网页布局基础知识]]></title>
      <url>/2017/08/19/front-end/basic/cssAndHtml/html-css-layout/</url>
      <content type="html"><![CDATA[<h1 id="基础知识"><a href="#基础知识" class="headerlink" title="基础知识"></a>基础知识</h1><p>BFC: 块级格式化上下文，具体内容查看的前端基础知识一篇文章<br><a id="more"></a></p>
<h2 id="CSS盒模型"><a href="#CSS盒模型" class="headerlink" title="CSS盒模型"></a>CSS盒模型</h2><h2 id="相关属性"><a href="#相关属性" class="headerlink" title="相关属性"></a>相关属性</h2><p>参考<a href="http://www.cnblogs.com/coffeedeveloper/p/3145790.html#html" target="_blank" rel="external">对CSS中的Position、Float属性的一些深入探讨</a></p>
<h3 id="position"><a href="#position" class="headerlink" title="position"></a>position</h3><p>Position的属性值共有四个</p>
<ol>
<li>static<br>默认，属于普通流，元素在默认位置</li>
<li>relative<br>在默认位置下偏移，视觉上偏移，仍在普通流中，不改变display属性</li>
<li>absolute<ol>
<li>相对根节点偏移</li>
<li>根节点为其祖先节点中第一个position属性为relative或者absolute的节点，若无则为body</li>
<li>会脱离普通流，改变display属性(display:block)</li>
</ol>
</li>
<li>fixed<ol>
<li>特点基本与absolute相同</li>
<li>fixed其”根元素“固定为浏览器窗口<h3 id="float"><a href="#float" class="headerlink" title="float"></a>float</h3>为了实现文字环绕效果<br>特点：</li>
</ol>
</li>
<li>脱离普通流</li>
<li>display变为block</li>
<li>后一个元素会围绕着浮动元素，不会被覆盖</li>
<li>前一个元素不会受到任何影响</li>
<li>影响元素宽度：<blockquote>
<p>首先div的默认宽度是width:auto意思是自动调整宽度<br>无float,div的宽度会自动调整至最大化<br>有float,它会自动调整至最小化</p>
</blockquote>
</li>
</ol>
<p>属性： none、left、right</p>
<h3 id="display"><a href="#display" class="headerlink" title="display"></a>display</h3><p>具体参考<a href="https://segmentfault.com/a/1190000006047872#articleHeader11" target="_blank" rel="external">CSS display 属性详解</a></p>
<p>属性较多，列几个常用的</p>
<ol>
<li>none</li>
<li>block<br>设置元素为块状元素，如果不指定宽高，默认会继承父元素的宽度，并且独占一行，即使宽度有剩余也会独占一行，高度一般以子元素撑开的高度为准，当然也可以自己设置宽度和高度。</li>
<li>inline<br>它主要用来设置行内元素属性，设置了该属性之后设置高度、宽度都无效，同时text-align属性设置也无效，但是设置了line-height会让inline元素居中</li>
<li>inline-block<br>inline-block既具有block的宽高特性又具有inline的同行元素特性</li>
</ol>
<h3 id="z-index"><a href="#z-index" class="headerlink" title="z-index"></a>z-index</h3><p>属性设置元素的堆叠顺序,值大的在前，可为负值</p>
<h3 id="特性"><a href="#特性" class="headerlink" title="特性"></a>特性</h3><h4 id="包裹"><a href="#包裹" class="headerlink" title="包裹"></a>包裹</h4><ol>
<li>收缩：类似inline-block</li>
<li>坚挺</li>
<li>隔绝(即BFC)<h4 id="破坏"><a href="#破坏" class="headerlink" title="破坏"></a>破坏</h4></li>
<li>父元素高度塌陷<h3 id="清除浮动"><a href="#清除浮动" class="headerlink" title="清除浮动"></a>清除浮动</h3><h4 id="clear"><a href="#clear" class="headerlink" title="clear"></a>clear</h4></li>
<li>HTML水平元素底部走起</li>
<li>CSS after 伪类底部生成(IE6/IE7不能识别)<br>只能用在包含浮动元素的父级元素上<figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="selector-class">.clearfix</span><span class="selector-pseudo">:after</span>&#123;</div><div class="line">    <span class="attribute">clear</span>:both</div><div class="line">&#125;</div></pre></td></tr></table></figure>
</li>
</ol>
<p>IE6/IE7可使用：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">.clearfix&#123;</div><div class="line">    *zoom:1;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<h4 id="BFC-haslayout通用声明"><a href="#BFC-haslayout通用声明" class="headerlink" title="BFC/haslayout通用声明"></a>BFC/haslayout通用声明</h4><p>display:none<br>position:absolute/fixed/sticky</p>
<p>display:block/inline-block<br>position:absolute/fixed/<br>overflow:hidden/scroll</p>
<h1 id="基础技巧"><a href="#基础技巧" class="headerlink" title="基础技巧"></a>基础技巧</h1><h2 id="清除默认样式"><a href="#清除默认样式" class="headerlink" title="清除默认样式"></a>清除默认样式</h2><figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">&#123;</div><div class="line"><span class="attribute">margin</span>: <span class="number">0</span>;</div><div class="line"><span class="attribute">padding</span>:<span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="div居中"><a href="#div居中" class="headerlink" title="div居中"></a>div居中</h2><figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">margin</span>: 0 <span class="selector-tag">auto</span>,</div></pre></td></tr></table></figure>
<h2 id="float及其清除"><a href="#float及其清除" class="headerlink" title="float及其清除"></a>float及其清除</h2><figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">clear</span><span class="selector-pseudo">:both</span>;</div></pre></td></tr></table></figure>
<h2 id="定位实现布局"><a href="#定位实现布局" class="headerlink" title="定位实现布局"></a>定位实现布局</h2><p>绝对定位<br>相对定位<br>混合布局实现：<br><img src="http://img.mukewang.com/536707a800012d2005580536.jpg" alt="效果图"><br>代码：<br><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd"&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">xmlns</span>=<span class="string">"http://www.w3.org/1999/xhtml"</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"Content-Type"</span> <span class="attr">content</span>=<span class="string">"text/html; charset=utf-8"</span> /&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>混合布局编程挑战<span class="tag">&lt;/<span class="name">title</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">style</span> <span class="attr">type</span>=<span class="string">"text/css"</span>&gt;</span><span class="undefined"></span></div><div class="line"><span class="css"><span class="selector-tag">body</span>&#123; <span class="attribute">margin</span>:<span class="number">0</span>; <span class="attribute">padding</span>:<span class="number">0</span>; <span class="attribute">font-size</span>:<span class="number">30px</span>; <span class="attribute">color</span>:<span class="number">#fff</span>&#125;</span></div><div class="line"><span class="css"><span class="selector-class">.top</span>&#123;<span class="attribute">background-color</span>:<span class="number">#cccccc</span>;<span class="attribute">width</span>:<span class="number">100%</span>;<span class="attribute">height</span>:<span class="number">50px</span>;&#125;</span></div><div class="line"><span class="css"><span class="selector-class">.main</span>&#123;<span class="attribute">background-color</span>:red;</span></div><div class="line"><span class="css">    <span class="selector-tag">height</span><span class="selector-pseudo">:300px</span>;</span></div><div class="line"><span class="undefined">&#125;</span></div><div class="line"><span class="undefined"></span></div><div class="line"><span class="css"><span class="selector-class">.left</span>&#123;<span class="attribute">height</span>:<span class="number">300px</span>;<span class="attribute">background-color</span>:blue;<span class="attribute">width</span>:<span class="number">200px</span>;<span class="attribute">position</span>:absolute;<span class="attribute">top</span>:<span class="number">50px</span>;&#125;</span></div><div class="line"><span class="css"><span class="selector-class">.right</span>&#123;<span class="attribute">height</span>:<span class="number">100%</span>;<span class="attribute">background-color</span>:green;<span class="attribute">margin-left</span>:<span class="number">210px</span>;&#125;</span></div><div class="line"><span class="css"><span class="selector-class">.foot</span>&#123;<span class="attribute">background-color</span>:orange;&#125;</span></div><div class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"top"</span>&gt;</span>top<span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"main"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"right"</span>&gt;</span>right<span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"left"</span>&gt;</span>left<span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"foot"</span>&gt;</span>foot<span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></div></pre></td></tr></table></figure></p>
<h2 id="实现内容垂直居中"><a href="#实现内容垂直居中" class="headerlink" title="实现内容垂直居中"></a>实现内容垂直居中</h2><ol>
<li>内容为文本(包括Icon)<br>height与inline-height设为相同值<br>or<br>verticalAlign设置为middle</li>
</ol>
<p>注意: antd Icon的line-height必须重设以覆盖之前的(之前的为line-height: 1，可重设为line-height: unset)</p>
<ol>
<li>div垂直居中</li>
</ol>
<p><a href="http://blog.163.com/koala8211@126/blog/static/4115925320104410590431/" target="_blank" rel="external">float后如何居中</a><br>更简单的方法: 将div元素设置为inline-block</p>
]]></content>
      
        <categories>
            
            <category> Front-end </category>
            
            <category> Basic </category>
            
        </categories>
        
        
        <tags>
            
            <tag> CSS </tag>
            
            <tag> HTML </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[css基础知识]]></title>
      <url>/2017/08/17/front-end/basic/cssAndHtml/css/</url>
      <content type="html"><![CDATA[<p>一些css使用上的常用属性<br><a id="more"></a></p>
<h2 id="基础"><a href="#基础" class="headerlink" title="基础"></a>基础</h2><h3 id="盒模型"><a href="#盒模型" class="headerlink" title="盒模型"></a>盒模型</h3><p>W3C:box-sizing=width+border+padding+margin<br>IE: =width+margin<br>border相关：border-style(solid/dotted/dashed)、border-color、border-collapse(collapse)</p>
<h3 id="margin"><a href="#margin" class="headerlink" title="margin"></a>margin</h3><blockquote>
<p>外边距合并：垂直方向的margin合并max。<br>外边距塌陷：子元素的margin应用到了父元素身上.解决：1. 给父盒子设置边框 2. 父盒子设置overflow:hidden（会触发BFC）</p>
<h4 id="BFC与IFC"><a href="#BFC与IFC" class="headerlink" title="BFC与IFC"></a>BFC与IFC</h4><p>参考<a href="http://www.cnblogs.com/todayhappy/p/4608476.html" target="_blank" rel="external">BFC与IFC</a><br>BFC: 块级格式化上下文，应用于块级元素上的规则<br>1.如果给一个元素创建了一个BFC，就相当于创建了一个新的容器，容器内和容器外中的元素不会相互影响。外边的BFC规则，不会对容器里的BFC产生影响，而容器里面的BFC也不会对容器外的BFC产生影响，也就是相互隔绝，互不影响。<br>2.盒子的布局开始是从包含容器的顶部开始的。<br>3.同一个BFC中，在两个相邻的块级元素中，垂直margin会发生折叠<br>4.每个盒子的左边界都要紧靠包含容器的左边界（这也就解释了为什么块级元素都是单独成一行的，如果不单独成行，第二个盒子的左边界怎么紧靠包含容器的左边界）</p>
</blockquote>
<p>能产生新的BFC的属性：</p>
<blockquote>
<ol>
<li>float的值不为none。</li>
<li>overflow的值不为visible。</li>
<li>display的值为table-cell, table-caption, inline-block中的任何一个。</li>
<li>position的值不为relative和static。<br>IFC：内联格式化上下文，应用于内联元素上的规则</li>
<li>盒子是水平一个接一个的排列，水平的margin，内边距，边框是可以有的。</li>
<li>垂直方向的对齐，可能是底部对齐，顶部对齐，也可能是基线对齐（这个是默认的）；ps.这里的盒子应该是指的内联元素的盒子（span，strong等）和匿名内联盒子(只有文本，没有内联元素包含，自动创建的)，他们合称内联盒子，一个或者多个内联盒子组成一个行框，行框的宽度由包含块和出现的浮动决定的（为什么有浮动呢，后面解释）；行框的高度决定看我的这篇文章（css之line-height）；一定要分清楚，行框和内联盒子的关系，要不然我所说的你就不太可能理解</li>
<li>行框中的内联盒子的高度小于行框的高度时，内联盒子的垂直方向的对齐方式取决于vertical-align属性</li>
<li>当一个行框水平不能容纳内联盒子时，他们将会在垂直方向上产生多个行框，他们上下一个挨着一个，但是不会重叠</li>
<li>一般来说，行框的左边界紧挨着包含容器的左边界，行框的右边界紧挨着包含容器的右边界，（是两个边都紧挨着）。然而，浮动盒子可能存在于包含边框边界和行框边界之间（后面解释这种情况）；</li>
<li>多个内联盒子的宽度小于包含他们的行框时，他们在水平方向的分布取决于text-align属性（默认是left）</li>
</ol>
</blockquote>
<h3 id="CSS动画"><a href="#CSS动画" class="headerlink" title="CSS动画"></a>CSS动画</h3><p>transition<br>用法: </p>
<blockquote>
<p>transition: property duration timing-function delay;<br>transition-property: 指定CSS属性的name，transition效果(eg: width)<br>transition-duration: transition效果需要指定多少秒或毫秒才能完成(eg: 2s)<br>transition-timing-function: 指定transition效果的转速曲线(<a href="http://www.runoob.com/cssref/css3-pr-transition-timing-function.html" target="_blank" rel="external">用法</a>: transition-timing-function: linear|ease|ease-in|ease-out|ease-in-out|cubic-bezier(n,n,n,n);)<br>transition-delay: 定义transition效果开始的时候</p>
</blockquote>
<p>实例:<br><figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">font</span>: 18<span class="selector-tag">px</span> <span class="selector-tag">arial</span>,<span class="selector-tag">sans-serif</span>;</div><div class="line"><span class="selector-class">.card</span>&#123;</div><div class="line">  <span class="attribute">height</span>: <span class="number">200px</span>;</div><div class="line">  <span class="attribute">margin</span>: <span class="number">0px</span> <span class="number">10px</span> <span class="number">20px</span> <span class="number">0px</span>;</div><div class="line">  <span class="attribute">border-radius</span>: <span class="number">10px</span>;</div><div class="line">  <span class="attribute">padding</span>: <span class="number">20px</span>;</div><div class="line">  <span class="attribute">border</span>: <span class="number">1px</span> solid <span class="number">#E1E2E2</span>;</div><div class="line">  <span class="attribute">transition</span>: <span class="number">0.4s</span> ease;</div><div class="line">  <span class="attribute">-webkit-transition</span>: <span class="number">0.4s</span> ease;</div><div class="line">  <span class="attribute">-o-transition</span>: <span class="number">0.4s</span> ease;</div><div class="line">  <span class="attribute">-moz-transition</span>: <span class="number">0.4s</span> ease;</div><div class="line">  <span class="attribute">-ms-transition</span>: <span class="number">0.4s</span> ease;</div><div class="line">  &amp;:hover&#123;</div><div class="line">    <span class="selector-tag">border-color</span>: <span class="selector-id">#0086e8</span>;</div><div class="line">    <span class="selector-tag">box-shadow</span>: 2<span class="selector-tag">px</span> 2<span class="selector-tag">px</span> 2<span class="selector-tag">px</span> <span class="selector-id">#E6E4E4</span>;</div><div class="line">  &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<h3 id="box-shadow"><a href="#box-shadow" class="headerlink" title="box-shadow"></a>box-shadow</h3><figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">box-shadow</span>: <span class="selector-tag">h-shadow</span> <span class="selector-tag">v-shadow</span> <span class="selector-tag">blur</span> <span class="selector-tag">spread</span> <span class="selector-tag">color</span> <span class="selector-tag">inset</span>;</div><div class="line"><span class="comment">/*</span></div><div class="line"><span class="comment">  h-shadow: 水平阴影的位置。允许负值</span></div><div class="line"><span class="comment">  v-shadow: 必需的。垂直阴影的位置。允许负值</span></div><div class="line"><span class="comment">  blur: 可选。模糊距离(px)</span></div><div class="line"><span class="comment">  spread: 可选。阴影的大小(px)，模糊层在其四周(模糊层长度由blur决定)</span></div><div class="line"><span class="comment">  color: 可选。阴影的颜色</span></div><div class="line"><span class="comment">  inset: 可选。加上inset后阴影置于box内侧(左&amp;上，不加时阴影在右下)，不会占用其它空间</span></div><div class="line"><span class="comment">*/</span></div><div class="line"><span class="comment">/* example */</span></div><div class="line"><span class="selector-tag">box-shadow</span>: 10<span class="selector-tag">px</span> 10<span class="selector-tag">px</span> 5<span class="selector-tag">px</span> <span class="selector-id">#888888</span>;</div></pre></td></tr></table></figure>
<h3 id="font"><a href="#font" class="headerlink" title="font"></a>font</h3><p><a href="http://www.runoob.com/css/css-font.html" target="_blank" rel="external">CSS字体详解</a><br>font 简写属性在一个声明中设置所有字体属性。<br>用法:<br>font: font-style font-variant font-weight font-size/line-height font-family;(/是正常字符)<br>font-size和font-family的值是必需的。如果缺少了其他值，如果有默认值的话,默认值将被插入。</p>
<h3 id="tips"><a href="#tips" class="headerlink" title="tips"></a>tips</h3><ol>
<li><p>div数字or英文不换行,css设置:<br>word-wrap:break-word/break-all;（两种截断模式）</p>
</li>
<li><p>保持div宽高比<br><a href="https://my.oschina.net/u/1169894/blog/761037" target="_blank" rel="external">https://my.oschina.net/u/1169894/blog/761037</a> ， 亲测可行</p>
</li>
<li><p>less设置动态width： width : calc(~”100% - 25px”);</p>
</li>
</ol>
]]></content>
      
        
    </entry>
    
    <entry>
      <title><![CDATA[antd组件应用记录]]></title>
      <url>/2017/08/17/front-end/React/antd/antd/</url>
      <content type="html"><![CDATA[<p>主要是记录antd组件使用过程中遇到的问题，参考性不大。<br><a id="more"></a></p>
<h1 id="Antd组件应用"><a href="#Antd组件应用" class="headerlink" title="Antd组件应用"></a>Antd组件应用</h1><p>各个组件的实现及应用场景，如modal套form，(form的同步初始化)<br>做的项目实战用到最多的Antd组件就是Form、Table、Modal了<br>组件的API在<a href="https://ant.design/docs/react/introduce-cn" target="_blank" rel="external">antd官网</a>看到，这里主要讲些组件应用。</p>
<h2 id="Modal"><a href="#Modal" class="headerlink" title="Modal"></a>Modal</h2><p>modal对话框主要用于一些操作的确认或者一些配置项的设置，内部组件去完成相应逻辑，Modal主要做最后的确认或取消的回调，Modal的显示与否用visible控制，visible的改变不会引起Modal内部组件的重绘，要想每次打开Modal都重绘，可使用以下方法清空旧状态<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// 1. 在 Modal 关闭事件里调用 Form 的 resetFields，打开modal的时候使用componentWillReceiveProps进行重绘</span></div><div class="line"><span class="comment">// 2.给一个全新的key，每次render'出新modal</span></div><div class="line">&lt;Modal key=&#123;<span class="keyword">this</span>.state.newKey&#125; visible=&#123;<span class="keyword">this</span>.state.visible&#125; /&gt;</div><div class="line"><span class="comment">// 3.或者按条件加载</span></div><div class="line">&#123;<span class="keyword">this</span>.state.visible &amp;&amp; <span class="xml"><span class="tag">&lt;<span class="name">Modal</span> <span class="attr">visible</span>=<span class="string">&#123;true&#125;</span> /&gt;</span>&#125;</span></div></pre></td></tr></table></figure></p>
<h2 id="Form"><a href="#Form" class="headerlink" title="Form"></a>Form</h2><p>componentWillReceiveProps: 在这个生命周期函数内调用this.setState()方法不会增加一次新的render，但在此处调用Antd Form的setFieldsValue会进入死循环<br>现在我所使用到的Form组件都是嵌套在Modal中的，用于完成一些配置或者修改，Form的创建方式有几种，如下：</p>
<h3 id="Form组件创建"><a href="#Form组件创建" class="headerlink" title="Form组件创建"></a>Form组件创建</h3><p>语法：Form.create({ options })(组件（class/const）)</p>
<ol>
<li>经 Form.create() 包装过的组件会自带 this.props.form 属性，form提供一系列常用表单处理的API</li>
<li>使用 Form.create 处理后的表单具有自动收集数据并校验的功能，可以选择不使用 Form.create 并自行处理数据。<br>最后Form.create({ options })(相应组件)<h3 id="Form嵌套"><a href="#Form嵌套" class="headerlink" title="Form嵌套"></a>Form嵌套</h3>不允许，但可以通过向子组件传递此form，然后在子组件中创建FormItem，并使用form.getFieldDecorator声明Field实现嵌套<h3 id="Form表单赋值"><a href="#Form表单赋值" class="headerlink" title="Form表单赋值"></a>Form表单赋值</h3><h4 id="setFieldsValue方法"><a href="#setFieldsValue方法" class="headerlink" title="setFieldsValue方法"></a>setFieldsValue方法</h4>代码如下，源码分析: <blockquote>
<p>create提供一个高阶组件(组件1，组件2)生成一个组件1中含组件2form参数的组件，组件2已在此函数中被封装了add、submit、update等函数，其实就是对form组件（组件2）做一些简单处理<br>table columns上的一些操作通过switch column.key给其绑定事件及render一些简单的事件<br>setFieldsValue由form的父组件控制，通过saveref获得其控制权<br>form中子form弹出框也是form，handleOk中调用父form的setFieldsValue({refname:value})</p>
</blockquote>
</li>
</ol>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div></pre></td><td class="code"><pre><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">GridPanel</span> <span class="keyword">extends</span> <span class="title">React</span>.<span class="title">Component</span> </span>&#123;</div><div class="line">  <span class="keyword">static</span> create () &#123;</div><div class="line">    <span class="keyword">return</span> <span class="function">(<span class="params">WrappedComponent, FormWrappedComponent</span>) =&gt;</span> &#123;</div><div class="line">      <span class="comment">/* eslint-disable react/no-multi-comp */</span></div><div class="line">      <span class="class"><span class="keyword">class</span> <span class="title">PanelWrappedComponent</span> <span class="keyword">extends</span> <span class="title">React</span>.<span class="title">Component</span> </span>&#123;</div><div class="line">        setFormRef = <span class="function">(<span class="params">form</span>) =&gt;</span> &#123;</div><div class="line">          <span class="keyword">this</span>.form = form</div><div class="line">        &#125;</div><div class="line">        handleSubmit = <span class="function">(<span class="params">callback</span>) =&gt;</span> &#123;</div><div class="line">          <span class="keyword">this</span>.form.validateFieldsAndScroll(callback)</div><div class="line">        &#125;</div><div class="line">        addItem = <span class="function"><span class="params">()</span> =&gt;</span> &#123;</div><div class="line">          <span class="keyword">this</span>.form.resetFields()</div><div class="line">        &#125;</div><div class="line">        updateItem = <span class="function">(<span class="params">record</span>) =&gt;</span> &#123;</div><div class="line">          <span class="built_in">console</span>.log(<span class="keyword">this</span>.form)</div><div class="line">          <span class="keyword">this</span>.form.setFieldsValue(record)</div><div class="line">        &#125;</div><div class="line">        render () &#123;</div><div class="line">          <span class="keyword">const</span> form = <span class="xml"><span class="tag">&lt;<span class="name">FormWrappedComponent</span> <span class="attr">ref</span>=<span class="string">&#123;this.setFormRef&#125;</span> /&gt;</span></span></div><div class="line"><span class="xml">          return (</span></div><div class="line">            &lt;WrappedComponent &#123;...this.props&#125;</div><div class="line">              handleSubmit=&#123;this.handleSubmit&#125;</div><div class="line">              addItem=&#123;this.addItem&#125;</div><div class="line">              updateItem=&#123;this.updateItem&#125;</div><div class="line">              form=&#123;form&#125;</div><div class="line">            /&gt;</div><div class="line">          )</div><div class="line">        &#125;</div><div class="line">      &#125;</div><div class="line">      return PanelWrappedComponent</div><div class="line">    &#125;</div><div class="line">  &#125;</div><div class="line">  ...组件其他信息</div><div class="line">  使用：</div><div class="line">  handleOk = () =&gt; &#123;</div><div class="line">    const &#123; onSubmit, refName &#125; = this.props</div><div class="line">    onSubmit(&#123; [refName]: this.state.selectedRows &#125;)</div><div class="line">    this.setState(&#123; visible: false &#125;)</div><div class="line">  &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h4 id="mapPropsToFields方法"><a href="#mapPropsToFields方法" class="headerlink" title="mapPropsToFields方法"></a>mapPropsToFields方法</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">const</span> UserQueryLogForm = Form.create(&#123;</div><div class="line">  mapPropsToFields (props) &#123;</div><div class="line">    <span class="keyword">let</span> &#123; condition &#125; = props</div><div class="line">    <span class="keyword">if</span> (condition === <span class="literal">undefined</span>) &#123;</div><div class="line">      condition = &#123;&#125;</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">if</span> (condition.timeRange) &#123;</div><div class="line">      <span class="keyword">let</span> tmp</div><div class="line">      tmp = [moment(condition.timeRange[<span class="number">0</span>], <span class="string">'YYYY-MM-DD HH:mm:ss'</span>), moment(condition.timeRange[<span class="number">1</span>], <span class="string">'YYYY-MM-DD HH:mm:ss'</span>)]</div><div class="line">      condition.timeRange = tmp</div><div class="line">    &#125; <span class="keyword">else</span> &#123;</div><div class="line">      condition.timeRange = getInitialTimeRange()</div><div class="line">    &#125;</div><div class="line">    <span class="comment">// 需map的form字段（Fields）</span></div><div class="line">    <span class="keyword">const</span> arr = [<span class="string">'ip'</span>, <span class="string">'mac'</span>, <span class="string">'timeRange'</span>, <span class="string">'user'</span>, <span class="string">'location'</span>, <span class="string">'tool'</span>, <span class="string">'alarmLevel'</span>, <span class="string">'alarmType'</span>, <span class="string">'display'</span>]</div><div class="line">    <span class="keyword">let</span> fiieldsValue = &#123;&#125;</div><div class="line">    <span class="keyword">for</span> (<span class="keyword">let</span> str <span class="keyword">of</span> arr) &#123;</div><div class="line">      fiieldsValue[str] = &#123; <span class="attr">value</span>: condition[str] &#125;</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">return</span> fiieldsValue</div><div class="line">  &#125;,</div><div class="line">&#125;)(组件信息)</div></pre></td></tr></table></figure>
<h3 id="动态添加删除表单"><a href="#动态添加删除表单" class="headerlink" title="动态添加删除表单"></a>动态添加删除表单</h3><p>示例如下<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div><div class="line">126</div><div class="line">127</div><div class="line">128</div><div class="line">129</div><div class="line">130</div><div class="line">131</div><div class="line">132</div><div class="line">133</div><div class="line">134</div><div class="line">135</div><div class="line">136</div><div class="line">137</div><div class="line">138</div><div class="line">139</div><div class="line">140</div><div class="line">141</div><div class="line">142</div><div class="line">143</div><div class="line">144</div><div class="line">145</div><div class="line">146</div><div class="line">147</div><div class="line">148</div><div class="line">149</div><div class="line">150</div><div class="line">151</div><div class="line">152</div><div class="line">153</div><div class="line">154</div><div class="line">155</div><div class="line">156</div><div class="line">157</div><div class="line">158</div><div class="line">159</div><div class="line">160</div><div class="line">161</div><div class="line">162</div><div class="line">163</div><div class="line">164</div><div class="line">165</div><div class="line">166</div><div class="line">167</div><div class="line">168</div><div class="line">169</div><div class="line">170</div><div class="line">171</div><div class="line">172</div><div class="line">173</div><div class="line">174</div><div class="line">175</div><div class="line">176</div><div class="line">177</div><div class="line">178</div><div class="line">179</div><div class="line">180</div><div class="line">181</div><div class="line">182</div><div class="line">183</div><div class="line">184</div><div class="line">185</div><div class="line">186</div><div class="line">187</div><div class="line">188</div><div class="line">189</div><div class="line">190</div><div class="line">191</div><div class="line">192</div><div class="line">193</div><div class="line">194</div><div class="line">195</div><div class="line">196</div><div class="line">197</div><div class="line">198</div><div class="line">199</div><div class="line">200</div><div class="line">201</div><div class="line">202</div><div class="line">203</div><div class="line">204</div><div class="line">205</div><div class="line">206</div><div class="line">207</div><div class="line">208</div><div class="line">209</div><div class="line">210</div><div class="line">211</div><div class="line">212</div><div class="line">213</div><div class="line">214</div><div class="line">215</div><div class="line">216</div><div class="line">217</div><div class="line">218</div><div class="line">219</div><div class="line">220</div><div class="line">221</div><div class="line">222</div><div class="line">223</div><div class="line">224</div><div class="line">225</div><div class="line">226</div><div class="line">227</div><div class="line">228</div><div class="line">229</div><div class="line">230</div><div class="line">231</div><div class="line">232</div><div class="line">233</div><div class="line">234</div><div class="line">235</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> React <span class="keyword">from</span> <span class="string">'react'</span></div><div class="line"><span class="keyword">import</span> &#123; Modal, Radio, Input, Form, Icon, Button, message &#125; <span class="keyword">from</span> <span class="string">'antd'</span></div><div class="line"><span class="keyword">import</span> PropTypes <span class="keyword">from</span> <span class="string">'prop-types'</span></div><div class="line"><span class="keyword">import</span> &#123; remove &#125; <span class="keyword">from</span> <span class="string">'../../../services/crud'</span></div><div class="line"><span class="keyword">import</span> &#123; request &#125; <span class="keyword">from</span> <span class="string">'../../../utils'</span></div><div class="line"><span class="keyword">const</span> RadioGroup = Radio.Group</div><div class="line"><span class="keyword">const</span> FormItem = Form.Item</div><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">ConfirmFormModal</span> <span class="keyword">extends</span> <span class="title">React</span>.<span class="title">Component</span> </span>&#123;</div><div class="line">  <span class="keyword">constructor</span> (props) &#123;</div><div class="line">    <span class="keyword">super</span>(props)</div><div class="line">    <span class="keyword">this</span>.state = &#123;</div><div class="line">      keyCount: <span class="number">0</span>,</div><div class="line">      keys: [<span class="number">0</span>],</div><div class="line">      visible: <span class="literal">false</span>,</div><div class="line">    &#125;</div><div class="line">  &#125;</div><div class="line">  showModal = <span class="function"><span class="params">()</span> =&gt;</span> &#123;</div><div class="line">    <span class="keyword">const</span> &#123; selectedAll, info, selectedRowKeys, ModalType &#125; = <span class="keyword">this</span>.props</div><div class="line">    <span class="keyword">if</span> (selectedRowKeys.length &lt; <span class="number">1</span>) &#123;</div><div class="line">      message.warning(<span class="string">'请选择数据'</span>)</div><div class="line">      <span class="keyword">return</span></div><div class="line">    &#125;</div><div class="line">    <span class="keyword">if</span> (selectedAll || info.input) &#123;</div><div class="line">      <span class="keyword">this</span>.setState(&#123; <span class="attr">visible</span>: <span class="literal">true</span> &#125;)</div><div class="line">      <span class="keyword">return</span></div><div class="line">    &#125;</div><div class="line">    Modal.confirm(&#123;</div><div class="line">      title: <span class="string">`确认<span class="subst">$&#123;info.buttonText&#125;</span>？`</span>,</div><div class="line">      onOk: <span class="function"><span class="params">()</span> =&gt;</span> &#123;</div><div class="line">        <span class="keyword">const</span> values = &#123; <span class="attr">select</span>: <span class="string">'current'</span> &#125;</div><div class="line">        <span class="keyword">switch</span> (ModalType) &#123;</div><div class="line">          <span class="keyword">case</span> <span class="string">'export'</span>:</div><div class="line">            <span class="keyword">this</span>.exportItem(values)</div><div class="line">            <span class="keyword">break</span></div><div class="line">          <span class="keyword">case</span> <span class="string">'delete'</span>:</div><div class="line">            <span class="keyword">this</span>.deleteItem(values)</div><div class="line">            <span class="keyword">break</span></div><div class="line">          <span class="keyword">case</span> <span class="string">'send'</span>:</div><div class="line">            <span class="keyword">this</span>.sendItem(values)</div><div class="line">            <span class="keyword">break</span></div><div class="line">          <span class="keyword">default</span>:</div><div class="line">            message.info(<span class="string">'操作失败'</span>)</div><div class="line">        &#125;</div><div class="line">      &#125;,</div><div class="line">      onCancel: <span class="function"><span class="params">()</span> =&gt;</span> &#123;</div><div class="line">      &#125;,</div><div class="line">    &#125;)</div><div class="line">  &#125;</div><div class="line">  hideModal = <span class="function"><span class="params">()</span> =&gt;</span> &#123;</div><div class="line">    <span class="keyword">this</span>.setState(&#123;</div><div class="line">      visible: <span class="literal">false</span>,</div><div class="line">    &#125;)</div><div class="line">  &#125;</div><div class="line">  handleCancel = <span class="function"><span class="params">()</span> =&gt;</span> &#123;</div><div class="line">    <span class="keyword">this</span>.hideModal()</div><div class="line">  &#125;</div><div class="line">  add = <span class="function"><span class="params">()</span> =&gt;</span> &#123;</div><div class="line">    <span class="keyword">let</span> &#123; keys, keyCount &#125; = <span class="keyword">this</span>.state</div><div class="line">    <span class="keyword">if</span> (keys.length &gt;= <span class="number">100</span>) &#123;</div><div class="line">      message.error(<span class="string">'超过最大发送邮箱数'</span>)</div><div class="line">      <span class="keyword">return</span></div><div class="line">    &#125;</div><div class="line">    keyCount++</div><div class="line">    keys = keys.concat(keyCount)</div><div class="line">    <span class="keyword">this</span>.setState(&#123; keys, keyCount &#125;)</div><div class="line">  &#125;</div><div class="line">  remove = <span class="function">(<span class="params">k</span>) =&gt;</span> &#123;</div><div class="line">    <span class="keyword">const</span> &#123; keys &#125; = <span class="keyword">this</span>.state</div><div class="line">    <span class="keyword">if</span> (keys.length === <span class="number">1</span>) &#123;</div><div class="line">      <span class="keyword">return</span></div><div class="line">    &#125;</div><div class="line">    <span class="keyword">this</span>.setState(&#123;</div><div class="line">      keys: keys.filter(<span class="function"><span class="params">key</span> =&gt;</span> key !== k),</div><div class="line">    &#125;)</div><div class="line">  &#125;</div><div class="line">  deleteItem = <span class="function">(<span class="params">values</span>) =&gt;</span> &#123;</div><div class="line">    <span class="built_in">console</span>.log(<span class="string">'delete'</span>, values.select)</div><div class="line">    <span class="keyword">const</span> &#123; selectedRowKeys, api &#125; = <span class="keyword">this</span>.props</div><div class="line">    remove(api.delete, &#123; <span class="attr">ids</span>: [...selectedRowKeys], <span class="attr">type</span>: values.select &#125;).then(<span class="function"><span class="params">()</span> =&gt;</span> &#123;</div><div class="line">      <span class="keyword">this</span>.setState(&#123; <span class="attr">loading</span>: <span class="literal">false</span>, <span class="attr">selectedRowKeys</span>: [] &#125;, () =&gt; &#123;</div><div class="line">        message.info(<span class="string">'删除成功'</span>)</div><div class="line">        <span class="keyword">this</span>.props.handleModalConfirm()</div><div class="line">      &#125;)</div><div class="line">    &#125;)</div><div class="line">  &#125;</div><div class="line">  exportItem = <span class="function">(<span class="params">values</span>) =&gt;</span> &#123;</div><div class="line">    <span class="built_in">console</span>.log(<span class="string">'export'</span>, values.select)</div><div class="line">    <span class="keyword">let</span> &#123; selectedRowKeys, api &#125; = <span class="keyword">this</span>.props</div><div class="line">    request(&#123;</div><div class="line">      url: api.export,</div><div class="line">      method: <span class="string">'post'</span>,</div><div class="line">      data: &#123; <span class="attr">ids</span>: [...selectedRowKeys], <span class="attr">selection</span>: values.select &#125;,</div><div class="line">    &#125;).then(<span class="function"><span class="params">()</span> =&gt;</span> &#123;</div><div class="line">      <span class="keyword">this</span>.setState(&#123; <span class="attr">loading</span>: <span class="literal">false</span>, <span class="attr">selectedRowKeys</span>: [] &#125;, () =&gt; &#123;</div><div class="line">        message.info(<span class="string">'导出成功'</span>)</div><div class="line">        <span class="keyword">this</span>.props.handleModalConfirm()</div><div class="line">      &#125;)</div><div class="line">    &#125;)</div><div class="line">  &#125;</div><div class="line">  sendItem = <span class="function">(<span class="params">values</span>) =&gt;</span> &#123;</div><div class="line">    <span class="built_in">console</span>.log(<span class="string">'send'</span>, values.select)</div><div class="line">    <span class="keyword">const</span> &#123; selectedRowKeys, api &#125; = <span class="keyword">this</span>.props</div><div class="line">    request(&#123;</div><div class="line">      url: api.send,</div><div class="line">      method: <span class="string">'post'</span>,</div><div class="line">      data: &#123; <span class="attr">ids</span>: [...selectedRowKeys],</div><div class="line">        type: values.select,</div><div class="line">      &#125;,</div><div class="line">    &#125;).then(<span class="function"><span class="params">()</span> =&gt;</span> &#123;</div><div class="line">      <span class="keyword">this</span>.setState(&#123; <span class="attr">loading</span>: <span class="literal">false</span>, <span class="attr">selectedRowKeys</span>: [] &#125;, () =&gt; &#123;</div><div class="line">        message.info(<span class="string">'发送成功'</span>)</div><div class="line">        <span class="keyword">this</span>.props.handleModalConfirm()</div><div class="line">      &#125;)</div><div class="line">    &#125;)</div><div class="line">  &#125;</div><div class="line">  handleOk = <span class="function"><span class="params">()</span> =&gt;</span> &#123;</div><div class="line">    <span class="keyword">const</span> &#123; ModalType, form &#125; = <span class="keyword">this</span>.props</div><div class="line">    form.validateFieldsAndScroll(<span class="function">(<span class="params">err, values</span>) =&gt;</span> &#123;</div><div class="line">      <span class="keyword">if</span> (err) &#123;</div><div class="line">        <span class="keyword">return</span></div><div class="line">      &#125;</div><div class="line">      <span class="built_in">console</span>.log(<span class="string">'收集数据：'</span>)</div><div class="line">      <span class="built_in">console</span>.log(values)</div><div class="line">      <span class="comment">// 处理数据</span></div><div class="line">      <span class="keyword">switch</span> (ModalType) &#123;</div><div class="line">        <span class="keyword">case</span> <span class="string">'export'</span>:</div><div class="line">          <span class="keyword">this</span>.exportItem(values)</div><div class="line">          <span class="keyword">break</span></div><div class="line">        <span class="keyword">case</span> <span class="string">'delete'</span>:</div><div class="line">          <span class="keyword">this</span>.deleteItem(values)</div><div class="line">          <span class="keyword">break</span></div><div class="line">        <span class="keyword">case</span> <span class="string">'send'</span>:</div><div class="line">          <span class="keyword">this</span>.sendItem(values)</div><div class="line">          <span class="keyword">break</span></div><div class="line">        <span class="keyword">default</span>:</div><div class="line">          message.info(<span class="string">'操作失败'</span>)</div><div class="line">      &#125;</div><div class="line">      <span class="keyword">this</span>.setState(&#123;</div><div class="line">        visible: <span class="literal">false</span>,</div><div class="line">      &#125;)</div><div class="line">    &#125;)</div><div class="line">  &#125;</div><div class="line">  render = <span class="function"><span class="params">()</span> =&gt;</span> &#123;</div><div class="line">    <span class="keyword">const</span> &#123; info, form &#125; = <span class="keyword">this</span>.props</div><div class="line">    <span class="keyword">const</span> &#123; buttonText, buttonIconType &#125; = info</div><div class="line">    <span class="keyword">const</span> &#123; visible &#125; = <span class="keyword">this</span>.state</div><div class="line">    <span class="keyword">const</span> &#123; getFieldDecorator &#125; = form</div><div class="line">    <span class="keyword">const</span> &#123; keys &#125; = <span class="keyword">this</span>.state</div><div class="line">    <span class="keyword">const</span> radioStyle = &#123;</div><div class="line">      display: <span class="string">'block'</span>,</div><div class="line">      height: <span class="string">'30px'</span>,</div><div class="line">      lineHeight: <span class="string">'30px'</span>,</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">const</span> formInputItems = info.input &amp;&amp; keys.map(<span class="function">(<span class="params">k, index</span>) =&gt;</span> &#123;</div><div class="line">      <span class="keyword">return</span> (</div><div class="line">        &lt;FormItem</div><div class="line">          label=&#123;index === <span class="number">0</span> ? <span class="string">'请输入收件邮箱，最多100个'</span> : <span class="string">''</span>&#125;</div><div class="line">          key=&#123;k&#125;</div><div class="line">        &gt;</div><div class="line">          &#123;getFieldDecorator((<span class="string">`Emails-<span class="subst">$&#123;k&#125;</span>`</span>), &#123;</div><div class="line">            rules: [&#123;</div><div class="line">              type: <span class="string">'email'</span>,</div><div class="line">              message: <span class="string">'请输入正确的邮箱'</span>,</div><div class="line">              required: <span class="literal">true</span> &#125;],</div><div class="line">          &#125;)(</div><div class="line">            &lt;Input placeholder=<span class="string">"请输入收件人邮箱"</span> style=&#123;&#123; <span class="attr">width</span>: <span class="string">'80%'</span>, <span class="attr">marginRight</span>: <span class="number">8</span> &#125;&#125; /&gt;</div><div class="line">            )&#125;</div><div class="line">          &#123;keys.length &gt; <span class="number">1</span> ? (</div><div class="line">            &lt;Icon</div><div class="line">              className=<span class="string">"dynamic-delete-button"</span></div><div class="line">              type=<span class="string">"minus-circle-o"</span></div><div class="line">              disabled=&#123;keys.length === <span class="number">1</span>&#125;</div><div class="line">              onClick=&#123;() =&gt; <span class="keyword">this</span>.remove(k)&#125;</div><div class="line">            /&gt;</div><div class="line">          ) : <span class="literal">null</span>&#125;</div><div class="line">        &lt;<span class="regexp">/FormItem&gt;</span></div><div class="line"><span class="regexp">      )</span></div><div class="line"><span class="regexp">    &#125;)</span></div><div class="line"><span class="regexp">    return (</span></div><div class="line"><span class="regexp">      &lt;div&gt;</span></div><div class="line"><span class="regexp">        &lt;Button onClick=&#123;this.showModal&#125; type="ghost" style=&#123;&#123; marginRight: '10px', float: 'left' &#125;&#125; &gt;&lt;Icon type=&#123;buttonIconType&#125; /</span>&gt;&#123;buttonText&#125;&lt;<span class="regexp">/Button&gt;</span></div><div class="line"><span class="regexp">        &lt;Modal</span></div><div class="line"><span class="regexp">          title=&#123;`确认$&#123;buttonText&#125;信息`&#125;</span></div><div class="line"><span class="regexp">          visible=&#123;visible&#125;</span></div><div class="line"><span class="regexp">          onOk=&#123;this.handleOk&#125;</span></div><div class="line"><span class="regexp">          onCancel=&#123;this.handleCancel&#125;</span></div><div class="line"><span class="regexp">          wrapClassName=&#123;info.input ? 'vertical-center-modal' : ''&#125;</span></div><div class="line"><span class="regexp">          okText=&#123;`确认$&#123;buttonText&#125;`&#125;</span></div><div class="line"><span class="regexp">          cancelText=&#123;'取消'&#125;</span></div><div class="line"><span class="regexp">          maskClosable=&#123;false&#125;</span></div><div class="line"><span class="regexp">          width=&#123;info.input ? 400 : 320&#125;</span></div><div class="line"><span class="regexp">        &gt;</span></div><div class="line"><span class="regexp">        &#123;</span></div><div class="line"><span class="regexp">          &lt;Form&gt;</span></div><div class="line"><span class="regexp">          &#123;&lt;FormItem label=&#123;'请选择'&#125;&gt;</span></div><div class="line"><span class="regexp">            &#123;getFieldDecorator('select', &#123;</span></div><div class="line"><span class="regexp">              rules: [&#123; required: true &#125;],</span></div><div class="line"><span class="regexp">              initialValue: info.initialValue,</span></div><div class="line"><span class="regexp">            &#125;)(</span></div><div class="line"><span class="regexp">              &lt;RadioGroup&gt;</span></div><div class="line"><span class="regexp">                &lt;Radio style=&#123;radioStyle&#125; value=&#123;'all'&#125;&gt;&#123;`$&#123;buttonText&#125;所有项目`&#125;&lt;/</span>Radio&gt;</div><div class="line">                &lt;Radio style=&#123;radioStyle&#125; value=&#123;<span class="string">'current'</span>&#125;&gt;&#123;<span class="string">`<span class="subst">$&#123;buttonText&#125;</span>当前项目`</span>&#125;&lt;<span class="regexp">/Radio&gt;</span></div><div class="line"><span class="regexp">              &lt;/</span>RadioGroup&gt;</div><div class="line">            )&#125;</div><div class="line">          &lt;<span class="regexp">/FormItem&gt;&#125;</span></div><div class="line"><span class="regexp">          &#123;&#123;formInputItems&#125;&#125;</span></div><div class="line"><span class="regexp">          &#123;info.input &amp;&amp; &lt;FormItem&gt;</span></div><div class="line"><span class="regexp">            &lt;Button type="dashed" onClick=&#123;this.add&#125; style=&#123;&#123; width: '80%' &#125;&#125;&gt;</span></div><div class="line"><span class="regexp">              &lt;Icon type="plus" /</span>&gt; Add Email</div><div class="line">            &lt;<span class="regexp">/Button&gt;</span></div><div class="line"><span class="regexp">          &lt;/</span>FormItem&gt;</div><div class="line">        &#125;</div><div class="line">          &lt;<span class="regexp">/Form&gt;&#125;</span></div><div class="line"><span class="regexp">        &lt;/</span>Modal&gt;</div><div class="line">      &lt;<span class="regexp">/div&gt;</span></div><div class="line"><span class="regexp"></span></div><div class="line"><span class="regexp">    )</span></div><div class="line"><span class="regexp">  &#125;</span></div><div class="line"><span class="regexp">&#125;</span></div><div class="line"><span class="regexp">ConfirmFormModal.propTypes = &#123;</span></div><div class="line"><span class="regexp">  info: PropTypes.object,</span></div><div class="line"><span class="regexp">  form: PropTypes.any,</span></div><div class="line"><span class="regexp">  selectedAll: PropTypes.bool,</span></div><div class="line"><span class="regexp">  handleModalOk: PropTypes.func,</span></div><div class="line"><span class="regexp">  handleModalCancle: PropTypes.func,</span></div><div class="line"><span class="regexp">  onSelectChange: PropTypes.func,</span></div><div class="line"><span class="regexp">  selectedRowKeys: PropTypes.array,</span></div><div class="line"><span class="regexp">  api: PropTypes.object,</span></div><div class="line"><span class="regexp">  ModalType: PropTypes.string,</span></div><div class="line"><span class="regexp">  handleModalConfirm: PropTypes.func,</span></div><div class="line"><span class="regexp">&#125;</span></div><div class="line"><span class="regexp"></span></div><div class="line"><span class="regexp">const ConfirmFormModalWrapper = Form.create()(ConfirmFormModal)</span></div><div class="line"><span class="regexp"></span></div><div class="line"><span class="regexp">export default ConfirmFormModalWrapper</span></div></pre></td></tr></table></figure></p>
<h3 id="常用API"><a href="#常用API" class="headerlink" title="常用API"></a>常用API</h3><ol>
<li>getFieldDecorator<br>使用：getFieldDecorator(id, options)(component)，每个FormItem中最好一个<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// 示例</span></div><div class="line">&lt;FormItem &#123;...formItemLayout&#125; label=<span class="string">"日期范围"</span>&gt;</div><div class="line">    &#123;getFieldDecorator(<span class="string">'template'</span>, &#123;</div><div class="line">    initialValue: <span class="string">'today'</span>,</div><div class="line">    &#125;)(</div><div class="line">    &lt;RadioGroup disabled=&#123;<span class="keyword">this</span>.state.disabled&#125;&gt;</div><div class="line">        &lt;Radio value=<span class="string">"today"</span>&gt;当前日&lt;<span class="regexp">/Radio&gt;</span></div><div class="line"><span class="regexp">        &lt;Radio value="branch"&gt;指定日期&lt;/</span>Radio&gt;</div><div class="line">    &lt;<span class="regexp">/RadioGroup&gt;</span></div><div class="line"><span class="regexp">    )&#125;</span></div><div class="line"><span class="regexp">&lt;/</span>FormItem&gt;</div><div class="line"></div><div class="line"><span class="comment">// 示例2，使用formConfig简化代码</span></div><div class="line">  <span class="keyword">let</span> formConfig = [</div><div class="line">    &#123;</div><div class="line">      label: <span class="string">'sad'</span>,</div><div class="line">      index: <span class="string">'test'</span>,</div><div class="line">      component: <span class="xml"><span class="tag">&lt;<span class="name">Checkbox</span>&gt;</span>sda<span class="tag">&lt;/<span class="name">Checkbox</span>&gt;</span></span>,</div><div class="line">      key: <span class="string">'test'</span>,</div><div class="line">      options: &#123;</div><div class="line">        valuePropName: <span class="string">'checked'</span>,</div><div class="line">        initialValue: <span class="literal">false</span>,</div><div class="line">      &#125;,</div><div class="line">    &#125;,</div><div class="line">    <span class="comment">// ...其他表单项</span></div><div class="line">  ]</div><div class="line"><span class="comment">// 使用:</span></div><div class="line">    &lt;Form&gt;</div><div class="line">      &lt;ConditionFormHeader</div><div class="line">        form=&#123;form&#125;</div><div class="line">        IpMacType=<span class="string">"oneIp"</span></div><div class="line">      /&gt;</div><div class="line">      &#123;formConfig.map(<span class="function">(<span class="params">pane, i</span>) =&gt;</span> &#123;</div><div class="line">        <span class="keyword">const</span> &#123; index, options, component, layout, ...itemProps &#125; = pane</div><div class="line">        <span class="keyword">return</span> (</div><div class="line">          &lt;FormItem &#123;...formItemLayout&#125; &#123;...layout&#125; &#123;...itemProps&#125; className=&#123;i === formConfig.length - <span class="number">1</span> ? <span class="string">'collection-create-form_last-form-item'</span> : <span class="string">''</span>&#125;&gt;</div><div class="line">            &#123;form.getFieldDecorator(index, options)(component)&#125;</div><div class="line">          &lt;<span class="regexp">/FormItem&gt;</span></div><div class="line"><span class="regexp">        )</span></div><div class="line"><span class="regexp">      &#125;)&#125;</span></div><div class="line"><span class="regexp">    &lt;/</span>Form&gt;</div></pre></td></tr></table></figure>
</li>
</ol>
<p>tips: </p>
<blockquote>
<p>使用valuePropName: ‘checked’，可指定mapPropsToFields和setFieldsValue时改变的变量名</p>
</blockquote>
<ol>
<li>getFieldsValue<br>获取表单项值，按index查找</li>
<li>validateFieldsAndScroll<br>使用：form.validateFieldsAndScroll((err,val)=&gt;{…})<br>校验并处理表单数据,获取form数据,与 validateFields 相似，但校验完后，如果校验不通过的菜单域不在可见范围内，则自动滚动进可见范围</li>
<li>resetFields<br>重置表单项为默认值(无默认值则为空)</li>
</ol>
<h3 id="Form表单初始化"><a href="#Form表单初始化" class="headerlink" title="Form表单初始化"></a>Form表单初始化</h3><h4 id="方法："><a href="#方法：" class="headerlink" title="方法："></a>方法：</h4><p>具体参考前面Form表单赋值</p>
<ol>
<li>mapPropsToFields</li>
<li><p>在上层组件setFieldsValue</p>
<h4 id="tips"><a href="#tips" class="headerlink" title="tips"></a>tips</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div></pre></td><td class="code"><pre><div class="line"><span class="string">``</span><span class="string">`</span></div><div class="line"><span class="string">注意事项：</span></div><div class="line"><span class="string">&gt; 1. form表单首次初始化可直接在componentDidMount中调用</span></div><div class="line"><span class="string">2. 不可以在componentWillReceiveProps中调用setFieldsValue，会引起死循环</span></div><div class="line"><span class="string">3. 多次使用不同数据进行初始化：每次重新载入一个新的Form，具体方法看Modal（新key or 按条件加载）</span></div><div class="line"><span class="string">4. 未尝试（？）直接在render中利用initialValue进行初始化</span></div><div class="line"><span class="string">4. (待实践)可以选择使用dva提供的mapPropsToFields方法，通过使用 `</span>onFieldsChange<span class="string">` 与 `</span>mapPropsToFields<span class="string">`，可以把表单的数据存储到上层组件或者 [Redux](https://github.com/reactjs/redux)、[dva](https://github.com/dvajs/dva) 中</span></div><div class="line"><span class="string"></span></div><div class="line"><span class="string">### Form嵌套使用</span></div><div class="line"><span class="string">1. FormItem中可嵌套其他组件，最好自行定义出组件之后直接索引使用，组件内定义好在handleOk中调用回调函数传入组件值，然后在Form页设置好handleSubmit时setFieldsValue即可</span></div><div class="line"><span class="string">`</span><span class="string">``</span>javascript</div><div class="line"><span class="comment">// 存在问题：组件返回多个值的情况如何setFields？？？数组？对象？</span></div><div class="line"><span class="keyword">const</span> timeObjectProps = &#123;</div><div class="line">...modalOpts,</div><div class="line">modalTitle: <span class="string">'时间对象列表'</span>,</div><div class="line">content: TimeObject,</div><div class="line">onSubmit: setFieldsValue,<span class="comment">// 来自form</span></div><div class="line">refName: timeObject,</div><div class="line">&#125;</div><div class="line"><span class="comment">// 定义：</span></div><div class="line">&#123;</div><div class="line">    label: <span class="string">'时间对象'</span>,</div><div class="line">    index: timeObject,</div><div class="line">    component: <span class="xml"><span class="tag">&lt;<span class="name">CollectionsObject</span> &#123;<span class="attr">...timeObjectProps</span>&#125; /&gt;</span>,</span></div><div class="line"><span class="xml">    key: 'timeObject',</span></div><div class="line"><span class="xml">&#125;,</span></div><div class="line"><span class="xml">// 回调：</span></div><div class="line"><span class="xml">handleOk = () =&gt; &#123;</span></div><div class="line"><span class="xml">const &#123; onSubmit, refName &#125; = this.props</span></div><div class="line"><span class="xml">onSubmit(&#123; [refName]: this.state.selectedRows &#125;)</span></div><div class="line"><span class="xml">this.setState(&#123; visible: false &#125;)</span></div><div class="line"><span class="xml">&#125;</span></div></pre></td></tr></table></figure>
</li>
<li><p>未解决，(???FormItem是否可嵌套？嵌套用法)</p>
<h2 id="Table"><a href="#Table" class="headerlink" title="Table"></a>Table</h2><h3 id="配置项"><a href="#配置项" class="headerlink" title="配置项"></a>配置项</h3><p>参考<a href="https://ant.design/components/table-cn/#components-table-demo-head" target="_blank" rel="external">Antd<br>官方文档-Table</a></p>
<h3 id="收集选择的Table表项"><a href="#收集选择的Table表项" class="headerlink" title="收集选择的Table表项"></a>收集选择的Table表项</h3><p>配置rowSelection</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">const</span> rowSelection = &#123;</div><div class="line">    selectedRowKeys,</div><div class="line">    onChange: <span class="keyword">this</span>.onSelectChange,</div><div class="line">&#125;</div><div class="line">&lt;Table</div><div class="line">    ref=<span class="string">"DataTable"</span></div><div class="line">    rowSelection=&#123;rowSelection&#125;</div><div class="line">/&gt;</div><div class="line"><span class="comment">// 在handler中处理</span></div><div class="line">  onSelectChange = <span class="function">(<span class="params">selectedRowKeys, selectedRows</span>) =&gt;</span> &#123;</div><div class="line">    <span class="comment">// ...</span></div><div class="line">    <span class="comment">// selectedRowKeys为选中的key数组</span></div><div class="line">    <span class="comment">// selectedRows</span></div><div class="line">  &#125;</div></pre></td></tr></table></figure>
</li>
</ol>
<h3 id="实现排序"><a href="#实现排序" class="headerlink" title="实现排序"></a>实现排序</h3><p>参考antd官方文档<a href="https://ant.design/components/table-cn/#components-table-demo-ajax" target="_blank" rel="external">Table-远程加载数据</a>可实现后台筛选排序前端展示<br>实现步骤：</p>
<ol>
<li>columns的sorter置为true</li>
<li>在Table的onChange回调中进行处理<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// 示例代码</span></div><div class="line">  <span class="keyword">const</span> columns = [</div><div class="line">    &#123;</div><div class="line">      title: <span class="string">'时间'</span>,</div><div class="line">      dataIndex: <span class="string">'tstamp'</span>,</div><div class="line">      key: <span class="string">'tstamp'</span>,</div><div class="line">      sorter: <span class="literal">true</span>,</div><div class="line">      width: <span class="number">150</span>,</div><div class="line">    &#125;,</div><div class="line">    <span class="comment">// ...其他表项</span></div><div class="line">  &#125;</div><div class="line">  <span class="comment">// 声明回调</span></div><div class="line">   &lt;SelectTable</div><div class="line">      ref=<span class="string">"DataTable"</span></div><div class="line">      onChange=&#123;<span class="keyword">this</span>.handleTableChange&#125;</div><div class="line">      loading=&#123;loading&#125;</div><div class="line">      columns=&#123;columns&#125;</div><div class="line">    /&gt;</div><div class="line">  <span class="comment">// 处理</span></div><div class="line">  handleTableChange = <span class="function">(<span class="params">pagination, filters, sorter</span>) =&gt;</span> &#123;</div><div class="line">    <span class="keyword">const</span> pager = &#123; ...this.state.pagination &#125;</div><div class="line">    pager.current = pagination.current</div><div class="line">    <span class="keyword">this</span>.setState(&#123;</div><div class="line">      pagination: pager,</div><div class="line">      fetchData: &#123;</div><div class="line">        pageSize: pagination.pageSize,</div><div class="line">        page: pagination.current,</div><div class="line">        sortField: sorter.field,</div><div class="line">        sortOrder: sorter.order,</div><div class="line">        ...filters,</div><div class="line">      &#125;,</div><div class="line">    &#125;, () =&gt; &#123;</div><div class="line">      <span class="keyword">this</span>.fetchData()</div><div class="line">    &#125;)</div><div class="line">  &#125;</div></pre></td></tr></table></figure>
</li>
</ol>
<h2 id="Tabs"><a href="#Tabs" class="headerlink" title="Tabs"></a>Tabs</h2><p>提供平级的区域将大块内容进行收纳和展现，保持界面整洁。这个功能是项目中常用到的功能，刚才发现antd有提供这一组件，自己好像经常做只顾低头赶路的傻事，磨刀不误砍柴工，学习成长这种事也急不得，越急越容易遗漏知识点。先博后渊这句话，用在学习上好像一直都不会错，博，先知知识之大概内容，渊则是要知知识的原理及其使用了，现在正处于第一阶段，还是急不得。</p>
<h2 id="Collapse"><a href="#Collapse" class="headerlink" title="Collapse"></a>Collapse</h2><p>可以折叠/展开的内容区域，手风琴效果。教训同上</p>
<h2 id="Steps"><a href="#Steps" class="headerlink" title="Steps"></a>Steps</h2><p>引导用户按照流程完成任务的导航条。</p>
<h2 id="项目中遇到的问题"><a href="#项目中遇到的问题" class="headerlink" title="项目中遇到的问题"></a>项目中遇到的问题</h2><h3 id="引导式next实现"><a href="#引导式next实现" class="headerlink" title="引导式next实现"></a>引导式next实现</h3><p>参考网络配置——》网络模式</p>
<h4 id="实现策略：redux实现界面跳转"><a href="#实现策略：redux实现界面跳转" class="headerlink" title="实现策略：redux实现界面跳转"></a>实现策略：redux实现界面跳转</h4><p>类似路由一样在多个界面(组件)中跳转，主要利用dva的model进行redux系列操作实现，model在router.js中注册,注册语法有待研究，如下：(???)<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">&#123;</div><div class="line">path: <span class="string">'portmapping'</span>,</div><div class="line">getComponent (nextState, cb) &#123;</div><div class="line">    <span class="built_in">require</span>.ensure([], (<span class="built_in">require</span>) =&gt; &#123;</div><div class="line">    cb(<span class="literal">null</span>, <span class="built_in">require</span>(<span class="string">'./routes/firewall/portmapping'</span>))</div><div class="line">    &#125;, <span class="string">'firewall-portmapping'</span>)</div><div class="line">&#125;,</div><div class="line">&#125;,</div></pre></td></tr></table></figure></p>
]]></content>
      
        
    </entry>
    
    <entry>
      <title><![CDATA[npm常用命令]]></title>
      <url>/2017/08/17/Tec/tools/node/npm/</url>
      <content type="html"><![CDATA[<p>一些命令记录<br><a id="more"></a><br><a href="http://www.cnblogs.com/PeunZhang/p/5553574.html" target="_blank" rel="external">npm 常用命令详解</a></p>
<ol>
<li>–save安装包信息将加入到dependencies（生产阶段的依赖）</li>
<li>–save-dev 安装包信息将加入到devDependencies（开发阶段的依赖），所以开发阶段一般使用它</li>
<li>-E, –save-exact 精确安装指定模块版本<br>模块的依赖都被写入了package.json文件后，他人打开项目的根目录（项目开源、内部团队合作），使用npm install命令可以根据dependencies配置安装所有的依赖包</li>
<li>全局安装（global）,使用 -g 或 –global(不加默认本地安装)<br>本地安装：将安装包放在 ./node_modules 下（运行npm时所在的目录），可以通过 require() 来引入本地安装的包<br> 全局安装：将安装包放在 /usr/local下（windows平台在c:/用户/用户名/node_modules下），可以直接在命令行里使用</li>
<li>npm uninstall 卸载模块</li>
<li>npm update 更新模块</li>
<li>npm outdated 检查模块是否已经过时</li>
<li>npm ls 查看安装的模块</li>
<li>npm init 在项目中引导创建一个package.json文件</li>
<li>npm help 查看某条命令的详细帮助</li>
<li>npm config 管理npm的配置路径</li>
</ol>
]]></content>
      
        
    </entry>
    
    <entry>
      <title><![CDATA[React组件及其生命周期(React核心概念介绍)]]></title>
      <url>/2017/08/17/front-end/React/TechStack/reactComponent/</url>
      <content type="html"><![CDATA[<p>单说React的话，组件的构建与使用基本就是React的全部内容了，所以此文也可以叫React使用介绍。<br><a id="more"></a>  </p>
<h2 id="相关资料"><a href="#相关资料" class="headerlink" title="相关资料"></a>相关资料</h2><p><a href="http://jartto.wang/2017/02/19/grasp-react-component/#disqus_thread" target="_blank" rel="external">掌握 React 组件 Component</a>对组件创建方式、生命周期都有详细的介绍。<br><a href="https://fraserxu.me/2014/08/31/react-component-lifecycle/" target="_blank" rel="external">React入门教程 - 组件生命周期</a>比较详细的介绍了生命周期函数的执行过程，可结合上面链接中的图一起看  </p>
<h2 id="React五大核心概念"><a href="#React五大核心概念" class="headerlink" title="React五大核心概念"></a>React五大核心概念</h2><p>包含JSX、组件、组件的props&amp;state、组件API、组件类型，可以看出React的核心都在组件化上了  </p>
<h3 id="JSX"><a href="#JSX" class="headerlink" title="JSX"></a>JSX</h3><p>React是通过JSX语法扩展来实现的  </p>
<h4 id="基本JSX语法"><a href="#基本JSX语法" class="headerlink" title="基本JSX语法"></a>基本JSX语法</h4><ol>
<li>Component可以嵌套</li>
<li>className代替class</li>
<li>JavaScript 表达式需要用 {} 括起来，会执行并返回结果。</li>
<li>Mapping Arrays to JSX,可以把数组映射为 JSX 元素列表   <figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">    &lt;ul&gt;</div><div class="line">      &#123; <span class="keyword">this</span>.props.todos.map(<span class="function">(<span class="params">todo, i</span>) =&gt;</span> &lt;li key=&#123;i&#125;&gt;&#123;todo&#125;&lt;<span class="regexp">/li&gt;) &#125;</span></div><div class="line"><span class="regexp">    &lt;/u</span>l&gt;</div><div class="line">    <span class="string">``</span><span class="string">`  </span></div><div class="line"><span class="string">5.	Spread Attribute：这是 JSX 从 ECMAScript6 借鉴过来的很有用的特性，用于扩充组件 props 。  </span></div><div class="line"><span class="string">    `</span><span class="string">``</span>javascript</div><div class="line">      <span class="keyword">const</span> testProp = &#123;</div><div class="line">        att1: <span class="string">'a'</span>,</div><div class="line">        prop2: <span class="string">'2'</span>,</div><div class="line">      &#125;</div><div class="line">      renturn (</div><div class="line">        &lt;TestNode &#123;...testProps&#125;&gt;ha&lt;<span class="regexp">/TestNode&gt;</span></div><div class="line"><span class="regexp">      )</span></div></pre></td></tr></table></figure>
</li>
</ol>
<h3 id="组件"><a href="#组件" class="headerlink" title="组件"></a>组件</h3><p>React组件能够像原生的HTML标签一样输出特定的界面元素，并且也能包括一些元素相关逻辑功能的代码。<br>组件是一个由具有特定外观特定功能与数据集合的前端页面组成单位。  </p>
<h3 id="组件的Props-amp-state（属性与状态）"><a href="#组件的Props-amp-state（属性与状态）" class="headerlink" title="组件的Props&amp;state（属性与状态）"></a>组件的Props&amp;state（属性与状态）</h3><p>props是一个组件暴露给使用者(父组件)的一些属性，父组件可通过props的配置对组件进行一些初始化，如对一个Table传入dataSource进行展示<br>State是组件内部状态，组件内部自己维护状态变化。外部使用者(父组件)不会关心这些状态<br>注意:<br>  props和state的变化都会引起组件的重绘(render)  </p>
<h3 id="组件API"><a href="#组件API" class="headerlink" title="组件API"></a>组件API</h3><p>一些方法。常用如下：<br>1) render、setState、constructor  </p>
<ol>
<li>render中返回将要被渲染的组件内容，纯函数组件不用render，直接return组件内容即可</li>
<li>setState用于更新组件状态，会引起组件重绘(render被执行)</li>
<li>constructor为当用ES6方式构建组件时的构造函数，主要进行state的初始化操作<br>2) 生命周期函数，如图所示<br>常用生命周期函数:  <ol>
<li>componentDidMount: 组件刚mount上后执行，可在此函数中进行一些组件的初始化操作</li>
<li>componentWillReceiveProps: 组件接收到新的props后执行，参数为nextProps,可在此进行一些组件更新操作<br><img src="http://7xvi3w.com1.z0.glb.clouddn.com/react-component.jpeg" alt="生命周期图示">  <h3 id="组件类型"><a href="#组件类型" class="headerlink" title="组件类型"></a>组件类型</h3>组件分类：<br>1) 容器组件：关注数据交互，如加载服务器端数据<br>2) 展示组件：关注UI逻辑，用来展示或隐藏内容<br>高阶组件（higher-order components，HOCs）：可以把它理解为一个工厂方法，你可以传入一个组件并得到一个HOC返回的附加了更多功能的新组件。HOC不能直接在render方法中调用。  <h2 id="组件定义与使用"><a href="#组件定义与使用" class="headerlink" title="组件定义与使用"></a>组件定义与使用</h2>定义组件方式：<br>1) React.createClass 最早，兼容最好<br>2) ES6 Class<br>3) 函数式组件（无状态组件，没state）  <h3 id="纯函数方式定义组件"><a href="#纯函数方式定义组件" class="headerlink" title="纯函数方式定义组件"></a>纯函数方式定义组件</h3><h4 id="特点"><a href="#特点" class="headerlink" title="特点"></a>特点</h4>与函数创建方式相同，props作为函数参数，return组件布局,每次调用从头执行到尾<br>使用 Functional Component 的写法，单纯渲染 UI<br>A. 组件不能被实例化，节约内存，提升一定的性能<br>B. 组件不能访问this对象<br>C. 组件无法访问生命周期方法<br>D. 只能访问props<br>E. 无状态组件内部其实是可以使用ref功能的，虽然不能通过this.refs访问到，但是可以通过将ref内容保存到无状态组件内部的一个本地变量中获取到。  <h4 id="示例代码"><a href="#示例代码" class="headerlink" title="示例代码"></a>示例代码</h4>一个hello组件<pre><code class="javascript"><span class="keyword">import</span> React <span class="keyword">from</span> <span class="string">'react'</span>
<span class="keyword">import</span> { render } <span class="keyword">from</span> <span class="string">'react-dom'</span>
<span class="keyword">const</span> Hello = <span class="function"><span class="params">()</span> =&gt;</span> (
&lt;div&gt;
hello {name}
&lt;<span class="regexp">/div&gt;</span>
<span class="regexp">)</span>
<span class="regexp">render(&lt;Hello name="world"/</span>&gt;, <span class="built_in">document</span>.getElementById(<span class="string">"app"</span>))
</code></pre>
<h3 id="ES5原生方式定义组件"><a href="#ES5原生方式定义组件" class="headerlink" title="ES5原生方式定义组件"></a>ES5原生方式定义组件</h3>如果是最新版16.0中createClass已经被废除了，可以使用es6的class替代。<br>现在基本上不用此方式了，之前一些旧代码组件定义方式基本是ES5原生方式，看懂即可。现在项目中一般用ES6的构建方式  <h4 id="构建出的组件特点"><a href="#构建出的组件特点" class="headerlink" title="构建出的组件特点"></a>构建出的组件特点</h4>React.createClass定义的组件  <blockquote>
<ol>
<li>This自绑定，自动获取当前组件实例对象</li>
</ol>
</blockquote>
</li>
</ol>
</li>
<li>React.createClass在创建组件时，有关组件props的属性类型及组件默认的属性会作为组件实例的属性来配置，其中defaultProps是使用getDefaultProps的方法来获取默认组件属性的</li>
<li>React.createClass创建的组件，其状态state是通过getInitialState方法来配置组件相关的状态  <h4 id="示例代码-1"><a href="#示例代码-1" class="headerlink" title="示例代码"></a>示例代码</h4><pre><code class="javascript"><span class="keyword">import</span> React <span class="keyword">from</span> <span class="string">'react'</span>
<span class="keyword">const</span> MyComponent = React.createClass({
getInitialState: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>{
<span class="keyword">return</span> { <span class="attr">count</span>: [] };
},
getDefaultProps() {
<span class="keyword">return</span> {
 name: <span class="string">'default'</span>
}
},
onClick: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>{
<span class="keyword">let</span> { count } =<span class="keyword">this</span>.state
count++
<span class="keyword">this</span>.setState({count})
},
render: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>{
<span class="keyword">const</span> { name } = <span class="keyword">this</span>.props
<span class="keyword">const</span> { count } = <span class="keyword">this</span>.state
<span class="keyword">return</span> (
 &lt;button onClick={<span class="keyword">this</span>.onClick}&gt;{name},您点击了{count}次&lt;<span class="regexp">/button&gt;</span>
<span class="regexp">)</span>
<span class="regexp">}</span>
<span class="regexp">})  </span>
<span class="regexp">export default MyComponent</span>
</code></pre>
<h3 id="ES6方式定义组件"><a href="#ES6方式定义组件" class="headerlink" title="ES6方式定义组件"></a>ES6方式定义组件</h3>有状态组件的定义多用ES6方式。<br>Class xx extends React.Components<blockquote>
<ol>
<li>React.Component在创建组件时配置这两个对应信息时，他们是作为组件类的属性，不是组件实例的属性，也就是所谓的类的静态属性来配置的。</li>
<li>React.Component创建的组件，其状态state是在constructor中像初始化组件属性一样声明的。  <h4 id="示例代码-2"><a href="#示例代码-2" class="headerlink" title="示例代码"></a>示例代码</h4>下面代码完成了一个可记录点击次数的组件<pre><code class="javascript"><span class="keyword">import</span> React <span class="keyword">from</span> <span class="string">'react'</span>
<span class="keyword">import</span> { render } <span class="keyword">from</span> <span class="string">'react-dom'</span>
<span class="class"><span class="keyword">class</span> <span class="title">Hello</span> <span class="keyword">extends</span> <span class="title">React</span>.<span class="title">Component</span> </span>{
<span class="keyword">constructor</span> (props) {
<span class="keyword">super</span>(props)
<span class="keyword">this</span>.state = { <span class="attr">count</span>: <span class="number">0</span> }
}
onClick = <span class="function"><span class="params">()</span> =&gt;</span> {
<span class="keyword">let</span> { count } =<span class="keyword">this</span>.state
count++
<span class="keyword">this</span>.setState({count})
}
render () {
<span class="keyword">const</span> { count } = <span class="keyword">this</span>.state
<span class="keyword">const</span> { name } = <span class="keyword">this</span>.props
<span class="keyword">return</span> (
&lt;button onClick={<span class="keyword">this</span>.onClick}&gt;{name},您点击了{count}次&lt;<span class="regexp">/button&gt;</span>
<span class="regexp">)</span>
<span class="regexp">}</span>
<span class="regexp">}  </span>
<span class="regexp">render(&lt;Hello name="Anne"/</span>&gt;, <span class="built_in">document</span>.getElementById(<span class="string">"app"</span>))
</code></pre>
<h3 id="组件使用相关tips"><a href="#组件使用相关tips" class="headerlink" title="组件使用相关tips"></a>组件使用相关tips</h3></li>
<li>组件使用时首字母必须大写，否则无法识别</li>
<li>有状态组件才能用生命周期钩子函数</li>
<li>组件更新时机：props/state的变化都会触发render()更新界面，同时也可以在生命周期函数中对界面进行处理</li>
<li>shouldComponentUpdate默认返回true，重写可避免不必要的更新  <h2 id="组件设计"><a href="#组件设计" class="headerlink" title="组件设计"></a>组件设计</h2>尽量无状态，交由父组件维护自身状态并通过props传值<br>状态state： 状态需要包含那些仅与自身有关(不需要父组件决定)并且在组件的回调函数中会发生变化（用户行为改变状态），并且会体现在 UI上的信息。  <h3 id="组件划分思想"><a href="#组件划分思想" class="headerlink" title="组件划分思想"></a>组件划分思想</h3>单一职责原则<br>好的组件特性:<br>（1）可组合（Composeable）：一个组件易于和其它组件一起使用，或者嵌套在另一个组件内部。如果一个组件内部创建了另一个组件，那么说父组件拥有（own）它创建的子组件，通过这个特性，一个复杂的UI可以拆分成多个简单的UI组件；<br>（2）可重用（Reusable）：每个组件都是具有独立功能的，它可以被使用在多个UI场景；<br>（3）可维护（Maintainable）：每个小的组件仅仅包含自身的逻辑，更容易被理解和维护；<br>（4）可测试（Testable）：因为每个组件都是独立的，那么对于各个组件分别测试显然要比对于整个UI进行测试容易的多。  <h3 id="建议大型可复用组件的开发步骤"><a href="#建议大型可复用组件的开发步骤" class="headerlink" title="建议大型可复用组件的开发步骤"></a>建议大型可复用组件的开发步骤</h3></li>
<li>先按具体做出一个Demo组件，组件内的一些变化的值(将来要作为props提供的)用一个对象提供</li>
<li>对象定义好后const取出对象内部属性值，在return的内容中使用</li>
<li>及时修改不合理的props,若组件过于复杂需进一步拆分组件</li>
<li>在父组件中使用此组件，提供对象相同的一些props属性</li>
<li>将const来源替换成props，并为组件定义propTypes  <h4 id="tips"><a href="#tips" class="headerlink" title="tips"></a>tips</h4>button+复杂modal(含子内容)肯定是要拆分的</li>
</ol>
</blockquote>
</li>
</ol>
]]></content>
      
        
    </entry>
    
    <entry>
      <title><![CDATA[React技术栈简介]]></title>
      <url>/2017/08/16/front-end/React/TechStack/ReactTechnologyStack/</url>
      <content type="html"><![CDATA[<p>项目所用到的React技术栈如下:</p>
<ol>
<li>语法: React语法、ES6语法、Less语法</li>
<li>相关lib: React、Dva、react-router、redux、redux-saga、Mock.js、ant-design</li>
<li>工具：Webpack、webpack-dev-server、roadhog、Bable、dva-cli<a id="more"></a>
<h2 id="语法"><a href="#语法" class="headerlink" title="语法"></a>语法</h2>React语法： jsx语法，就是在js中写html代码<br>ES6语法: 即ES2015，增加一些新特性，如箭头函数、class继承(语法糖)、Generator函数等<br>Less语法: 用于css的编写，LESS将CSS赋予了动态语言的特性，如变量、继承、运算、函数。LESS既可以在客户端上运行(支持IE 6+, Webkit, Firefox)，也可以借助Node.js或者Rhino在服务端运行，点击查看<a href="http://www.bootcss.com/p/lesscss/#about" target="_blank" rel="external">less语法简介</a><h2 id="相关lib"><a href="#相关lib" class="headerlink" title="相关lib"></a>相关lib</h2><h3 id="React"><a href="#React" class="headerlink" title="React"></a>React</h3>官方对React的定义为用于构建用户界面的js库。利用官方提供的组件生命周期钩子函数设计不同功能不同外观的可复用组件，界面由数据驱动，不用自己再重写了。<br>react主要特点：</li>
<li>组件化</li>
<li>高效DOM操作，Virtual DOM机制，Diff算法</li>
<li>单项数据流(Model-&gt;View)</li>
<li>组件生命周期</li>
<li>声明式UI设计 <a href="http://www.oschina.net/news/41789/imperative-vs-declarative" target="_blank" rel="external">声明式编程和命令式编程的比较</a></li>
</ol>
<h3 id="react-router"><a href="#react-router" class="headerlink" title="react-router"></a>react-router</h3><p>React只解决了数据与界面的关联问题，对于一个单页面程序，路由必不可少，react-router主要用于界面路由，页面的跳转<br>分为HashRouter、BrowserRouter</p>
<h3 id="redux"><a href="#redux" class="headerlink" title="redux"></a>redux</h3><p>React的组件间通信规则基本如下:<br>父到子: 通过传给子组件的props传递数据<br>子到父: 通过父组件提供的回调函数传递数据<br>兄弟组件: 用父组件作为媒介通信<br>可以看出，当一个界面较为复杂，组件间嵌套层级深时，组件间数据传递非常困难，所以官方提供了redux库来进行大项目中的数据分发。基本原理与flux相同</p>
<h3 id="redux-saga"><a href="#redux-saga" class="headerlink" title="redux-saga"></a>redux-saga</h3><p>redux的异步解决方案</p>
<h3 id="Dva"><a href="#Dva" class="headerlink" title="Dva"></a>Dva</h3><p>基于 redux、redux-saga 和 react-router 的轻量级前端框架。</p>
<h3 id="Mock-js"><a href="#Mock-js" class="headerlink" title="Mock.js"></a>Mock.js</h3><p>用于数据的mock，伪造一些数据供前端测试，下面示例造了一个含20条数据的数组<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">let</span> usersListData = Mock.mock(&#123;</div><div class="line">  <span class="string">'data|20'</span>: [</div><div class="line">    &#123;</div><div class="line">      <span class="string">'id|+1'</span>: <span class="number">0</span>,</div><div class="line">      tstamp: Random.datetime(<span class="string">'yyyy-MM-dd HH:mm:ss'</span>),</div><div class="line">      ip: <span class="string">'@ip'</span>,</div><div class="line">      target_name: <span class="string">'@cname'</span>,</div><div class="line">      <span class="string">'system_type|1'</span>: [<span class="string">'Android'</span>, <span class="string">'ios'</span>, <span class="string">'windows'</span>],</div><div class="line">      link: <span class="string">'@url'</span>,</div><div class="line">    &#125;,</div><div class="line">  ],</div><div class="line">&#125;)</div></pre></td></tr></table></figure></p>
<h3 id="ant-design"><a href="#ant-design" class="headerlink" title="ant-design"></a>ant-design</h3><p>蚂蚁金服提供的React组件库，包含了大部分日常前端开发的常见组件，设计简洁，开箱即用</p>
<h2 id="工具"><a href="#工具" class="headerlink" title="工具"></a>工具</h2><h3 id="Bable"><a href="#Bable" class="headerlink" title="Bable"></a>Bable</h3><p>浏览器对ES6的支持不全，且不能识别React语法写得程序，造成写好的程序在浏览器无法成功运行。<br>为了让我们提前用上浏览器的新特性切不用考虑浏览器支持的问题，babel就诞生了。<br>babel使用相关的preset插件对我们的文件进行预处理，使之能够被浏览器识别</p>
<p>babel-cli和babel-core:<br>  如果你想要在CLI(终端或REPL)使用babel就下载babel-cli，如果想要在node中使用就下载babel-core。<br>最常用的babel preset插件:<br>  babel-preset-react: 预处理react语法<br>  babel-preset-es2015: 预处理ES6语法<br>  babel-preset-stage-0： 预处理ES7语法  </p>
<h3 id="Webpack"><a href="#Webpack" class="headerlink" title="Webpack"></a>Webpack</h3><p>webpack是一个前端模块化构建工具，它能把整个工程通过用户配置的module resolver进行预处理并输出。<br>官方介绍如下:</p>
<blockquote>
<p>webpack 是一个现代 JavaScript 应用程序的模块打包器(module bundler)。当 webpack 处理应用程序时，它会递归地构建一个依赖关系图(dependency graph)，其中包含应用程序需要的每个模块，然后将所有这些模块打包成少量的 bundle - 通常只有一个，由浏览器加载。<br>它是高度可配置的，但是，在开始前你需要先理解四个核心概念：入口(entry)、输出(output)、loader、插件(plugins)。<br>一个简单的react+babel+webpack的示例:<br><a href="https://github.com/vonxq/react-hello-world" target="_blank" rel="external">react-hello-world</a></p>
<h3 id="webpack-dev-server"><a href="#webpack-dev-server" class="headerlink" title="webpack-dev-server"></a>webpack-dev-server</h3><p>webpack-dev-server是一个小型的Node.js Express服务器,它使用webpack-dev-middleware来服务于webpack的包,除此自外，它还有一个通过Sock.js来连接到服务器的微型运行时。<br><a href="https://segmentfault.com/a/1190000006964335" target="_blank" rel="external">详解webpack-dev-server的使用</a></p>
<h3 id="dva-cli"><a href="#dva-cli" class="headerlink" title="dva-cli"></a>dva-cli</h3><p>dva官方提供的一个命令行工具，用于快速构建一个dva程序，使用户不用为项目环境的搭建费心。</p>
<h3 id="roadhog"><a href="#roadhog" class="headerlink" title="roadhog"></a>roadhog</h3><p>用json格式进行配置的cli工具,提供了mock功能，可配置webpack(有些接口未开放)<br>官方介绍如下:<br>roadhog 是一个 cli 工具，提供 server、 build 和 test 三个命令，分别用于本地调试和构建，并且提供了特别易用的 mock 功能。命令行体验和 create-react-app 一致，配置略有不同，比如默认开启 css modules，然后还提供了 JSON 格式的配置方式。<br>本地开发:<br>$ roadhog server<br>打包发布:<br>$ roadhog build<br>测试，默认会跑 ./test 目录下的所有文件:<br>$ roadhog test</p>
</blockquote>
]]></content>
      
        <categories>
            
            <category> Front-end </category>
            
            <category> React </category>
            
        </categories>
        
        
        <tags>
            
            <tag> React </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[项目源码分析]]></title>
      <url>/2017/08/15/front-end/React/Practice/code%20analyze/</url>
      <content type="html"><![CDATA[<p>本文主要对项目源码的构成做一个简要分析，同时也通过实战在此基础上体验一下一个完整工程的实现过程<br><a id="more"></a><br>软件架构借鉴了<a href="https://github.com/zuiidea/antd-admin" target="_blank" rel="external">antd-admin</a></p>
<h1 id="开发步骤："><a href="#开发步骤：" class="headerlink" title="开发步骤："></a>开发步骤：</h1><ol>
<li>到router添加path</li>
<li>menu.js中加入本条路由信息</li>
<li>新建model（state、reducer等）和routers（组件，页面显示信息，dispatch）</li>
<li>mock.js模拟数据<br> 4.1 mock输出在rodhog（配置信息，不用修改）<br> 4.2 mock引用在index.js（不用管）<br> 4.3 在utils/api.js中定义变量，设置其操作组件页面所在文件夹（？），并export<br> 4.4 在mock中建立同名文件，引用api，定义输出数据格式（与index的dataIndex一一对应）<br> 4.5 在页面的index.js中导入api，使用api完成组件导出</li>
<li>调试查错</li>
<li>npm run lint检查代码错误</li>
<li>commit代码(加上 <a href="https://jira.b.360.cn/browse/ICG-332?bug%3F%3F%3F" target="_blank" rel="external">https://jira.b.360.cn/browse/ICG-332?bug%3F%3F%3F</a> 的bug号)</li>
<li>可能需要在jira上log？<h1 id="目录结构"><a href="#目录结构" class="headerlink" title="目录结构"></a>目录结构</h1>// 目录树摘自<a href="https://github.com/zuiidea/antd-admin" target="_blank" rel="external">antd-admin</a><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div></pre></td><td class="code"><pre><div class="line">├── /dist/           <span class="comment"># 项目输出目录</span></div><div class="line">├── /src/            <span class="comment"># 项目源码目录</span></div><div class="line">│ ├── /components/   <span class="comment"># UI组件及UI相关方法</span></div><div class="line">│ │ ├── skin.less    <span class="comment"># 全局样式</span></div><div class="line">│ │ └── vars.less    <span class="comment"># 全局样式变量</span></div><div class="line">│ ├── /routes/       <span class="comment"># 路由组件</span></div><div class="line">│ │ └── app.js       <span class="comment"># 路由入口</span></div><div class="line">│ ├── /models/       <span class="comment"># 数据模型</span></div><div class="line">│ ├── /services/     <span class="comment"># 数据接口</span></div><div class="line">│ ├── /themes/       <span class="comment"># 项目样式</span></div><div class="line">│ ├── /mock/         <span class="comment"># 数据mock</span></div><div class="line">│ ├── /utils/        <span class="comment"># 工具函数</span></div><div class="line">│ │ ├── config.js    <span class="comment"># 项目常规配置</span></div><div class="line">│ │ ├── menu.js      <span class="comment"># 菜单及面包屑配置</span></div><div class="line">│ │ ├── config.js    <span class="comment"># 项目常规配置</span></div><div class="line">│ │ ├── request.js   <span class="comment"># 异步请求函数</span></div><div class="line">│ │ └── theme.js     <span class="comment"># 项目需要在js中使用到样式变量</span></div><div class="line">│ ├── route.js       <span class="comment"># 路由配置</span></div><div class="line">│ ├── index.js       <span class="comment"># 入口文件</span></div><div class="line">│ └── index.html     </div><div class="line">├── package.json     <span class="comment"># 项目信息</span></div><div class="line">├── .eslintrc        <span class="comment"># Eslint配置</span></div><div class="line">└── .roadhogrc.js    <span class="comment"># roadhog配置</span></div></pre></td></tr></table></figure>
</li>
</ol>
<h2 id="src"><a href="#src" class="headerlink" title="src"></a>src</h2><h3 id="Index-html"><a href="#Index-html" class="headerlink" title="Index.html"></a>Index.html</h3><p>主页面</p>
<h3 id="Index-js"><a href="#Index-js" class="headerlink" title="Index.js"></a>Index.js</h3><ol>
<li>工程入口文件</li>
<li>初始化</li>
<li>设置model</li>
<li>设置router</li>
<li>Start</li>
</ol>
<h3 id="router-js"><a href="#router-js" class="headerlink" title="router.js"></a>router.js</h3><ol>
<li>路由配置文件，导出一个Router组件</li>
<li>Path与页面一一对应</li>
<li>指定webpack需加载的依赖文件</li>
<li>注册model</li>
<li>指定path指向页面</li>
<li>Route分级，childRoutes</li>
</ol>
<h3 id="Routes"><a href="#Routes" class="headerlink" title="Routes"></a>Routes</h3><ol>
<li>app.js为整体界面路由入口，menu为siderProps、breadProps、tabProps的props</li>
<li>各文件夹为各界面组件</li>
</ol>
<h3 id="Components"><a href="#Components" class="headerlink" title="Components"></a>Components</h3><p>通用组件</p>
<h4 id="Common"><a href="#Common" class="headerlink" title="Common"></a>Common</h4><p>通过index.js集中导入并导出组件</p>
<h5 id="Layout为布局组件"><a href="#Layout为布局组件" class="headerlink" title="Layout为布局组件"></a>Layout为布局组件</h5><p>header、sider、Tab等等等等！！！！布局学习重点</p>
<h4 id="specific"><a href="#specific" class="headerlink" title="specific"></a>specific</h4><p>一些界面专用组件</p>
<h3 id="Mock"><a href="#Mock" class="headerlink" title="Mock"></a>Mock</h3><p>各页面mock数据，简单后台逻辑</p>
<h3 id="Models"><a href="#Models" class="headerlink" title="Models"></a>Models</h3><p>各页面model组件，<br>dva 通过 model 的概念把一个领域的模型管理起来，包含同步更新 state 的 reducers，处理异步逻辑的 effects，订阅数据源的 subscriptions 。</p>
<h4 id="modal数据解析"><a href="#modal数据解析" class="headerlink" title="modal数据解析"></a>modal数据解析</h4><p>这个 model 里：</p>
<ol>
<li>namespace 表示在全局 state 上的 key</li>
<li>state 是初始值</li>
<li>subscriptions是一些</li>
<li>effects是一些异步处理逻辑，用生成函数写，yeild语句，和action相互触发（action的type名和effects函数名相同？）</li>
<li>reducers 等同于 redux 里的 reducer，接收 action，同步更新 state（action的type名和reducers函数名相同？）</li>
<li>connect的model由router.js传入？？？？？？？？？？？？？？<br>触发：<br>通过已经connect的组件dispatch相关action实现</li>
</ol>
<h3 id="Services"><a href="#Services" class="headerlink" title="Services"></a>Services</h3><ol>
<li>一些异步请求工具函数，按作用分类</li>
</ol>
<h3 id="Themes"><a href="#Themes" class="headerlink" title="Themes"></a>Themes</h3><p>主题</p>
<h3 id="Utils"><a href="#Utils" class="headerlink" title="Utils"></a>Utils</h3><p>api为整个工程各组件API配置<br>request通用工具函数<br>menu.js左侧栏显示信息及路由配置<br>config.js配置<br>theme.js样式变量<br>Locale</p>
<h1 id="开发思路梳理"><a href="#开发思路梳理" class="headerlink" title="开发思路梳理"></a>开发思路梳理</h1><h2 id="建立目录树"><a href="#建立目录树" class="headerlink" title="建立目录树"></a>建立目录树</h2><h2 id="dva初始化"><a href="#dva初始化" class="headerlink" title="dva初始化"></a>dva初始化</h2><p>在程序入口文件引入model和router,初始化并渲染dva<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> <span class="string">'./index.html'</span></div><div class="line"><span class="keyword">import</span> <span class="string">'babel-polyfill'</span></div><div class="line"><span class="keyword">import</span> dva <span class="keyword">from</span> <span class="string">'dva'</span></div><div class="line"><span class="keyword">import</span> createLoading <span class="keyword">from</span> <span class="string">'dva-loading'</span></div><div class="line"><span class="keyword">import</span> &#123; browserHistory &#125; <span class="keyword">from</span> <span class="string">'dva/router'</span></div><div class="line"><span class="keyword">import</span> &#123; message &#125; <span class="keyword">from</span> <span class="string">'antd'</span></div><div class="line"><span class="comment">/* 1. Initialize</span></div><div class="line"><span class="comment">返回dva实例，opt包括history、hook函数、初始化state</span></div><div class="line"><span class="comment">*/</span></div><div class="line"><span class="keyword">const</span> app = dva(&#123;</div><div class="line"><span class="comment">// 自动加载dva插件？？一般用法app.use(createLoading(opt))</span></div><div class="line"><span class="comment">// 不理解...</span></div><div class="line">  ...createLoading(&#123;</div><div class="line">    effects: <span class="literal">true</span>,</div><div class="line">  &#125;),</div><div class="line">  history: browserHistory,</div><div class="line">  onError (error) &#123;</div><div class="line">    message.error(error.message)</div><div class="line">  &#125;,</div><div class="line">&#125;)</div><div class="line"></div><div class="line"><span class="comment">// 2. Model，包括namespace、state、reducer、effect、subscriptions</span></div><div class="line"><span class="comment">// require提醒webpack预加载</span></div><div class="line">app.model(<span class="built_in">require</span>(<span class="string">'./models/app'</span>))</div><div class="line"></div><div class="line"><span class="comment">// 3. Router注册路由表</span></div><div class="line"><span class="comment">// 格式：app.router((&#123; history, app &#125; =&gt; RouterConfig)</span></div><div class="line">app.router(<span class="built_in">require</span>(<span class="string">'./router'</span>))</div><div class="line"></div><div class="line"><span class="comment">// 4. Start</span></div><div class="line">app.start(<span class="string">'#root'</span>)</div></pre></td></tr></table></figure></p>
<h2 id="routers建立"><a href="#routers建立" class="headerlink" title="routers建立"></a>routers建立</h2><p>结合<a href="http://react-guide.github.io/react-router-cn/docs/API.html" target="_blank" rel="external">React官方文档-API</a>理解以下代码<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> React <span class="keyword">from</span> <span class="string">'react'</span></div><div class="line"><span class="keyword">import</span> PropTypes <span class="keyword">from</span> <span class="string">'prop-types'</span></div><div class="line"><span class="keyword">import</span> &#123; Router &#125; <span class="keyword">from</span> <span class="string">'dva/router'</span></div><div class="line"><span class="keyword">import</span> App <span class="keyword">from</span> <span class="string">'./routes/app'</span></div><div class="line"><span class="keyword">const</span> registerModel = <span class="function">(<span class="params">app, model</span>) =&gt;</span> &#123;</div><div class="line">  <span class="keyword">if</span> (!(app._models.filter(<span class="function"><span class="params">m</span> =&gt;</span> m.namespace === model.namespace).length === <span class="number">1</span>)) &#123;</div><div class="line">    app.model(model)</div><div class="line">  &#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">const</span> Routers = <span class="function"><span class="keyword">function</span> (<span class="params">&#123; history, app &#125;</span>) </span>&#123;</div><div class="line">  <span class="keyword">const</span> routes = [</div><div class="line">    &#123;</div><div class="line">      path: <span class="string">'/'</span>,</div><div class="line">      component: App,</div><div class="line">	   <span class="comment">// 指定主目录</span></div><div class="line">      getIndexRoute (nextState, cb) &#123;</div><div class="line">		  <span class="comment">// webpack  commonjs异步加载语法</span></div><div class="line">        <span class="built_in">require</span>.ensure([], (<span class="built_in">require</span>) =&gt; &#123;</div><div class="line">          registerModel(app, <span class="built_in">require</span>(<span class="string">'./models/dashboard'</span>))</div><div class="line">          cb(<span class="literal">null</span>, &#123; <span class="attr">component</span>: <span class="built_in">require</span>(<span class="string">'./routes/dashboard/'</span>) &#125;)</div><div class="line">        &#125;, <span class="string">'dashboard'</span>)</div><div class="line">      &#125;,</div><div class="line">      childRoutes: [</div><div class="line">        &#123;</div><div class="line">          path: <span class="string">'chart/lineChart'</span>,</div><div class="line">          getComponent (nextState, cb) &#123;</div><div class="line">            <span class="built_in">require</span>.ensure([], (<span class="built_in">require</span>) =&gt; &#123;</div><div class="line">              cb(<span class="literal">null</span>, <span class="built_in">require</span>(<span class="string">'./routes/chart/lineChart/'</span>))</div><div class="line">            &#125;, <span class="string">'chart-lineChart'</span>)</div><div class="line">          &#125;,</div><div class="line">        &#125;, &#123;</div><div class="line">		<span class="comment">// 通配符，贪婪匹配，只能放最后（不然可能覆盖所有匹配）</span></div><div class="line">          path: <span class="string">'*'</span>,</div><div class="line">          getComponent (nextState, cb) &#123;</div><div class="line">            <span class="built_in">require</span>.ensure([], (<span class="built_in">require</span>) =&gt; &#123;</div><div class="line">              cb(<span class="literal">null</span>, <span class="built_in">require</span>(<span class="string">'./routes/error/'</span>))</div><div class="line">            &#125;, <span class="string">'error'</span>)</div><div class="line">          &#125;,</div><div class="line">        &#125;,</div><div class="line">      ],</div><div class="line">    &#125;,</div><div class="line">  ]</div><div class="line"></div><div class="line">  <span class="keyword">return</span> <span class="xml"><span class="tag">&lt;<span class="name">Router</span> <span class="attr">history</span>=<span class="string">&#123;history&#125;</span> <span class="attr">routes</span>=<span class="string">&#123;routes&#125;</span> /&gt;</span></span></div><div class="line"><span class="xml">&#125;</span></div><div class="line"><span class="xml"></span></div><div class="line"><span class="xml">Routers.propTypes = &#123;</span></div><div class="line"><span class="xml">  history: PropTypes.object,</span></div><div class="line"><span class="xml">  app: PropTypes.object,</span></div><div class="line"><span class="xml">&#125;</span></div><div class="line"><span class="xml"></span></div><div class="line"><span class="xml">export default Routers</span></div></pre></td></tr></table></figure></p>
<h2 id="主页面设计"><a href="#主页面设计" class="headerlink" title="主页面设计"></a>主页面设计</h2><p><img src="http://res.cloudinary.com/dqvk5dpno/image/upload/v1503041432/Image_3_xulctd.png" alt="dva对象属性"></p>
<h3 id="app-js"><a href="#app-js" class="headerlink" title="app.js"></a>app.js</h3><p>以下为app.js设计，类似于搭积木讲页面各个模块(sider、header、Tab…)摆在同一界面</p>
<blockquote>
<p>// FIXME: </p>
<ol>
<li>界面是如何布局的，各文件单独设置还是一起？</li>
<li>界面内多个组件的通信通过app Model联系在一起，组件均为无状态组件，设计方式可以多学习学习</li>
</ol>
</blockquote>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div><div class="line">126</div><div class="line">127</div><div class="line">128</div><div class="line">129</div><div class="line">130</div><div class="line">131</div><div class="line">132</div><div class="line">133</div><div class="line">134</div><div class="line">135</div><div class="line">136</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> React <span class="keyword">from</span> <span class="string">'react'</span></div><div class="line"><span class="keyword">import</span> PropTypes <span class="keyword">from</span> <span class="string">'prop-types'</span></div><div class="line"><span class="keyword">import</span> &#123; connect &#125; <span class="keyword">from</span> <span class="string">'dva'</span></div><div class="line"><span class="keyword">import</span> &#123; Common &#125; <span class="keyword">from</span> <span class="string">'../components'</span></div><div class="line"><span class="keyword">import</span> &#123; classnames, config, menu &#125; <span class="keyword">from</span> <span class="string">'../utils'</span></div><div class="line"><span class="keyword">import</span> &#123; Helmet &#125; <span class="keyword">from</span> <span class="string">'react-helmet'</span></div><div class="line"><span class="keyword">import</span> <span class="string">'../themes/index.less'</span></div><div class="line"><span class="keyword">import</span> <span class="string">'./app.less'</span></div><div class="line"><span class="keyword">import</span> NProgress <span class="keyword">from</span> <span class="string">'nprogress'</span></div><div class="line"><span class="keyword">const</span> &#123; prefix &#125; = config</div><div class="line"></div><div class="line"><span class="keyword">const</span> &#123; Header, Bread, Tab, Sider, styles &#125; = Common.Layout</div><div class="line"><span class="keyword">let</span> lastHref</div><div class="line"><span class="comment">// childern、location、dispatch怎么传的？？？</span></div><div class="line"><span class="comment">// 前两个可能来自router，dispatch和store有关系，但app什么时候绑定的store？</span></div><div class="line"><span class="comment">// app、loading通过connect传入model</span></div><div class="line"><span class="comment">//children为最终需显示的页面信息</span></div><div class="line"><span class="keyword">const</span> App = <span class="function">(<span class="params">&#123; children, location, dispatch, app, loading &#125;</span>) =&gt;</span> &#123;</div><div class="line">  <span class="keyword">const</span> &#123; user, siderFold, darkTheme, isNavbar, menuPopoverVisible, navOpenKeys &#125; = app</div><div class="line"></div><div class="line">  <span class="keyword">const</span> href = <span class="built_in">window</span>.location.href</div><div class="line"></div><div class="line">  <span class="keyword">if</span> (lastHref !== href) &#123;</div><div class="line">    NProgress.start()</div><div class="line">    <span class="keyword">if</span> (!loading.global) &#123;</div><div class="line">      NProgress.done()</div><div class="line">      lastHref = href</div><div class="line">    &#125;</div><div class="line">  &#125;</div><div class="line"></div><div class="line">  <span class="keyword">const</span> headerProps = &#123;</div><div class="line">    menu,</div><div class="line">    user,</div><div class="line">    siderFold,</div><div class="line">    location,</div><div class="line">    isNavbar,</div><div class="line">    menuPopoverVisible,</div><div class="line">    navOpenKeys,</div><div class="line">    switchMenuPopover () &#123;</div><div class="line">      dispatch(&#123; <span class="attr">type</span>: <span class="string">'app/switchMenuPopver'</span> &#125;)</div><div class="line">    &#125;,</div><div class="line">    logout () &#123;</div><div class="line">      dispatch(&#123; <span class="attr">type</span>: <span class="string">'app/logout'</span> &#125;)</div><div class="line">    &#125;,</div><div class="line">    switchSider () &#123;</div><div class="line">      dispatch(&#123; <span class="attr">type</span>: <span class="string">'app/switchSider'</span> &#125;)</div><div class="line">    &#125;,</div><div class="line">    changeOpenKeys (openKeys) &#123;</div><div class="line">      dispatch(&#123; <span class="attr">type</span>: <span class="string">'app/handleNavOpenKeys'</span>, <span class="attr">payload</span>: &#123; <span class="attr">navOpenKeys</span>: openKeys &#125; &#125;)</div><div class="line">    &#125;,</div><div class="line">  &#125;</div><div class="line"></div><div class="line">  <span class="keyword">const</span> siderProps = &#123;</div><div class="line">    menu,</div><div class="line">    siderFold,</div><div class="line">    darkTheme,</div><div class="line">    location,</div><div class="line">    navOpenKeys,</div><div class="line">    changeTheme () &#123;</div><div class="line">      dispatch(&#123; <span class="attr">type</span>: <span class="string">'app/switchTheme'</span> &#125;)</div><div class="line">    &#125;,</div><div class="line">    changeOpenKeys (openKeys) &#123;</div><div class="line">      localStorage.setItem(<span class="string">`<span class="subst">$&#123;prefix&#125;</span>navOpenKeys`</span>, <span class="built_in">JSON</span>.stringify(openKeys))</div><div class="line">      dispatch(&#123; <span class="attr">type</span>: <span class="string">'app/handleNavOpenKeys'</span>, <span class="attr">payload</span>: &#123; <span class="attr">navOpenKeys</span>: openKeys &#125; &#125;)</div><div class="line">    &#125;,</div><div class="line">  &#125;</div><div class="line"></div><div class="line">  <span class="keyword">const</span> breadProps = &#123;</div><div class="line">    menu,</div><div class="line">  &#125;</div><div class="line">  <span class="keyword">const</span> tabProps = &#123;</div><div class="line">    menu,</div><div class="line">    children,</div><div class="line">  &#125;</div><div class="line"></div><div class="line">  <span class="comment">// config为一个工程配置对象，openPages为其一个属性，指定开始界面（本工程为/login）</span></div><div class="line">  <span class="comment">// 当且仅当对象属性存在且在router的location中已定义才能加载，此处为加载一个单一页面</span></div><div class="line">  <span class="keyword">if</span> (config.openPages &amp;&amp; config.openPages.indexOf(location.pathname) &gt; <span class="number">-1</span>) &#123;</div><div class="line">    <span class="keyword">return</span> (</div><div class="line">      &lt;div&gt;</div><div class="line">        &lt;Helmet&gt;</div><div class="line">          &lt;title&gt;网康科技&lt;<span class="regexp">/title&gt;</span></div><div class="line"><span class="regexp">          &lt;meta name="viewport" content="width=device-width, initial-scale=1.0" /</span>&gt;</div><div class="line">          &lt;link rel=<span class="string">"icon"</span> href=&#123;config.logoSrc&#125; type=<span class="string">"image/x-icon"</span> /&gt;</div><div class="line">        &lt;<span class="regexp">/Helmet&gt;</span></div><div class="line"><span class="regexp">        &#123;children&#125;</span></div><div class="line"><span class="regexp">      &lt;/</span>div&gt;</div><div class="line">    )</div><div class="line">  &#125;</div><div class="line"></div><div class="line">  <span class="keyword">const</span> &#123; iconFontJS, iconFontCSS &#125; = config</div><div class="line"><span class="comment">// 更多时候加载的是一个单页面app，有导航等</span></div><div class="line">  <span class="keyword">return</span> (</div><div class="line">    &lt;div&gt;</div><div class="line">    &#123;<span class="comment">/*react-helmet这个可重复使用的组件将会管理所有更改的文档标题，包括文档题目，meta，link，样式，script，noscript和基础标签。*/</span>&#125;</div><div class="line">      &lt;Helmet&gt;</div><div class="line">        &lt;title&gt;网康科技&lt;<span class="regexp">/title&gt;</span></div><div class="line"><span class="regexp">        &lt;meta name="viewport" content="width=device-width, initial-scale=1.0" /</span>&gt;</div><div class="line">        &lt;link rel=<span class="string">"icon"</span> href=&#123;config.logoSrc&#125; type=<span class="string">"image/x-icon"</span> /&gt;</div><div class="line">        &#123;iconFontJS &amp;&amp; <span class="xml"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&#123;iconFontJS&#125;</span> /&gt;</span><span class="undefined">&#125;</span></span></div><div class="line">        &#123;iconFontCSS &amp;&amp; &lt;link rel="stylesheet" href=&#123;iconFontCSS&#125; /&gt;&#125;</div><div class="line"><span class="xml">      <span class="tag">&lt;/<span class="name">Helmet</span>&gt;</span></span></div><div class="line">      &lt;div className=&#123;classnames(styles.layout, &#123; [styles.fold]: isNavbar ? false : siderFold &#125;, &#123; [styles.withnavbar]: isNavbar &#125;)&#125;&gt;</div><div class="line">        &#123;!isNavbar ? &lt;aside className=&#123;classnames(styles.sider, &#123; [styles.light]: !darkTheme &#125;)&#125;&gt;</div><div class="line">          &lt;Sider &#123;...siderProps&#125; /&gt;</div><div class="line">        &lt;/aside&gt; : ''&#125;</div><div class="line">        &lt;Header &#123;...headerProps&#125; /&gt;</div><div class="line">        &lt;div className=&#123;styles.main&#125;&gt;</div><div class="line">        &#123;/*此处的Tab是已经封装好的Tabs组件*/&#125;</div><div class="line">          &#123;config.tabMode ? &lt;Tab &#123;...tabProps&#125; location=&#123;location&#125; /&gt; :</div><div class="line">            &lt;div&gt;</div><div class="line">              &lt;Bread &#123;...breadProps&#125; location=&#123;location&#125; /&gt;</div><div class="line">              &lt;div className=&#123;styles.container&#125;&gt;</div><div class="line">                &lt;div className=&#123;styles.content&#125;&gt;</div><div class="line">                  &#123;children&#125;</div><div class="line">                &lt;/div&gt;</div><div class="line">              &lt;/div&gt;</div><div class="line">            &lt;/div&gt;</div><div class="line">          &#125;</div><div class="line">          &#123;/* &lt;Footer /&gt; */&#125;</div><div class="line">        &lt;/div&gt;</div><div class="line">      &lt;/div&gt;</div><div class="line">    &lt;/div&gt;</div><div class="line">  )</div><div class="line">&#125;</div><div class="line"></div><div class="line">App.propTypes = &#123;</div><div class="line">  children: PropTypes.element.isRequired,</div><div class="line">  location: PropTypes.object,</div><div class="line">  dispatch: PropTypes.func,</div><div class="line">  app: PropTypes.object,</div><div class="line">  loading: PropTypes.object,</div><div class="line">&#125;</div><div class="line">// 如果说你的ui里面需要用到model里面的数据的话 那么就可以直接Connect将model里面的元素 当做props的方式 传递进来</div><div class="line">// 这里的app、loading都会model</div><div class="line">export default connect((&#123; app, loading &#125;) =&gt; (&#123; app, loading &#125;))(App)</div></pre></td></tr></table></figure>
<h3 id="Tab-js"><a href="#Tab-js" class="headerlink" title="Tab.js"></a>Tab.js</h3><p>完成主界面内容的加载与切换<br>以下为Tab组件设计：<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div><div class="line">126</div><div class="line">127</div><div class="line">128</div><div class="line">129</div><div class="line">130</div><div class="line">131</div><div class="line">132</div><div class="line">133</div><div class="line">134</div><div class="line">135</div><div class="line">136</div><div class="line">137</div><div class="line">138</div><div class="line">139</div><div class="line">140</div><div class="line">141</div><div class="line">142</div><div class="line">143</div><div class="line">144</div><div class="line">145</div><div class="line">146</div><div class="line">147</div><div class="line">148</div><div class="line">149</div><div class="line">150</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> React, &#123; PropTypes &#125; <span class="keyword">from</span> <span class="string">'react'</span></div><div class="line"><span class="keyword">import</span> &#123; Tabs, message &#125; <span class="keyword">from</span> <span class="string">'antd'</span></div><div class="line"><span class="keyword">import</span> &#123; Link &#125; <span class="keyword">from</span> <span class="string">'dva/router'</span></div><div class="line"><span class="keyword">import</span> pathToRegexp <span class="keyword">from</span> <span class="string">'path-to-regexp'</span></div><div class="line"><span class="keyword">import</span> styles <span class="keyword">from</span> <span class="string">'./Tab.less'</span></div><div class="line"><span class="keyword">import</span> classnames <span class="keyword">from</span> <span class="string">'classnames'</span></div><div class="line"></div><div class="line"><span class="keyword">const</span> TabPane = Tabs.TabPane</div><div class="line"><span class="comment">// 一开始只有一个，动态地增删panes，pane的content为props传来的children，</span></div><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">Tab</span> <span class="keyword">extends</span> <span class="title">React</span>.<span class="title">Component</span> </span>&#123;</div><div class="line">  <span class="keyword">constructor</span> (props) &#123;</div><div class="line">    <span class="keyword">super</span>(props)</div><div class="line">    <span class="keyword">const</span> current = <span class="keyword">this</span>.getCurrent(props)</div><div class="line">    <span class="keyword">const</span> panes = [</div><div class="line">      <span class="keyword">this</span>.genPane(current),</div><div class="line">    ]</div><div class="line">    <span class="keyword">this</span>.state = &#123;</div><div class="line">      activeKey: panes[<span class="number">0</span>].key,</div><div class="line">      panes,</div><div class="line">    &#125;</div><div class="line">  &#125;</div><div class="line"></div><div class="line">  componentWillReceiveProps (nextProps) &#123;</div><div class="line">    <span class="keyword">this</span>.update(nextProps)</div><div class="line">  &#125;</div><div class="line"></div><div class="line">  onChange = <span class="function">(<span class="params">activeKey</span>) =&gt;</span> &#123;</div><div class="line">    <span class="keyword">this</span>.setState(&#123; activeKey &#125;)</div><div class="line">  &#125;</div><div class="line"></div><div class="line">  onEdit = <span class="function">(<span class="params">targetKey, action</span>) =&gt;</span> &#123;</div><div class="line">    <span class="keyword">this</span>[action](targetKey)</div><div class="line">  &#125;</div><div class="line">  getCurrent (props) &#123;</div><div class="line">    <span class="comment">// 匹配当前路由</span></div><div class="line">    <span class="keyword">let</span> current</div><div class="line">    <span class="keyword">const</span> menu = props.menu</div><div class="line">    <span class="keyword">const</span> pathname = props.location.pathname</div><div class="line">    <span class="keyword">const</span> children = props.children</div><div class="line">    <span class="keyword">for</span> (<span class="keyword">let</span> index <span class="keyword">in</span> menu) &#123;</div><div class="line">      <span class="keyword">if</span> (menu[index].router &amp;&amp; pathToRegexp(menu[index].router).exec(pathname)) &#123;</div><div class="line">        current = menu[index]</div><div class="line">        <span class="keyword">break</span></div><div class="line">      &#125;</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">if</span> (!current) &#123;</div><div class="line">      <span class="keyword">return</span> &#123;</div><div class="line">        router: <span class="string">'*'</span>,</div><div class="line">        icon: <span class="string">'error'</span>,</div><div class="line">        name: <span class="string">'error'</span>,</div><div class="line">        id: <span class="string">'error'</span>,</div><div class="line">        children,</div><div class="line">      &#125;</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">return</span> &#123; children, ...current &#125;</div><div class="line">  &#125;</div><div class="line"><span class="comment">// 加入一个pane到panes，panes.content即显示的children</span></div><div class="line"><span class="comment">// current由props得到=&#123;props.children,...menu数组中的当前页面值&#125;</span></div><div class="line"><span class="comment">// genpan根据current（即此处props）得到当前pane信息(作为TabPane的配置信息，名字内容等)</span></div><div class="line">  genPane (props) &#123;</div><div class="line">    <span class="keyword">return</span> &#123; <span class="attr">title</span>: <span class="xml"><span class="tag">&lt;<span class="name">Link</span> <span class="attr">to</span>=<span class="string">&#123;props.router&#125;</span>&gt;</span>&#123;props.name&#125;<span class="tag">&lt;/<span class="name">Link</span>&gt;</span></span>, <span class="attr">key</span>: props.id.toString(), <span class="attr">content</span>: props.children, <span class="attr">outer</span>: props.outer &#125;</div><div class="line">  &#125;</div><div class="line"></div><div class="line">  update = <span class="function">(<span class="params">props</span>) =&gt;</span> &#123;</div><div class="line">    <span class="keyword">const</span> panes = <span class="keyword">this</span>.state.panes</div><div class="line">    <span class="keyword">const</span> current = <span class="keyword">this</span>.getCurrent(props)</div><div class="line">    <span class="keyword">const</span> activeKey = current.id.toString()</div><div class="line"></div><div class="line">    <span class="comment">// 当前key对应的tab是否已经在显示了?</span></div><div class="line">    <span class="keyword">let</span> exist = <span class="literal">false</span></div><div class="line">    <span class="keyword">for</span> (<span class="keyword">let</span> pane <span class="keyword">of</span> panes) &#123;</div><div class="line">      <span class="keyword">if</span> (pane.key === activeKey) &#123;</div><div class="line">        exist = <span class="literal">true</span></div><div class="line">        <span class="keyword">break</span></div><div class="line">      &#125;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="comment">// 如果key不存在就要新增一个tabPane</span></div><div class="line">    <span class="keyword">if</span> (!exist) &#123;</div><div class="line">      panes.push(<span class="keyword">this</span>.genPane(current))</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="keyword">this</span>.setState(&#123; panes, activeKey &#125;)</div><div class="line">  &#125;</div><div class="line">  add = <span class="function"><span class="params">()</span> =&gt;</span> &#123;</div><div class="line">    <span class="keyword">const</span> panes = <span class="keyword">this</span>.state.panes</div><div class="line">    <span class="keyword">const</span> current = <span class="keyword">this</span>.getCurrent(<span class="keyword">this</span>.props)</div><div class="line">    <span class="keyword">const</span> activeKey = current.id.toString()</div><div class="line">    <span class="comment">// 当前key对应的tab是否已经在显示了?</span></div><div class="line">    <span class="keyword">let</span> exist = <span class="literal">false</span></div><div class="line">    <span class="keyword">for</span> (<span class="keyword">let</span> pane <span class="keyword">of</span> panes) &#123;</div><div class="line">      <span class="keyword">if</span> (pane.key === activeKey) &#123;</div><div class="line">        exist = <span class="literal">true</span></div><div class="line">        <span class="keyword">break</span></div><div class="line">      &#125;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="comment">// 如果key不存在就要新增一个tabPane</span></div><div class="line">    <span class="keyword">if</span> (!exist) &#123;</div><div class="line">      panes.push(<span class="keyword">this</span>.genPane(current))</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="keyword">this</span>.setState(&#123; panes, activeKey &#125;)</div><div class="line">  &#125;</div><div class="line">  remove = <span class="function">(<span class="params">targetKey</span>) =&gt;</span> &#123;</div><div class="line">    <span class="keyword">if</span> (<span class="keyword">this</span>.state.panes.length &lt;= <span class="number">1</span>) &#123;</div><div class="line">      message.warning(<span class="string">'不能关闭最后一个标签'</span>)</div><div class="line">      <span class="keyword">return</span></div><div class="line">    &#125;</div><div class="line">    <span class="keyword">let</span> activeKey = <span class="keyword">this</span>.state.activeKey</div><div class="line">    <span class="keyword">let</span> targetIndex = <span class="number">0</span></div><div class="line">    <span class="keyword">this</span>.state.panes.forEach(<span class="function">(<span class="params">pane, i</span>) =&gt;</span> &#123;</div><div class="line">      <span class="keyword">if</span> (pane.key === targetKey) &#123;</div><div class="line">        targetIndex = i</div><div class="line">      &#125;</div><div class="line">    &#125;)</div><div class="line">    <span class="keyword">const</span> panes = <span class="keyword">this</span>.state.panes.filter(<span class="function"><span class="params">pane</span> =&gt;</span> pane.key !== targetKey)</div><div class="line">    <span class="keyword">if</span> (activeKey === targetKey) &#123;</div><div class="line">      <span class="keyword">if</span> (targetIndex &gt; <span class="number">0</span>) &#123;</div><div class="line">        activeKey = panes[targetIndex - <span class="number">1</span>].key</div><div class="line">      &#125; <span class="keyword">else</span> &#123;</div><div class="line">        activeKey = panes[targetIndex].key</div><div class="line">      &#125;</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">this</span>.setState(&#123; panes, activeKey &#125;)</div><div class="line">  &#125;</div><div class="line">  render () &#123;</div><div class="line">    <span class="keyword">return</span> (</div><div class="line">      &lt;div className=&#123;styles.tab&#125;&gt;</div><div class="line">        &lt;Tabs</div><div class="line">          animated=&#123;<span class="literal">false</span>&#125;</div><div class="line">          hideAdd</div><div class="line">          onChange=&#123;<span class="keyword">this</span>.onChange&#125;</div><div class="line">          activeKey=&#123;<span class="keyword">this</span>.state.activeKey&#125;</div><div class="line">          type=<span class="string">"editable-card"</span></div><div class="line">          onEdit=&#123;<span class="keyword">this</span>.onEdit&#125;</div><div class="line">        &gt;</div><div class="line">          &#123;<span class="keyword">this</span>.state.panes.map(<span class="function"><span class="params">pane</span> =&gt;</span> &lt;TabPane tab=&#123;pane.title&#125; key=&#123;pane.key&#125; &gt;<span class="xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">className</span>=<span class="string">&#123;classnames(&#123;</span> '<span class="attr">content-inner</span>'<span class="attr">:</span> !<span class="attr">pane.outer</span> &#125;)&#125;&gt;</span>&#123;pane.content&#125;<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><span class="xml"><span class="tag">&lt;/<span class="name">TabPane</span>&gt;</span></span>)&#125;</div><div class="line">        &lt;<span class="regexp">/Tabs&gt;</span></div><div class="line"><span class="regexp">      &lt;/</span>div&gt;</div><div class="line">    )</div><div class="line">  &#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line">Tab.propTypes = &#123;</div><div class="line">  menu: PropTypes.array,</div><div class="line">  location: PropTypes.object,</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">export</span> <span class="keyword">default</span> Tab</div></pre></td></tr></table></figure></p>
<h3 id="menu对象"><a href="#menu对象" class="headerlink" title="menu对象"></a>menu对象</h3><p>即Tab里用到的menu，由app.js导入并传入子组件，定义了menu内容,供Tab和Sider使用<br>Sider中使用的Menus组件其实就是一个Antd的Menu组件的封装<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">module</span>.exports = [</div><div class="line">  &#123; <span class="attr">id</span>: <span class="number">1</span>, <span class="attr">icon</span>: <span class="string">'laptop'</span>, <span class="attr">name</span>: <span class="string">'首页'</span>, <span class="attr">router</span>: <span class="string">'/dashboard'</span> &#125;,</div><div class="line">  &#123; <span class="attr">id</span>: <span class="number">2</span>, <span class="attr">icon</span>: <span class="string">'user'</span>, <span class="attr">name</span>: <span class="string">'系统监控'</span> &#125;,</div><div class="line">  &#123; <span class="attr">id</span>: <span class="number">201</span>, <span class="attr">bpid</span>: <span class="number">2</span>, <span class="attr">mpid</span>: <span class="number">2</span>, <span class="attr">name</span>: <span class="string">'网络活动'</span>, <span class="attr">router</span>: <span class="string">'/monitor/networkactivity'</span>, <span class="attr">outer</span>: <span class="literal">true</span> &#125;,</div><div class="line">  &#123; <span class="attr">id</span>: <span class="number">3</span>, <span class="attr">name</span>: <span class="string">'共享接入'</span>, <span class="attr">icon</span>: <span class="string">'api'</span>, <span class="attr">router</span>: <span class="string">'/request'</span> &#125;,</div><div class="line">  &#123; <span class="attr">id</span>: <span class="number">4</span>, <span class="attr">name</span>: <span class="string">'全局配置'</span>, <span class="attr">icon</span>: <span class="string">'camera-o'</span> &#125;,</div><div class="line">  &#123; <span class="attr">id</span>: <span class="number">401</span>, <span class="attr">bpid</span>: <span class="number">4</span>, <span class="attr">mpid</span>: <span class="number">4</span>, <span class="attr">name</span>: <span class="string">'iconfont'</span>, <span class="attr">icon</span>: <span class="string">'heart-o'</span>, <span class="attr">router</span>: <span class="string">'/UIElement/iconfont'</span> &#125;,</div><div class="line">  &#123; <span class="attr">id</span>: <span class="number">402</span>, <span class="attr">bpid</span>: <span class="number">4</span>, <span class="attr">mpid</span>: <span class="number">4</span>, <span class="attr">name</span>: <span class="string">'DataTable'</span>, <span class="attr">icon</span>: <span class="string">'database'</span>, <span class="attr">router</span>: <span class="string">'/UIElement/dataTable'</span> &#125;,</div><div class="line">  &#123; <span class="attr">id</span>: <span class="number">403</span>, <span class="attr">bpid</span>: <span class="number">4</span>, <span class="attr">mpid</span>: <span class="number">4</span>, <span class="attr">name</span>: <span class="string">'DropOption'</span>, <span class="attr">icon</span>: <span class="string">'bars'</span>, <span class="attr">router</span>: <span class="string">'/UIElement/dropOption'</span> &#125;,</div><div class="line">  &#123; <span class="attr">id</span>: <span class="number">404</span>, <span class="attr">bpid</span>: <span class="number">4</span>, <span class="attr">mpid</span>: <span class="number">4</span>, <span class="attr">name</span>: <span class="string">'Search'</span>, <span class="attr">icon</span>: <span class="string">'search'</span>, <span class="attr">router</span>: <span class="string">'/UIElement/search'</span> &#125;,</div><div class="line">  &#123; <span class="attr">id</span>: <span class="number">405</span>, <span class="attr">bpid</span>: <span class="number">4</span>, <span class="attr">mpid</span>: <span class="number">4</span>, <span class="attr">name</span>: <span class="string">'Editor'</span>, <span class="attr">icon</span>: <span class="string">'edit'</span>, <span class="attr">router</span>: <span class="string">'/UIElement/editor'</span> &#125;,</div><div class="line">  &#123; <span class="attr">id</span>: <span class="number">406</span>, <span class="attr">bpid</span>: <span class="number">4</span>, <span class="attr">mpid</span>: <span class="number">4</span>, <span class="attr">name</span>: <span class="string">'layer (Function)'</span>, <span class="attr">icon</span>: <span class="string">'credit-card'</span>, <span class="attr">router</span>: <span class="string">'/UIElement/layer'</span> &#125;,</div><div class="line">  &#123; <span class="attr">id</span>: <span class="number">407</span>, <span class="attr">bpid</span>: <span class="number">4</span>, <span class="attr">mpid</span>: <span class="number">4</span>, <span class="attr">name</span>: <span class="string">'对象配置'</span>, <span class="attr">icon</span>: <span class="string">'credit-card'</span> &#125;,</div><div class="line">  &#123; <span class="attr">id</span>: <span class="number">40701</span>, <span class="attr">bpid</span>: <span class="number">407</span>, <span class="attr">mpid</span>: <span class="number">407</span>, <span class="attr">name</span>: <span class="string">'IP对象'</span>, <span class="attr">icon</span>: <span class="string">'credit-card'</span>, <span class="attr">router</span>: <span class="string">'/object/ip'</span> &#125;,</div><div class="line">  &#123; <span class="attr">id</span>: <span class="number">40702</span>, <span class="attr">bpid</span>: <span class="number">407</span>, <span class="attr">mpid</span>: <span class="number">407</span>, <span class="attr">name</span>: <span class="string">'服务对象'</span>, <span class="attr">icon</span>: <span class="string">'credit-card'</span>, <span class="attr">router</span>: <span class="string">'/object/service'</span> &#125;,</div><div class="line">  &#123; <span class="attr">id</span>: <span class="number">40703</span>, <span class="attr">bpid</span>: <span class="number">407</span>, <span class="attr">mpid</span>: <span class="number">407</span>, <span class="attr">name</span>: <span class="string">'时间对象'</span>, <span class="attr">icon</span>: <span class="string">'credit-card'</span>, <span class="attr">router</span>: <span class="string">'/object/time'</span> &#125;,</div><div class="line">  &#123; <span class="attr">id</span>: <span class="number">5</span>, <span class="attr">name</span>: <span class="string">'SSL解密'</span>, <span class="attr">icon</span>: <span class="string">'code-o'</span> &#125;,</div><div class="line">  &#123; <span class="attr">id</span>: <span class="number">501</span>, <span class="attr">bpid</span>: <span class="number">5</span>, <span class="attr">mpid</span>: <span class="number">5</span>, <span class="attr">name</span>: <span class="string">'LineChart'</span>, <span class="attr">icon</span>: <span class="string">'line-chart'</span>, <span class="attr">router</span>: <span class="string">'/chart/lineChart'</span> &#125;,</div><div class="line">  &#123; <span class="attr">id</span>: <span class="number">502</span>, <span class="attr">bpid</span>: <span class="number">5</span>, <span class="attr">mpid</span>: <span class="number">5</span>, <span class="attr">name</span>: <span class="string">'BarChart'</span>, <span class="attr">icon</span>: <span class="string">'bar-chart'</span>, <span class="attr">router</span>: <span class="string">'/chart/barChart'</span> &#125;,</div><div class="line">  &#123; <span class="attr">id</span>: <span class="number">503</span>, <span class="attr">bpid</span>: <span class="number">5</span>, <span class="attr">mpid</span>: <span class="number">5</span>, <span class="attr">name</span>: <span class="string">'AreaChart'</span>, <span class="attr">icon</span>: <span class="string">'area-chart'</span>, <span class="attr">router</span>: <span class="string">'/chart/areaChart'</span> &#125;,</div><div class="line">  &#123; <span class="attr">id</span>: <span class="number">6</span>, <span class="attr">name</span>: <span class="string">'上网管理'</span>, <span class="attr">icon</span>: <span class="string">'setting'</span> &#125;,</div><div class="line">  &#123; <span class="attr">id</span>: <span class="number">601</span>, <span class="attr">bpid</span>: <span class="number">6</span>, <span class="attr">mpid</span>: <span class="number">6</span>, <span class="attr">name</span>: <span class="string">'Test Navigation1'</span>, <span class="attr">router</span>: <span class="string">'/navigation/navigation1'</span> &#125;,</div><div class="line">  &#123; <span class="attr">id</span>: <span class="number">602</span>, <span class="attr">bpid</span>: <span class="number">6</span>, <span class="attr">mpid</span>: <span class="number">6</span>, <span class="attr">name</span>: <span class="string">'Test Navigation2'</span> &#125;,</div><div class="line">  &#123; <span class="attr">id</span>: <span class="number">60201</span>, <span class="attr">bpid</span>: <span class="number">602</span>, <span class="attr">mpid</span>: <span class="number">602</span>, <span class="attr">name</span>: <span class="string">'Test Navigation21'</span>, <span class="attr">router</span>: <span class="string">'/navigation/navigation2/navigation1'</span> &#125;,</div><div class="line">  &#123; <span class="attr">id</span>: <span class="number">60202</span>, <span class="attr">bpid</span>: <span class="number">602</span>, <span class="attr">mpid</span>: <span class="number">602</span>, <span class="attr">name</span>: <span class="string">'Test Navigation22'</span>, <span class="attr">router</span>: <span class="string">'/navigation/navigation2/navigation2'</span> &#125;,</div><div class="line">  &#123; <span class="attr">id</span>: <span class="number">7</span>, <span class="attr">name</span>: <span class="string">'流量管理'</span>, <span class="attr">icon</span>: <span class="string">'setting'</span> &#125;,</div><div class="line">  &#123; <span class="attr">id</span>: <span class="number">8</span>, <span class="attr">name</span>: <span class="string">'防火墙'</span>, <span class="attr">icon</span>: <span class="string">'setting'</span> &#125;,</div><div class="line">  &#123; <span class="attr">id</span>: <span class="number">801</span>, <span class="attr">bpid</span>: <span class="number">8</span>, <span class="attr">mpid</span>: <span class="number">8</span>, <span class="attr">name</span>: <span class="string">'ACL规则'</span>, <span class="attr">router</span>: <span class="string">'/firewall/aclrule'</span> &#125;,</div><div class="line">  &#123; <span class="attr">id</span>: <span class="number">802</span>, <span class="attr">bpid</span>: <span class="number">8</span>, <span class="attr">mpid</span>: <span class="number">8</span>, <span class="attr">name</span>: <span class="string">'NAT规则'</span>, <span class="attr">router</span>: <span class="string">'/firewall/natproxy'</span> &#125;,</div><div class="line">  &#123; <span class="attr">id</span>: <span class="number">803</span>, <span class="attr">bpid</span>: <span class="number">8</span>, <span class="attr">mpid</span>: <span class="number">8</span>, <span class="attr">name</span>: <span class="string">'端口映射'</span>, <span class="attr">router</span>: <span class="string">'/firewall/portmapping'</span> &#125;,</div><div class="line">  &#123; <span class="attr">id</span>: <span class="number">9</span>, <span class="attr">name</span>: <span class="string">'用户管理'</span>, <span class="attr">icon</span>: <span class="string">'setting'</span> &#125;,</div><div class="line">  &#123; <span class="attr">id</span>: <span class="number">10</span>, <span class="attr">name</span>: <span class="string">'网络配置'</span>, <span class="attr">icon</span>: <span class="string">'setting'</span> &#125;,</div><div class="line">  &#123; <span class="attr">id</span>: <span class="number">1001</span>, <span class="attr">bpid</span>: <span class="number">10</span>, <span class="attr">mpid</span>: <span class="number">10</span>, <span class="attr">name</span>: <span class="string">'网络模式'</span>, <span class="attr">router</span>: <span class="string">'/network/mode'</span> &#125;,</div><div class="line">  &#123; <span class="attr">id</span>: <span class="number">1002</span>, <span class="attr">bpid</span>: <span class="number">10</span>, <span class="attr">mpid</span>: <span class="number">10</span>, <span class="attr">name</span>: <span class="string">'网口配置'</span>, <span class="attr">router</span>: <span class="string">'/network/port'</span> &#125;,</div><div class="line">  &#123; <span class="attr">id</span>: <span class="number">1003</span>, <span class="attr">bpid</span>: <span class="number">10</span>, <span class="attr">mpid</span>: <span class="number">10</span>, <span class="attr">name</span>: <span class="string">'路由配置'</span> &#125;,</div><div class="line">  &#123; <span class="attr">id</span>: <span class="number">100301</span>, <span class="attr">bpid</span>: <span class="number">1003</span>, <span class="attr">mpid</span>: <span class="number">1003</span>, <span class="attr">name</span>: <span class="string">'静态路由'</span>, <span class="attr">router</span>: <span class="string">'/network/staticrouting'</span> &#125;,</div><div class="line">  &#123; <span class="attr">id</span>: <span class="number">100302</span>, <span class="attr">bpid</span>: <span class="number">1003</span>, <span class="attr">mpid</span>: <span class="number">1003</span>, <span class="attr">name</span>: <span class="string">'策略路由'</span>, <span class="attr">router</span>: <span class="string">'/network/policyrouting'</span> &#125;,</div><div class="line">  &#123; <span class="attr">id</span>: <span class="number">1004</span>, <span class="attr">bpid</span>: <span class="number">10</span>, <span class="attr">mpid</span>: <span class="number">10</span>, <span class="attr">name</span>: <span class="string">'虚拟专用网络（VPN）'</span> &#125;,</div><div class="line">  &#123; <span class="attr">id</span>: <span class="number">100401</span>, <span class="attr">bpid</span>: <span class="number">1004</span>, <span class="attr">mpid</span>: <span class="number">1004</span>, <span class="attr">name</span>: <span class="string">'隧道配置'</span>, <span class="attr">router</span>: <span class="string">'/network/vpn/tunnel'</span> &#125;,</div><div class="line">  &#123; <span class="attr">id</span>: <span class="number">100402</span>, <span class="attr">bpid</span>: <span class="number">1004</span>, <span class="attr">mpid</span>: <span class="number">1004</span>, <span class="attr">name</span>: <span class="string">'隧道信息'</span>, <span class="attr">router</span>: <span class="string">'/network/vpn/tunnel-info'</span> &#125;,</div><div class="line">  &#123; <span class="attr">id</span>: <span class="number">100403</span>, <span class="attr">bpid</span>: <span class="number">1004</span>, <span class="attr">mpid</span>: <span class="number">1004</span>, <span class="attr">name</span>: <span class="string">'证书管理'</span>, <span class="attr">router</span>: <span class="string">'/network/vpn/cert'</span> &#125;,</div><div class="line">  &#123; <span class="attr">id</span>: <span class="number">1005</span>, <span class="attr">bpid</span>: <span class="number">10</span>, <span class="attr">mpid</span>: <span class="number">10</span>, <span class="attr">name</span>: <span class="string">'域名解析'</span>, <span class="attr">icon</span>: <span class="string">'setting'</span>, <span class="attr">router</span>: <span class="string">'/network/dns'</span> &#125;,</div><div class="line">  &#123; <span class="attr">id</span>: <span class="number">11</span>, <span class="attr">name</span>: <span class="string">'日志查询'</span>, <span class="attr">icon</span>: <span class="string">'setting'</span> &#125;,</div><div class="line">  &#123; <span class="attr">id</span>: <span class="number">1101</span>, <span class="attr">bpid</span>: <span class="number">11</span>, <span class="attr">mpid</span>: <span class="number">11</span>, <span class="attr">name</span>: <span class="string">'审计日志'</span> &#125;,</div><div class="line">  &#123; <span class="attr">id</span>: <span class="number">110101</span>, <span class="attr">bpid</span>: <span class="number">1101</span>, <span class="attr">mpid</span>: <span class="number">1101</span>, <span class="attr">name</span>: <span class="string">'查询中心'</span>, <span class="attr">router</span>: <span class="string">'/log/query/querycenter'</span> &#125;,</div><div class="line">  &#123; <span class="attr">id</span>: <span class="number">110102</span>, <span class="attr">bpid</span>: <span class="number">1101</span>, <span class="attr">mpid</span>: <span class="number">1101</span>, <span class="attr">name</span>: <span class="string">'用户查询'</span>, <span class="attr">router</span>: <span class="string">'/log/query/user'</span> &#125;,</div><div class="line">  &#123; <span class="attr">id</span>: <span class="number">110103</span>, <span class="attr">bpid</span>: <span class="number">1101</span>, <span class="attr">mpid</span>: <span class="number">1101</span>, <span class="attr">name</span>: <span class="string">'网址访问'</span>, <span class="attr">router</span>: <span class="string">'/log/query/webvisit'</span> &#125;,</div><div class="line">  &#123; <span class="attr">id</span>: <span class="number">110104</span>, <span class="attr">bpid</span>: <span class="number">1101</span>, <span class="attr">mpid</span>: <span class="number">1101</span>, <span class="attr">name</span>: <span class="string">'搜索关键字'</span>, <span class="attr">router</span>: <span class="string">'/log/query/searchkeywords'</span> &#125;,</div><div class="line">  &#123; <span class="attr">id</span>: <span class="number">110105</span>, <span class="attr">bpid</span>: <span class="number">1101</span>, <span class="attr">mpid</span>: <span class="number">1101</span>, <span class="attr">name</span>: <span class="string">'论坛发帖'</span>, <span class="attr">router</span>: <span class="string">'/log/query/forumpost'</span> &#125;,</div><div class="line">  &#123; <span class="attr">id</span>: <span class="number">110106</span>, <span class="attr">bpid</span>: <span class="number">1101</span>, <span class="attr">mpid</span>: <span class="number">1101</span>, <span class="attr">name</span>: <span class="string">'应用活动'</span>, <span class="attr">router</span>: <span class="string">'/log/query/appactivity'</span> &#125;,</div><div class="line">  &#123; <span class="attr">id</span>: <span class="number">110107</span>, <span class="attr">bpid</span>: <span class="number">1101</span>, <span class="attr">mpid</span>: <span class="number">1101</span>, <span class="attr">name</span>: <span class="string">'邮件收发'</span>, <span class="attr">router</span>: <span class="string">'/log/query/email'</span> &#125;,</div><div class="line">  &#123; <span class="attr">id</span>: <span class="number">110108</span>, <span class="attr">bpid</span>: <span class="number">1101</span>, <span class="attr">mpid</span>: <span class="number">1101</span>, <span class="attr">name</span>: <span class="string">'IM聊天'</span>, <span class="attr">router</span>: <span class="string">'/log/query/imchat'</span> &#125;,</div><div class="line">  &#123; <span class="attr">id</span>: <span class="number">110109</span>, <span class="attr">bpid</span>: <span class="number">1101</span>, <span class="attr">mpid</span>: <span class="number">1101</span>, <span class="attr">name</span>: <span class="string">'上线记录'</span>, <span class="attr">router</span>: <span class="string">'/log/query/onlinerecord'</span> &#125;,</div><div class="line">  &#123; <span class="attr">id</span>: <span class="number">110110</span>, <span class="attr">bpid</span>: <span class="number">1101</span>, <span class="attr">mpid</span>: <span class="number">1101</span>, <span class="attr">name</span>: <span class="string">'文件审计'</span>, <span class="attr">router</span>: <span class="string">'/log/query/fileaudit'</span> &#125;,</div><div class="line">  &#123; <span class="attr">id</span>: <span class="number">110111</span>, <span class="attr">bpid</span>: <span class="number">1101</span>, <span class="attr">mpid</span>: <span class="number">1101</span>, <span class="attr">name</span>: <span class="string">'数据库审计'</span>, <span class="attr">router</span>: <span class="string">'/log/query/databaseaudit'</span> &#125;,</div><div class="line">  &#123; <span class="attr">id</span>: <span class="number">110112</span>, <span class="attr">bpid</span>: <span class="number">1101</span>, <span class="attr">mpid</span>: <span class="number">1101</span>, <span class="attr">name</span>: <span class="string">'协议审计'</span>, <span class="attr">router</span>: <span class="string">'/log/query/protocolaudit'</span> &#125;,</div><div class="line">  &#123; <span class="attr">id</span>: <span class="number">110113</span>, <span class="attr">bpid</span>: <span class="number">1101</span>, <span class="attr">mpid</span>: <span class="number">1101</span>, <span class="attr">name</span>: <span class="string">'告警记录'</span>, <span class="attr">router</span>: <span class="string">'/log/query/alarmrecord'</span> &#125;,</div><div class="line">  &#123; <span class="attr">id</span>: <span class="number">110114</span>, <span class="attr">bpid</span>: <span class="number">1101</span>, <span class="attr">mpid</span>: <span class="number">1101</span>, <span class="attr">name</span>: <span class="string">'上网时长'</span>, <span class="attr">router</span>: <span class="string">'/log/query/surftime'</span> &#125;,</div><div class="line">  &#123; <span class="attr">id</span>: <span class="number">110115</span>, <span class="attr">bpid</span>: <span class="number">1101</span>, <span class="attr">mpid</span>: <span class="number">1101</span>, <span class="attr">name</span>: <span class="string">'短信认证'</span>, <span class="attr">router</span>: <span class="string">'/log/query/smsauthentication'</span> &#125;,</div><div class="line">  &#123; <span class="attr">id</span>: <span class="number">110116</span>, <span class="attr">bpid</span>: <span class="number">1101</span>, <span class="attr">mpid</span>: <span class="number">1101</span>, <span class="attr">name</span>: <span class="string">'页面推送'</span>, <span class="attr">router</span>: <span class="string">'/log/query/pagepush'</span> &#125;,</div><div class="line">  &#123; <span class="attr">id</span>: <span class="number">110117</span>, <span class="attr">bpid</span>: <span class="number">1101</span>, <span class="attr">mpid</span>: <span class="number">1101</span>, <span class="attr">name</span>: <span class="string">'终端访问'</span>, <span class="attr">router</span>: <span class="string">'/log/query/terminalvisit'</span> &#125;,</div><div class="line">  &#123; <span class="attr">id</span>: <span class="number">110118</span>, <span class="attr">bpid</span>: <span class="number">1101</span>, <span class="attr">mpid</span>: <span class="number">1101</span>, <span class="attr">name</span>: <span class="string">'App下载'</span>, <span class="attr">router</span>: <span class="string">'/log/query/appdownload'</span> &#125;,</div><div class="line">  &#123; <span class="attr">id</span>: <span class="number">110119</span>, <span class="attr">bpid</span>: <span class="number">1101</span>, <span class="attr">mpid</span>: <span class="number">1101</span>, <span class="attr">name</span>: <span class="string">'360云安全防护日志'</span>, <span class="attr">router</span>: <span class="string">'/log/query/protectlog'</span> &#125;,</div><div class="line"></div><div class="line">  &#123; <span class="attr">id</span>: <span class="number">1102</span>, <span class="attr">bpid</span>: <span class="number">11</span>, <span class="attr">mpid</span>: <span class="number">11</span>, <span class="attr">name</span>: <span class="string">'系统日志'</span> &#125;,</div><div class="line">  &#123; <span class="attr">id</span>: <span class="number">110202</span>, <span class="attr">bpid</span>: <span class="number">1102</span>, <span class="attr">mpid</span>: <span class="number">1102</span>, <span class="attr">name</span>: <span class="string">'系统报警日志'</span>, <span class="attr">router</span>: <span class="string">'/log/system/alert'</span> &#125;,</div><div class="line">  &#123; <span class="attr">id</span>: <span class="number">12</span>, <span class="attr">name</span>: <span class="string">'统计报表'</span>, <span class="attr">icon</span>: <span class="string">'setting'</span> &#125;,</div><div class="line">  &#123; <span class="attr">id</span>: <span class="number">13</span>, <span class="attr">name</span>: <span class="string">'系统管理'</span>, <span class="attr">icon</span>: <span class="string">'setting'</span> &#125;,</div><div class="line">]</div></pre></td></tr></table></figure></p>
<h3 id="menus组件"><a href="#menus组件" class="headerlink" title="menus组件"></a>menus组件</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div><div class="line">126</div><div class="line">127</div><div class="line">128</div><div class="line">129</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> React <span class="keyword">from</span> <span class="string">'react'</span></div><div class="line"><span class="keyword">import</span> PropTypes <span class="keyword">from</span> <span class="string">'prop-types'</span></div><div class="line"><span class="keyword">import</span> &#123; Menu, Icon &#125; <span class="keyword">from</span> <span class="string">'antd'</span></div><div class="line"><span class="keyword">import</span> &#123; Link &#125; <span class="keyword">from</span> <span class="string">'dva/router'</span></div><div class="line"><span class="keyword">import</span> &#123; arrayToTree, queryArray &#125; <span class="keyword">from</span> <span class="string">'../../../utils'</span></div><div class="line"><span class="keyword">import</span> pathToRegexp <span class="keyword">from</span> <span class="string">'path-to-regexp'</span></div><div class="line"></div><div class="line"><span class="keyword">const</span> Menus = <span class="function">(<span class="params">&#123; siderFold, darkTheme, location, handleClickNavMenu, navOpenKeys, changeOpenKeys, menu &#125;</span>) =&gt;</span> &#123;</div><div class="line">  <span class="comment">// 生成树状</span></div><div class="line">  <span class="keyword">const</span> menuTree = arrayToTree(menu.filter(<span class="function"><span class="params">_</span> =&gt;</span> _.mpid !== <span class="number">-1</span>), <span class="string">'id'</span>, <span class="string">'mpid'</span>)</div><div class="line">  <span class="keyword">const</span> levelMap = &#123;&#125;</div><div class="line"></div><div class="line">  <span class="comment">// 递归生成菜单</span></div><div class="line">  <span class="keyword">const</span> getMenus = <span class="function">(<span class="params">menuTreeN, siderFoldN</span>) =&gt;</span> &#123;</div><div class="line">    <span class="keyword">return</span> menuTreeN.map(<span class="function">(<span class="params">item</span>) =&gt;</span> &#123;</div><div class="line">      <span class="keyword">if</span> (item.children) &#123;</div><div class="line">        <span class="keyword">if</span> (item.mpid) &#123;</div><div class="line">          levelMap[item.id] = item.mpid</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">return</span> (</div><div class="line">          &lt;Menu.SubMenu</div><div class="line">            key=&#123;item.id&#125;</div><div class="line">            title=&#123;&lt;span&gt;</div><div class="line">              &#123;item.icon &amp;&amp; <span class="xml"><span class="tag">&lt;<span class="name">Icon</span> <span class="attr">type</span>=<span class="string">&#123;item.icon&#125;</span> /&gt;</span>&#125;</span></div><div class="line"><span class="xml">              &#123;(!siderFoldN || menuTree.indexOf(item) <span class="tag">&lt; <span class="attr">0</span>) &amp;&amp; <span class="attr">item.name</span>&#125;</span></span></div><div class="line"><span class="xml">            <span class="tag">&lt;/<span class="name">span</span>&gt;</span></span>&#125;</div><div class="line">          &gt;</div><div class="line">            &#123;getMenus(item.children, siderFoldN)&#125;</div><div class="line">          &lt;<span class="regexp">/Menu.SubMenu&gt;</span></div><div class="line"><span class="regexp">        )</span></div><div class="line"><span class="regexp">      &#125;</span></div><div class="line"><span class="regexp">      return (</span></div><div class="line"><span class="regexp">        &lt;Menu.Item key=&#123;item.id&#125;&gt;</span></div><div class="line"><span class="regexp">          &lt;Link to=&#123;item.router&#125;&gt;</span></div><div class="line"><span class="regexp">            &#123;item.icon &amp;&amp; &lt;Icon type=&#123;item.icon&#125; /</span>&gt;&#125;</div><div class="line">            &#123;(!siderFoldN || menuTree.indexOf(item) &lt; <span class="number">0</span>) &amp;&amp; item.name&#125;</div><div class="line">          &lt;<span class="regexp">/Link&gt;</span></div><div class="line"><span class="regexp">        &lt;/</span>Menu.Item&gt;</div><div class="line">      )</div><div class="line">    &#125;)</div><div class="line">  &#125;</div><div class="line">  <span class="keyword">const</span> menuItems = getMenus(menuTree, siderFold)</div><div class="line"></div><div class="line">  <span class="comment">// 保持选中</span></div><div class="line">  <span class="keyword">const</span> getAncestorKeys = <span class="function">(<span class="params">key</span>) =&gt;</span> &#123;</div><div class="line">    <span class="keyword">let</span> map = &#123;&#125;</div><div class="line">    <span class="keyword">const</span> getParent = <span class="function">(<span class="params">index</span>) =&gt;</span> &#123;</div><div class="line">      <span class="keyword">const</span> result = [<span class="built_in">String</span>(levelMap[index])]</div><div class="line">      <span class="keyword">if</span> (levelMap[result[<span class="number">0</span>]]) &#123;</div><div class="line">        result.unshift(getParent(result[<span class="number">0</span>])[<span class="number">0</span>])</div><div class="line">      &#125;</div><div class="line">      <span class="keyword">return</span> result</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">for</span> (<span class="keyword">let</span> index <span class="keyword">in</span> levelMap) &#123;</div><div class="line">      <span class="keyword">if</span> (&#123;&#125;.hasOwnProperty.call(levelMap, index)) &#123;</div><div class="line">        map[index] = getParent(index)</div><div class="line">      &#125;</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">return</span> map[key] || []</div><div class="line">  &#125;</div><div class="line"></div><div class="line">  <span class="keyword">const</span> onOpenChange = <span class="function">(<span class="params">openKeys</span>) =&gt;</span> &#123;</div><div class="line">    <span class="keyword">const</span> latestOpenKey = openKeys.find(<span class="function"><span class="params">key</span> =&gt;</span> !(navOpenKeys.indexOf(key) &gt; <span class="number">-1</span>))</div><div class="line">    <span class="keyword">const</span> latestCloseKey = navOpenKeys.find(<span class="function"><span class="params">key</span> =&gt;</span> !(openKeys.indexOf(key) &gt; <span class="number">-1</span>))</div><div class="line">    <span class="keyword">let</span> nextOpenKeys = []</div><div class="line">    <span class="keyword">if</span> (latestOpenKey) &#123;</div><div class="line">      nextOpenKeys = getAncestorKeys(latestOpenKey).concat(latestOpenKey)</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">if</span> (latestCloseKey) &#123;</div><div class="line">      nextOpenKeys = getAncestorKeys(latestCloseKey)</div><div class="line">    &#125;</div><div class="line">    changeOpenKeys(nextOpenKeys)</div><div class="line">  &#125;</div><div class="line"></div><div class="line">  <span class="keyword">let</span> menuProps = !siderFold ? &#123;</div><div class="line">    onOpenChange,</div><div class="line">    openKeys: navOpenKeys,</div><div class="line">  &#125; : &#123;&#125;</div><div class="line"></div><div class="line"></div><div class="line">  <span class="comment">// 寻找选中路由</span></div><div class="line">  <span class="keyword">let</span> currentMenu</div><div class="line">  <span class="keyword">let</span> defaultSelectedKeys</div><div class="line">  <span class="keyword">for</span> (<span class="keyword">let</span> item <span class="keyword">of</span> menu) &#123;</div><div class="line">    <span class="keyword">if</span> (item.router &amp;&amp; pathToRegexp(item.router).exec(location.pathname)) &#123;</div><div class="line">      currentMenu = item</div><div class="line">      <span class="keyword">break</span></div><div class="line">    &#125;</div><div class="line">  &#125;</div><div class="line">  <span class="keyword">const</span> getPathArray = <span class="function">(<span class="params">array, current, pid, id</span>) =&gt;</span> &#123;</div><div class="line">    <span class="keyword">let</span> result = [<span class="built_in">String</span>(current[id])]</div><div class="line">    <span class="keyword">const</span> getPath = <span class="function">(<span class="params">item</span>) =&gt;</span> &#123;</div><div class="line">      <span class="keyword">if</span> (item &amp;&amp; item[pid]) &#123;</div><div class="line">        result.unshift(<span class="built_in">String</span>(item[pid]))</div><div class="line">        getPath(queryArray(array, item[pid], id))</div><div class="line">      &#125;</div><div class="line">    &#125;</div><div class="line">    getPath(current)</div><div class="line">    <span class="keyword">return</span> result</div><div class="line">  &#125;</div><div class="line">  <span class="keyword">if</span> (currentMenu) &#123;</div><div class="line">    defaultSelectedKeys = getPathArray(menu, currentMenu, <span class="string">'mpid'</span>, <span class="string">'id'</span>)</div><div class="line">  &#125;</div><div class="line"></div><div class="line">  <span class="keyword">return</span> (</div><div class="line">    &lt;Menu</div><div class="line">      &#123;...menuProps&#125;</div><div class="line">      mode=&#123;siderFold ? <span class="string">'vertical'</span> : <span class="string">'inline'</span>&#125;</div><div class="line">      theme=&#123;darkTheme ? <span class="string">'dark'</span> : <span class="string">'light'</span>&#125;</div><div class="line">      onClick=&#123;handleClickNavMenu&#125;</div><div class="line">      defaultSelectedKeys=&#123;defaultSelectedKeys&#125;</div><div class="line">    &gt;</div><div class="line">      &#123;menuItems&#125;</div><div class="line">    &lt;<span class="regexp">/Menu&gt;</span></div><div class="line"><span class="regexp">  )</span></div><div class="line"><span class="regexp">&#125;</span></div><div class="line"><span class="regexp"></span></div><div class="line"><span class="regexp">Menus.propTypes = &#123;</span></div><div class="line"><span class="regexp">  menu: PropTypes.array,</span></div><div class="line"><span class="regexp">  siderFold: PropTypes.bool,</span></div><div class="line"><span class="regexp">  darkTheme: PropTypes.bool,</span></div><div class="line"><span class="regexp">  location: PropTypes.object,</span></div><div class="line"><span class="regexp">  isNavbar: PropTypes.bool,</span></div><div class="line"><span class="regexp">  handleClickNavMenu: PropTypes.func,</span></div><div class="line"><span class="regexp">  navOpenKeys: PropTypes.array,</span></div><div class="line"><span class="regexp">  changeOpenKeys: PropTypes.func,</span></div><div class="line"><span class="regexp">&#125;</span></div><div class="line"><span class="regexp"></span></div><div class="line"><span class="regexp">export default Menus</span></div></pre></td></tr></table></figure>
<blockquote>
<p>//FIXME<br>utils里的arrayToTree没看懂</p>
</blockquote>
]]></content>
      
        <categories>
            
            <category> Front-end </category>
            
            <category> React </category>
            
            <category> Practice </category>
            
        </categories>
        
        
        <tags>
            
            <tag> React </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[工作中的常用软件使用]]></title>
      <url>/2017/08/15/work/work/</url>
      <content type="html"><![CDATA[<script src=/js/crypto-js.js></script><script>
function doDecrypt(pwd, onError) {
	console.log("in doDecrypt");
	var txt = document.getElementById("enc_content").innerHTML;
	var plantext;
	try {
	  	var bytes = CryptoJS.AES.decrypt(txt, pwd);
		plaintext = bytes.toString(CryptoJS.enc.Utf8);
	} catch(err) {
		if(onError) {onError(err);}
		return;
	}
	document.getElementById("enc_content").innerHTML = plaintext;
	document.getElementById("enc_content").style.display = "block";
   document.getElementById("enc_passwd").style.display = "none";
}
</script>
<div id="enc_content" style="display:none"></div><div id="enc_passwd"> <input id="enc_pwd_input" type="text" style="border-radius: 5px;border-style: groove;height: 30px;width: 50%;cursor: auto;font-size: 102%;color: currentColor;outline: none;text-overflow: initial;padding-left: 5px;" onkeydown="if (event.keyCode == 13) { decrypt(); return false;}"> <input type="submit" value="解&nbsp;密" onclick="decrypt()" style="width: 58px;height: 34px;border-radius: 5px;background-color: white;border-style: solid;color: currentColor;"><div id="enc_error" style="display: inline-block;color: #d84527;margin-left: 10px"></div>
<script>
var onError = function(error) {
	document.getElementById("enc_error").innerHTML = "password error!"
};
function decrypt() {
var passwd = document.getElementById("enc_pwd_input").value;
console.log(passwd);
doDecrypt(passwd, onError);
}
</script>
</div>]]></content>
      
        <categories>
            
            <category> Work </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Tool </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[学习过程问题记录]]></title>
      <url>/2017/08/14/front-end/React/record/ReactProject/</url>
      <content type="html"><![CDATA[<script src=/js/crypto-js.js></script><script>
function doDecrypt(pwd, onError) {
	console.log("in doDecrypt");
	var txt = document.getElementById("enc_content").innerHTML;
	var plantext;
	try {
	  	var bytes = CryptoJS.AES.decrypt(txt, pwd);
		plaintext = bytes.toString(CryptoJS.enc.Utf8);
	} catch(err) {
		if(onError) {onError(err);}
		return;
	}
	document.getElementById("enc_content").innerHTML = plaintext;
	document.getElementById("enc_content").style.display = "block";
   document.getElementById("enc_passwd").style.display = "none";
}
</script>
<div id="enc_content" style="display:none">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</div><div id="enc_passwd"> <input id="enc_pwd_input" type="text" style="border-radius: 5px;border-style: groove;height: 30px;width: 50%;cursor: auto;font-size: 102%;color: currentColor;outline: none;text-overflow: initial;padding-left: 5px;" onkeydown="if (event.keyCode == 13) { decrypt(); return false;}"> <input type="submit" value="解&nbsp;密" onclick="decrypt()" style="width: 58px;height: 34px;border-radius: 5px;background-color: white;border-style: solid;color: currentColor;"><div id="enc_error" style="display: inline-block;color: #d84527;margin-left: 10px"></div>
<script>
var onError = function(error) {
	document.getElementById("enc_error").innerHTML = "password error!"
};
function decrypt() {
var passwd = document.getElementById("enc_pwd_input").value;
console.log(passwd);
doDecrypt(passwd, onError);
}
</script>
</div>]]></content>
      
        <categories>
            
            <category> Front-end </category>
            
            <category> Record </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Summary </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[react-router学习笔记(未完成整理)]]></title>
      <url>/2017/08/14/front-end/React/TechStack/react-router/</url>
      <content type="html"><![CDATA[<p><a href="http://react-guide.github.io/react-router-cn/docs/API.html" target="_blank" rel="external">React中文文档——API</a></p>
<h2 id="概念简介"><a href="#概念简介" class="headerlink" title="概念简介"></a>概念简介</h2><p><a href="http://www.jianshu.com/p/e3adc9b5f75c" target="_blank" rel="external">初探 React Router 4.0</a><br>上面链接详细讲解了React-router相关npm包的区别与联系</p>
<blockquote>
<p>react-router React Router 核心<br>react-router-dom 用于 DOM 绑定的 React Router(包含react-router)<br>react-router-native 用于 React Native 的 React Router<br>react-router-redux React Router 和 Redux 的集成<br>react-router-config 静态路由配置的小助手</p>
</blockquote>
<p>由上可知，若需要对dom操作，我们可以只导入react-router-dom<br>FIXME: dva使用的是ract-router，但<link> <browserrouter>这些组件也可以用,why???<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">npm install --save react-router-dom</div></pre></td></tr></table></figure></browserrouter></p>
<h2 id="react-router内部组件介绍"><a href="#react-router内部组件介绍" class="headerlink" title="react-router内部组件介绍"></a>react-router内部组件介绍</h2><p>推荐<a href="http://www.ruanyifeng.com/blog/2016/05/react_router.html?utm_source=tool.lu" target="_blank" rel="external">阮一峰React-router教程</a>，简单明了介绍了ROUTER组件的用法及相关参数配置</p>
<h3 id="Router"><a href="#Router" class="headerlink" title="Router"></a>Router</h3><p>放置Route的容器，也可以嵌套其他组件，按序摆置，也可被嵌套进其他组件<br>要Routing的组件必须在Router中，可与Route同级也可包含route<br>示例：<hashrouter history="{hashHistory}"><br>History:Router 中有一个属性 history 的规则，这边使用我们使用 hashHistory，使用 routing 将由 hash（#）变化决定。例如：当使用者拜访 <a href="http://www.github.com/，实际看到的会是" target="_blank" rel="external">http://www.github.com/，实际看到的会是</a> <a href="http://www.github.com/#/。" target="_blank" rel="external">http://www.github.com/#/。</a><br>  A. hashHistory会通过 hash 进行对应。好处是简单易用，不用多余设定。<br>  B. browserHistory<br>      适用于伺服器端渲染，但需要设定伺服器端避免处理错误，这部份我们会在后面的章节详细说明。注意的是若是使用 Webpack 开发用伺服器需加上 –history-api-fallback<br>  C. createMemoryHistory 主要用于伺服器渲染，使用上会建立一个存在记忆体的 history 物件，不会修改浏览器的网址位置。</hashrouter></p>
<h3 id="Route负责URL和对应的组件关系，可有多个"><a href="#Route负责URL和对应的组件关系，可有多个" class="headerlink" title="Route负责URL和对应的组件关系，可有多个"></a>Route负责URL和对应的组件关系，可有多个</h3><p>示例：<route path="/inbox" component="{Inbox}"><br>一般嵌套在Router中，也可嵌套于其他组件中，相当于添加到组件末端<br>path: Route的一个属性,是对应 URL 的规则。和Link组件的to属性中的路径相互对应<br>component:属性,指定此路由目的组件</route></p>
<h3 id="IndexRoute"><a href="#IndexRoute" class="headerlink" title="IndexRoute"></a>IndexRoute</h3><p>由于 / 情况下 App 组件对应的 this.props.children会是undefinded，所以使用 IndexRoute 来解决对应问题。这样当 URL 为 / 时将会对应到 Home 组件。不过要注意的是 IndexRoute 没有 path 属性。</p>
<h3 id="Link"><a href="#Link" class="headerlink" title="Link"></a>Link</h3><p>Link 组件主要用于点击后连接转换，可以想成是 <a> 超连接的 React 版本。若是希望当点击时候有对应的 css style，可以使用 activeStyle、activeClassName 去做设定。to属性用于指定链接地址</a></p>
<h3 id="IndexLink"><a href="#IndexLink" class="headerlink" title="IndexLink"></a>IndexLink</h3><p>IndexLink 主要是了处理 index 用途，特别注意当 child route actived 时，parent route 也会 actived。所以我们回首页的连接使用 <indexlink> 内部的 onlyActiveOnIndex 属性来解决这个问题。</indexlink></p>
<h3 id="Redirect、IndexRedirect"><a href="#Redirect、IndexRedirect" class="headerlink" title="Redirect、IndexRedirect"></a>Redirect、IndexRedirect</h3><p>这边虽然没有用到，但若读者有需要使用到连接跳转的话可以参考这两个组件，用法类似于 Route 和 IndexRedirect。</p>
<h2 id="组件间参数传递"><a href="#组件间参数传递" class="headerlink" title="组件间参数传递"></a>组件间参数传递</h2><p><a href="http://blog.csdn.net/qq_23158083/article/details/68488831" target="_blank" rel="external">react router页面传值的三种方法</a><br>tips: </p>
<blockquote>
<p>path对应router定义的components中可以取到this.props.location</p>
</blockquote>
<h2 id="组件使用实例"><a href="#组件使用实例" class="headerlink" title="组件使用实例"></a>组件使用实例</h2><h3 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h3><p><a href="https://github.com/vonxq/react-router-demo" target="_blank" rel="external">react-router-demo  github仓库</a></p>
<h3 id="代码片段"><a href="#代码片段" class="headerlink" title="代码片段"></a>代码片段</h3><p>推荐<a href="http://www.ruanyifeng.com/blog/2016/05/react_router.html?utm_source=tool.lu" target="_blank" rel="external">阮一峰React-router教程</a>，简单明了介绍了ROUTER组件的用法及相关参数配置<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// 组件本身可直接被渲染</span></div><div class="line"><span class="comment">// ROuter为容器，路由由Route定义，path可匹配通配符</span></div><div class="line"><span class="comment">// 路由嵌套1</span></div><div class="line">&lt;Router history=&#123;hashHistory&#125;&gt;</div><div class="line">  &lt;Route path=<span class="string">"/"</span> component=&#123;App&#125;&gt;</div><div class="line">    &lt;Route path=<span class="string">"/repos"</span> component=&#123;Repos&#125;/&gt;</div><div class="line">    &lt;Route path=<span class="string">"/about"</span> component=&#123;About&#125;/&gt;</div><div class="line">  &lt;<span class="regexp">/Route&gt;</span></div><div class="line"><span class="regexp">&lt;/</span>Router&gt;</div><div class="line"><span class="comment">//路由嵌套2（在routes中传入）</span></div><div class="line"><span class="keyword">let</span> routes = <span class="xml"><span class="tag">&lt;<span class="name">Route</span> <span class="attr">path</span>=<span class="string">"/"</span> <span class="attr">component</span>=<span class="string">&#123;App&#125;</span>&gt;</span></span></div><div class="line">  &lt;Route path="/repos" component=&#123;Repos&#125;/&gt;</div><div class="line">  &lt;Route path="/about" component=&#123;About&#125;/&gt;</div><div class="line">&lt;/Route&gt;;</div><div class="line">&lt;Router routes=&#123;routes&#125; history=&#123;browserHistory&#125;/&gt;</div><div class="line">// App定义，必须的</div><div class="line">export default React.createClass(&#123;</div><div class="line">  render() &#123;</div><div class="line">          // this.props.children子组件</div><div class="line">    return &lt;div&gt;</div><div class="line">      &#123;this.props.children&#125;</div><div class="line">    &lt;/div&gt;</div><div class="line">  &#125;</div><div class="line">&#125;)</div></pre></td></tr></table></figure></p>
]]></content>
      
        <categories>
            
            <category> Front-end </category>
            
            <category> React </category>
            
        </categories>
        
        
        <tags>
            
            <tag> React </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[webpack及webpack-dev-server使用小结]]></title>
      <url>/2017/08/11/front-end/React/TechStack/webpackAndWebpack-dev-server/</url>
      <content type="html"><![CDATA[<p>webpack相关整理<br><a id="more"></a></p>
<h2 id="webpack介绍"><a href="#webpack介绍" class="headerlink" title="webpack介绍"></a>webpack介绍</h2><p>注意： 需全局+本地安装，只用在开发环境的依赖</p>
<h3 id="配置文件"><a href="#配置文件" class="headerlink" title="配置文件"></a>配置文件</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">const</span> path = <span class="built_in">require</span>(<span class="string">'path'</span>);</div><div class="line"><span class="built_in">module</span>.exports = &#123;</div><div class="line">    <span class="comment">/*入口*/</span></div><div class="line">    entry: path.join(__dirname, <span class="string">'src/index.js'</span>),</div><div class="line">    </div><div class="line">    <span class="comment">/*输出到dist文件夹，输出文件名字为bundle.js*/</span></div><div class="line">    output: &#123;</div><div class="line">        path: path.join(__dirname, <span class="string">'./dist'</span>),</div><div class="line">        filename: <span class="string">'bundle.js'</span></div><div class="line">    &#125;</div><div class="line">     <span class="comment">/*src文件夹下面的以.js结尾的文件，要使用babel解析*/</span></div><div class="line"> <span class="comment">/*cacheDirectory是用来缓存编译结果，下次编译加速*/</span></div><div class="line"> <span class="comment">/*当有文件需要loader处理时加上*/</span></div><div class="line">    <span class="built_in">module</span>: &#123;</div><div class="line">      rules: [&#123;</div><div class="line">          test: <span class="regexp">/\.js$/</span>,</div><div class="line">          use: [<span class="string">'babel-loader?cacheDirectory=true'</span>],</div><div class="line">          include: path.join(__dirname, <span class="string">'src'</span>)</div><div class="line">      &#125;]</div><div class="line">&#125;;</div></pre></td></tr></table></figure>
<h2 id="webpack使用"><a href="#webpack使用" class="headerlink" title="webpack使用"></a>webpack使用</h2><p>webpack中可以写commonjs格式的require同步语法，可以写AMD格式的require回调语法，还有一个require.ensure，以及webpack自己定义的require.include，再加上ES6的import语法<br>具体加载不同解析：<br><a href="http://www.cnblogs.com/lan  eyfu/p/6262321.html" target="_blank" rel="external">webpack解惑：require的五种用法</a><br>用法如下： </p>
<blockquote>
<p>// <a href="http://www.jianshu.com/p/dcb28b582318" target="_blank" rel="external">http://www.jianshu.com/p/dcb28b582318</a><br>方式1:<br>// 全局模式安装webpack<br>npm install webpack –g<br>// 在终端输入<br>$ webpack // &lt;–使用webpack.config.js生成bundle<br>方式 2 :<br>// 费全局模式安装webpack然后添加到package.json依赖里边<br>npm install webpack –save<br>// 添加build命令到package.json的scripts配置项<br>“scripts”: {<br> “build”: “webpack –config webpack.config.prod.js -p”,<br> …<br> }<br>// 用法：<br>“npm run build”</p>
</blockquote>
<h2 id="webpack别名设置"><a href="#webpack别名设置" class="headerlink" title="webpack别名设置"></a>webpack别名设置</h2><p>给绝对路径取个别名，之后可以在文件中使用绝对路径来导入相应内容，就不用点点点的相对路径了<br>webpack中增加如下字段：<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">resolve: &#123;</div><div class="line">    alias: &#123;</div><div class="line">        pages: path.join(__dirname, <span class="string">'src/pages'</span>),</div><div class="line">        component: path.join(__dirname, <span class="string">'src/component'</span>),</div><div class="line">        router: path.join(__dirname, <span class="string">'src/router'</span>)</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>之后再文件中import的路径就可以用绝对路径啦</p>
<h3 id="webpack模块加载与ES6-import"><a href="#webpack模块加载与ES6-import" class="headerlink" title="webpack模块加载与ES6 import"></a>webpack模块加载与ES6 import</h3><p>参考<a href="http://www.jianshu.com/p/37c644db7707" target="_blank" rel="external">React开发中的疑问：require和import的区别</a></p>
<h2 id="webpack-devserver"><a href="#webpack-devserver" class="headerlink" title="webpack devserver"></a>webpack devserver</h2><p>一个Node.js服务器（需要开发者从npm自行安装，有利于在开发模式下编译）<br>这是一个基于Express.js框架开发的web server，默认监听8080端口。server内部调用Webpack，这样做的好处是提供了额外的功能如热更新“Live Reload”以及热替换“Hot Module Replacement”（即HMR）。<br>用法如下：</p>
<blockquote>
<p>// <a href="http://www.jianshu.com/p/dcb28b582318" target="_blank" rel="external">http://www.jianshu.com/p/dcb28b582318</a><br>方式 1:<br>// 全局安装<br>npm install webpack-dev-server –save<br>// 终端输入<br>$ webpack-dev-server –inline –hot<br>用法 2:<br>// 添加到package.json scripts<br>“scripts”: {<br> “start”: “webpack-dev-server –inline –hot”,<br> …<br> }<br>// 运行：<br>$ npm start<br>// 浏览器预览：<br><a href="http://localhost:8080" target="_blank" rel="external">http://localhost:8080</a></p>
</blockquote>
]]></content>
      
        <categories>
            
            <category> Front-end </category>
            
            <category> React </category>
            
        </categories>
        
        
        <tags>
            
            <tag> React </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[hexo工程同步]]></title>
      <url>/2017/04/09/Tec/Blog/hexo-project-sync/</url>
      <content type="html"><![CDATA[<p>参考：<br><a href="http://blog.csdn.net/arkblue/article/details/9568249/" target="_blank" rel="external">git远程本地分支操作</a><br><a href="https://www.zhihu.com/question/21193762" target="_blank" rel="external">使用hexo，换电脑怎么更新博客–知乎</a><br><a id="more"></a></p>
<h1 id="新方法"><a href="#新方法" class="headerlink" title="新方法"></a>新方法</h1><p>试了个新的同步策略，可以避免github开源项目泄露密码，具体操作:</p>
<ol>
<li>把hexo工程代码放到码云平台，私有</li>
<li>在此工程中deploy博客到github</li>
<li>想要加快响应速度，可以将github pages同步到码云的pages，pages命名最好和用户名一样，不然可能会出现界面样式加载不完整，404错误等</li>
<li>从云端同步到本地：git pull<h5 id="本地hexo同步到github"><a href="#本地hexo同步到github" class="headerlink" title="本地hexo同步到github"></a>本地hexo同步到github</h5>我的hexo博客一开始只通过deploy和github联系，但要同步的话必须先把云端的工程pull下来<br>具体实现：</li>
<li>把已经deploy的repository pull下来，在repository中新建分支hexo，并切换到hexo分支</li>
<li>删除掉pull下来的文件夹中所有内容</li>
<li>把电脑上的hexo文件夹内容全部拷贝到pull下来的文件夹中</li>
<li><p>依次执行以下命令将改动推送到GitHub（此时当前分支应为hexo）</p>
 <figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">git add .</div><div class="line">git commit -m &quot;...&quot;</div><div class="line">git push origin hexo</div></pre></td></tr></table></figure>
</li>
<li><p>以后可直接在此文件夹中进行hexo s、g、d操作,不用切换分支<br>注： 最好在deploy前先执行步骤4，否则工程不是最新的，换电脑有些deply的内容会消失</p>
</li>
</ol>
<p>到此，便实现了hexo工程的云端同步</p>
<h4 id="云端hexo同步到本地（换电脑）"><a href="#云端hexo同步到本地（换电脑）" class="headerlink" title="云端hexo同步到本地（换电脑）"></a>云端hexo同步到本地（换电脑）</h4><p>1、先安装git，node.js(可直接在官网现在，安装包很小，npm包含在其中)<br>2、git clone云端代码库<br>3、git bash下执行：(不需要执行hexo init)<br>// 用yarn也可，记得使用<strong>yarn global bin</strong>得到yarn全局安装目录并添加到环境变量中<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">npm install hexo -g</div><div class="line">npm install // 在项目目录下执行</div><div class="line">npm install hexo-deployer-git -g</div></pre></td></tr></table></figure></p>
<p>注：第一第二句不能反，否则需多执行一遍npm install</p>
<h4 id="本地在deploy到云端"><a href="#本地在deploy到云端" class="headerlink" title="本地在deploy到云端"></a>本地在deploy到云端</h4><ol>
<li><p>先通过以下代码设置用户邮箱和名字</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">git config --global user.email &quot;vonxq@foxmail.com&quot;</div><div class="line"> git config --global user.name &quot;anne:ws2012&quot;</div></pre></td></tr></table></figure>
</li>
<li><p>一开始我的博客设置的就是github通过SSH进行安全通信，换了电脑rsa值也会变，必须重新配置，当然也可以直接复制旧电脑的.ssh文件夹到新电脑</p>
</li>
<li>执行hexo同步代码即可</li>
</ol>
<p>tips:hexo d后我的master分支直接和hexo分支内容相同，也就是说我整个工程都被同步上去了，目前还不知道原因，但将.deploy_git文件夹删除后再重新同步问题就消失了。</p>
<h4 id="其他办法"><a href="#其他办法" class="headerlink" title="其他办法"></a>其他办法</h4><p>有一个插件<a href="https://github.com/coneycode/hexo-git-backup" target="_blank" rel="external">hexo-git-backup</a>可以同步hexo和其主题，使用也很方便，但现在仅支持master分支，不想折腾所以先这样了</p>
<h4 id="git放弃本地修改，强制更新"><a href="#git放弃本地修改，强制更新" class="headerlink" title="git放弃本地修改，强制更新"></a>git放弃本地修改，强制更新</h4><p>pull = fetch + merge<br><a href="https://stackoverflow.com/questions/15745045/how-do-i-resolve-git-saying-commit-your-changes-or-stash-them-before-you-can-me/30637048" target="_blank" rel="external">直接pull失败的解决方案</a><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">git fetch --all</div><div class="line">git reset --hard origin/master</div></pre></td></tr></table></figure></p>
<p>注：Git fetch 只是下载远程的库的内容，不做任何的合并 git reset 把HEAD指向刚刚下载的最新的版本</p>
]]></content>
      
        <categories>
            
            <category> Tec </category>
            
            <category> Blog </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Hexo </tag>
            
            <tag> Git </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[胡思乱想]]></title>
      <url>/2017/04/04/dailyDiary/2017/these%20days/</url>
      <content type="html"><![CDATA[<script src=/js/crypto-js.js></script><script>
function doDecrypt(pwd, onError) {
	console.log("in doDecrypt");
	var txt = document.getElementById("enc_content").innerHTML;
	var plantext;
	try {
	  	var bytes = CryptoJS.AES.decrypt(txt, pwd);
		plaintext = bytes.toString(CryptoJS.enc.Utf8);
	} catch(err) {
		if(onError) {onError(err);}
		return;
	}
	document.getElementById("enc_content").innerHTML = plaintext;
	document.getElementById("enc_content").style.display = "block";
   document.getElementById("enc_passwd").style.display = "none";
}
</script>
<div id="enc_content" style="display:none">U2FsdGVkX19pi4b60pwy6mGXxNO2BvZ3vaN5N4eLI6F5Xlm+6/PjKgXKCPw902YoHfnGkXvIfNCaBfklcrFXqkszIfKWvi+NO/k2cszOomkv1OEdG68MGiFPoUEoWuzykG3BRGXc1L5HO8NLnZXsWNOnOIZeP1Te4pq3jLSJ0r+sEiuRzHO7DBkVS3UFxaYIHzmbWqETesLttvxZNYnoDHsYjz9npAsn0H8t2Zu2aaGtDQXWBHWGCCCaQFRHB1uihpPJuWSzY37Bwf2S/K7+iN39pPBVI0LUsJf/G3F1g2+Gp5O6c5TePS9PPHQD/oMOVUh8kFUxIFxjUR8q+ho/eVwQ3Pn+g2l4NFZl5jaTGM0xhls1ur9DFeauEIFJyZssuD1f2HZ2upzGwSm0aTeBhS/D47ZOM1n1S1ktRoNlijHZMD4MIOL80V8V6pR6dl6d4/ZlRaNBS1pKYqaXO/WkvOZ0NI36hdSL1koKZBo4rQD7miHPVMpJA0ugpr8kFIV1</div><div id="enc_passwd"> <input id="enc_pwd_input" type="text" style="border-radius: 5px;border-style: groove;height: 30px;width: 50%;cursor: auto;font-size: 102%;color: currentColor;outline: none;text-overflow: initial;padding-left: 5px;" onkeydown="if (event.keyCode == 13) { decrypt(); return false;}"> <input type="submit" value="解&nbsp;密" onclick="decrypt()" style="width: 58px;height: 34px;border-radius: 5px;background-color: white;border-style: solid;color: currentColor;"><div id="enc_error" style="display: inline-block;color: #d84527;margin-left: 10px"></div>
<script>
var onError = function(error) {
	document.getElementById("enc_error").innerHTML = "password error!"
};
function decrypt() {
var passwd = document.getElementById("enc_pwd_input").value;
console.log(passwd);
doDecrypt(passwd, onError);
}
</script>
</div>]]></content>
      
        <categories>
            
            <category> dailyDiary </category>
            
        </categories>
        
        
        <tags>
            
            <tag> von </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[服务器搭建问题汇总]]></title>
      <url>/2017/03/19/Tec/server/Sever-Building%20Q&amp;A/</url>
      <content type="html"><![CDATA[<h3 id="搭建过程"><a href="#搭建过程" class="headerlink" title="搭建过程"></a>搭建过程</h3><p><a href="http://blog.csdn.net/csdnhyp/article/details/51930878" target="_blank" rel="external">腾讯云服务器linux系统下apache php mysql安装</a><br><a href="http://www.centoscn.com/CentosBug/softbug/2016/0115/6660.html" target="_blank" rel="external">解决CentOS7 无法启动mysql 的解决办法</a><br><a href="http://xbwcc.com.cn/2016/01/13/%E8%85%BE%E8%AE%AF%E4%BA%91%E5%85%AC%E7%BD%91ip%E8%AE%BF%E9%97%AE%E4%B8%8D%E9%80%9A%E7%9A%84%E9%97%AE%E9%A2%98%E8%A7%A3%E5%86%B3/" target="_blank" rel="external">腾讯云公网IP访问不通的问题解决</a><br>ps:访问时需注意公网ip和内网IP<br><a id="more"></a></p>
<p>传输文件到linux服务器：电脑软件winscp<br>navicat可以在两个连接中传输数据库数据<br>5.配置好LAMP后，进入var/www/html下，这个目录里的文件就是外网所能访问到内容。</p>
<p>php页面打开就自动下载，解析不成功</p>
<p>1.loadmoudle(一直报错)<br><a href="http://www.cnblogs.com/52php/p/5668826.html" target="_blank" rel="external">Linux下Apache、PHP、MySQL默认安装路径</a><br>尝试2.重装php(参考<a href="http://www.cnblogs.com/liulun/p/3535346.html" target="_blank" rel="external">在centos上安装lamp环境</a>)<br>yum install php php-devel<br>重启apache使php生效<br>service httpd restart<br>此时可以在目录：/var/www/html/下建立一个PHP文件<br>代码：<br>&lt;?php phpinfo(); ?&gt;<br>然后访问这个文件，就能看到PHP的一些信息，php.ini配置文件的路径可以在这个页面上看到</p>
<p><a href="http://blog.csdn.net/howlaa/article/details/46707159" target="_blank" rel="external"> Android使用sqlliteOpenhelper更改数据库的存储路径放到SD卡上</a></p>
<p>php的分号害人不浅…..</p>
<h3 id="mysql"><a href="#mysql" class="headerlink" title="mysql"></a>mysql</h3><h4 id="忘记密码："><a href="#忘记密码：" class="headerlink" title="忘记密码："></a>忘记密码：</h4><p><a href="http://www.2cto.com/database/201411/353328.html" target="_blank" rel="external">windows下mysql忘记root密码</a><br><a href="http://blog.csdn.net/u010603691/article/details/50379282" target="_blank" rel="external">MySQL5.7更改密码时出现ERROR 1054 (42S22): Unknown column ‘password’ in ‘field list’</a><br>注：一定得先关服务（名字可能不同）</p>
<p><a href="http://jingyan.baidu.com/article/046a7b3ed85f3ef9c27fa9dc.html" target="_blank" rel="external">mysql开启远程连接服务</a><br>具体步骤：</p>
<blockquote>
<p>1、登录mysql，use mysql<br>2、GRANT ALL PRIVILEGES ON <em>.</em> TO ‘root’@’%’ IDENTIFIED BY ‘root’ WITH GRANT OPTION;修改权限<br>3、刷新：flush privileges;<br>4、使用“select host,user from user;”查看修改是否成功。</p>
</blockquote>
<p>ps：远程连接改表有时会报权限不够，不知道怎么回事，我过了一天再看就自己好了</p>
<h4 id="表中无法插入中文字符"><a href="#表中无法插入中文字符" class="headerlink" title="表中无法插入中文字符"></a>表中无法插入中文字符</h4><p><a href="http://www.cnblogs.com/codeplus/archive/2011/08/02/2125546.html" target="_blank" rel="external">java 向 mysql 插入汉字 Incorrect string value 解决办法</a><br>具体步骤：</p>
<blockquote>
<p>1、查看编码： show variables like ‘character%’ ；<br>2、修改编码：set 变量=utf8;或alter database 数据库名 character set utf8;（第二个不一定有效 ）</p>
</blockquote>
<h3 id="Apache"><a href="#Apache" class="headerlink" title="Apache"></a>Apache</h3><h4 id="服务无法启动"><a href="#服务无法启动" class="headerlink" title="服务无法启动"></a>服务无法启动</h4><p>step1：在命令行里，apache主目录中bin目录下，执行httpd看有什么提示<br>step2: 端口是否被占用，or直接在httpd.conf中修改listen的端口号（修改后访问需加端口号）<br>ps:在命令行用httpd启动apache服务后，不能同时在windows服务中启动该服务</p>
<p>打开apache服务器，配置得好，浏览器中输入，127.0.0.1（即localhost，改了端口号的话请加端口号）就可以看到效果了。<br>这时候你就可以在浏览器中查看编写好的程序了（程序目录由httpd.conf的DocumentRoot指定）。</p>
<h3 id="PHP"><a href="#PHP" class="headerlink" title="PHP"></a>PHP</h3><h4 id="apache无法连接php解析php文件"><a href="#apache无法连接php解析php文件" class="headerlink" title="apache无法连接php解析php文件"></a>apache无法连接php解析php文件</h4><p>指定httpd.conf中的PHPIniDir参数<br>      如:PHPIniDir “D:/shenghuo/php/php.ini”  (需要要指定php.ini的绝对路径)<br>参考：<br><a href="http://blog.163.com/wf_shunqiziran/blog/static/176307209201332102259182/" target="_blank" rel="external">PHP :Call to undefined function mysql_connect()</a><br><a href="http://jingyan.baidu.com/article/1709ad808caf9d4634c4f0f8.html" target="_blank" rel="external">JSP环境搭建</a></p>
<p>tips:<br>购买服务器：<br>腾讯云：<br><a href="https://www.ihewro.com/archives/619/" target="_blank" rel="external">腾讯云“云+校园计划”学生机自动抢购脚本</a><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line">var getThread = null;</div><div class="line"> var timeInterval = 20;</div><div class="line"> var getCount = 0;</div><div class="line"> if (!getThread) &#123;</div><div class="line">     getThread = setInterval(() =&gt; &#123;</div><div class="line">         if ($(&quot;button[hotrep=&apos;qcact.campus.getVoucherBtn&apos;]&quot;)[0].disabled) &#123;</div><div class="line">             $(&quot;button[hotrep=&apos;qcact.campus.getVoucherBtn&apos;]&quot;).attr(&quot;disabled&quot;,false);</div><div class="line">         &#125;</div><div class="line">         $(&quot;button[hotrep=&apos;qcact.campus.getVoucherBtn&apos;]&quot;).click();</div><div class="line">         if ($(&quot;.J-close&quot;)) &#123;</div><div class="line">             $(&quot;.J-close&quot;).click();</div><div class="line">         &#125;</div><div class="line">         console.log(&quot;Already Tried: &quot; + (++getCount) + &quot; Times.&quot;);</div><div class="line">     &#125;, timeInterval);</div><div class="line"> &#125;</div></pre></td></tr></table></figure></p>
]]></content>
      
        <categories>
            
            <category> Tec </category>
            
            <category> Server </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Mysql </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[软件使用技巧简记]]></title>
      <url>/2017/03/14/Tec/accumulation/Software%20skills/</url>
      <content type="html"><![CDATA[<h3 id="WebStorm"><a href="#WebStorm" class="headerlink" title="WebStorm"></a>WebStorm</h3><p>1、软换行<br>    左侧行标出右键，选择soft-wrap<br>    ps：写markdown不换行真真不行</p>
]]></content>
      
        <categories>
            
            <category> Tec </category>
            
            <category> Accumulation </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[移动通信]]></title>
      <url>/2017/03/14/Tec/accumulation/Mobile%20communication/</url>
      <content type="html"><![CDATA[<p>一直有个问题困惑了我好久，总是在有条件的时候忘记了查，今天总算记住了，大概记一下查询结果吧。<br>问题：手机是怎么上传和接收数据的？它没有固定IP，并且一直在移动，很可能现在管它的“路由器”（我以为…）就完全联系不上它了呢？<br>或者说也有可能其他手机收到相同的消息，如何取舍？<br>简答：蜂窝数据通信，基站分区，按区通信，移动实时切换小区。收到相同消息应该和路由相同，有一套协议决定手机是处理还是丢弃这些数据。<br><a id="more"></a><br>参考信息：<br><a href="https://wenku.baidu.com/view/b1ad1787856a561252d36ffc.html" target="_blank" rel="external">蜂窝通信原理</a><br><a href="http://www.docin.com/p-1762104253.html" target="_blank" rel="external">蜂窝通信中的小区切换</a><br><a href="http://www.knowsky.com/12467.html" target="_blank" rel="external">蜂窝IP技术</a><br>衍生问题：通信怎么在路由层面保证安全性？上层可以加密，但路由在一个小的局域网里应该是通过广播来找到目标的吧？网线上又没有主机信息…<br>答案容我回去看看书先。</p>
<p>PS:当初学数据网络通信也算是被折磨得不行，书那么厚，考点那么多也记不进去。结果不上课了倒是有点兴趣了，好读书不求甚解，主要是看了详解我也不一定记得住，当初考过的那么多课程也是遗忘居多，记个大概吧，就当知识扩展了，主次要分明。</p>
]]></content>
      
        <categories>
            
            <category> Tec </category>
            
            <category> Accumulation </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Network </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Android使用高德地图API]]></title>
      <url>/2017/03/06/Tec/accumulation/Android%20use%20map%20API/</url>
      <content type="html"><![CDATA[<p>毕设需要用到室内定位，在网上找到了高德地图的Api，记录一下使用中遇到的问题及解决办法。<br>高德地图创建应用之后需要新建一个key，需要输入app的SHA1值，找到这个值的办法：<br>（参考自<a href="http://blog.csdn.net/kezhongke/article/details/42678077" target="_blank" rel="external">Android Studio中获取sha1证书指纹数据的方法</a>）</p>
<blockquote>
<p>为了避免注册时弄错签名，建议直接用打包出来的apk查看签名，具体如下：<br> 1） 将apk修改后缀为 .rar文件后解压；<br> 2） 进入解压后的META-INF目录，该目录下会存在文件CERT.RSA<br> 3） 在该目录下打开cmd，输入命令 ：keytool -printcert -file CERT.RSA<br> 这里将会显示出MD5和SHA1签名。(此处也可以直接在git bash中输入命令，亲测有效)<br> <a id="more"></a><br> <a href="http://lbs.amap.com/api/android-location-sdk/guide/create-project/android-studio-create-project" target="_blank" rel="external">Android Studio 配置工程</a></p>
</blockquote>
]]></content>
      
        <categories>
            
            <category> Tec </category>
            
            <category> Accumulation </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Android </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[恢复Android工程]]></title>
      <url>/2017/03/01/Tec/accumulation/Recover%20Android%20PROS/</url>
      <content type="html"><![CDATA[<p><a href="http://blog.csdn.net/itluochen/article/details/52816059" target="_blank" rel="external">导入android studio的正确姿势</a><br>如上所示，只要新建工程，再把工程里的几个gradle相关文件覆盖到徐导入文件里就行了<br><img src="http://img.blog.csdn.net/20141115095209446?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvZWNsaXBzZXh5cw==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center" alt="需复制的文件"><br>要是老是报错，还是建议下载一下适配sdk吧，毕竟有些新功能也许是自己的sdk版本没有的<br><a id="more"></a><br>尝试1.直接打开工程<br>报错：Error:Failed to find Build Tools revision 24.0.3  Install Build Tools 24.0.3 and sync project<br>是build Tools版本不一致，查看自己版本号：<br>方法1.Android SDK Manager–&gt;Tools–&gt;就可以看到,若未显示可直接打开sdk目录下的buildtools文件夹即可看到<br>方法2.可以右键项目名称，选择open module setting，在properties里选择build tools version，可选的即存在的版本号</p>
<p>打开app中的build.gradle修改<br>修改Application Id可以将同一个应用（Application Id不同）同时安装在同一个手机上<br>修改了version之后一直报乱码错误，心累…然后我就直接把version字段删除了，奇妙地停止了报错，开始安装，又报错，不过手机上显示安装好了</p>
<p>尝试2.新建工程<br>。。。</p>
]]></content>
      
        <categories>
            
            <category> Tec </category>
            
            <category> Accumulation </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Android </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[前端轮子]]></title>
      <url>/2017/02/27/front-end/basic/Web%20wheels/</url>
      <content type="html"><![CDATA[<h1 id="前端小轮子"><a href="#前端小轮子" class="headerlink" title="前端小轮子"></a>前端小轮子</h1><p>最近发现了一个不错的网站<a href="http://www.jq22.com/" target="_blank" rel="external">jQuery插件库</a>，里面有不少可以参考的小轮子，源码演示都有<br><a id="more"></a></p>
<h2 id="js库"><a href="#js库" class="headerlink" title="js库"></a>js库</h2><h3 id="Lodash"><a href="#Lodash" class="headerlink" title="Lodash"></a>Lodash</h3><p><a href="http://www.jianshu.com/p/7436e40ac5d1" target="_blank" rel="external">Lodash介绍</a><br><a href="http://lodashjs.com/docs/" target="_blank" rel="external">API文档</a></p>
]]></content>
      
        <categories>
            
            <category> Front-end </category>
            
            <category> Basic </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Plugins </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[jdk安装配置记录]]></title>
      <url>/2017/02/27/Tec/java/jdk%20install%20and%20configure/</url>
      <content type="html"><![CDATA[<h1 id="JDK安装配置记录"><a href="#JDK安装配置记录" class="headerlink" title="JDK安装配置记录"></a>JDK安装配置记录</h1><p>参考[ Java环境变量设置]（<a href="http://blog.csdn.net/badboy2008/article/details/41316253" target="_blank" rel="external">http://blog.csdn.net/badboy2008/article/details/41316253）</a><br><a id="more"></a></p>
<ol>
<li>安装JDK<br>我的默认安装位置是C:\Program Files\Java</li>
<li>设置JAVA_HOME，指向jdk的安装目录这一级即可<br>系统——&gt;更改设置——&gt;高级——&gt;环境变量<br>新建变量JAVA_HOME,我的值为C:\Program Files\Java\jdk1.8.0_71<br>3.设置Path变量(path变量是操作系统查找命令的目录)<br>在Path值后面加上;%JAVA_HOME%\bin;%JAVA_HOME%\jre\bin</li>
<li>设置CLASSPATH（是java执行.class文件查找源文件的目录，可不设，只用当下目录）<br>新建环境变量CLASSPATH，设置值为.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar注意值前面的两个符号.;</li>
</ol>
]]></content>
      
        <categories>
            
            <category> Tec </category>
            
            <category> Java </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Java </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[ise仿真小结]]></title>
      <url>/2017/02/27/Tec/accumulation/ise%20simulation/</url>
      <content type="html"><![CDATA[<h1 id="ISE仿真小结"><a href="#ISE仿真小结" class="headerlink" title="ISE仿真小结"></a>ISE仿真小结</h1><p>1.上升沿下降沿啥的一定记得把要判断的时钟放入process的敏感元件中<br>2.signal有延时问题，信号量过多的时序仿真容易出错，最好把常变化的量用variable来做<br><a id="more"></a><br>3.仿真步骤：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">&gt;1.新建test ben文件，绑定到某一module文件上</div><div class="line">2.修改tb文件内容，为输入量赋值并保证一定时序</div><div class="line">3.点击仿真即可（注：module绑定错了可能没输出）</div></pre></td></tr></table></figure>]]></content>
      
        <categories>
            
            <category> Tec </category>
            
            <category> Accumulation </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[网络小常识]]></title>
      <url>/2017/02/27/Tec/accumulation/Network%20commen%20sense/</url>
      <content type="html"><![CDATA[<header class="article-header">

<h1 id="电脑小常识"><a href="#电脑小常识" class="headerlink" title="电脑小常识"></a>电脑小常识</h1><h3 id="电脑host文件修改办法"><a href="#电脑host文件修改办法" class="headerlink" title="电脑host文件修改办法"></a>电脑host文件修改办法</h3><p>经常会遇到网站打不开或者打开慢的情况，这有跟DNS服务器解析地址的快慢有关，好的DNS可以更快解析到IP地址，提供最快连接线路，网页也就能更快访问到。<br>为了更快地解析到IP地址，我们可以自己设置电脑对一些站点的解析,这样不用走DNS服务器,能够更快地获取网页信息<br>具体办法：修改hosts文件</p>
<ol>
<li>先在<a href="http://tool.chinaz.com/dns?type=1&amp;host=&amp;ip=" target="_blank" rel="external">DNS查询</a>上查到网页的相应IP</li>
<li><p>找到C:\Windows\System32\drivers\etc下的hosts文件，用记事本打开，然后再文件最后添加解析即可，格式如下：</p>
<blockquote>
<p>IP localhost(如104.25.15.31 codepen.io）</p>
</blockquote>
</li>
<li><p>最后刷新DNS</p>
<pre><code>ipconfig /flushdns
</code></pre></li>
</ol>
<h2 id="IP地址网段"><a href="#IP地址网段" class="headerlink" title="IP地址网段"></a>IP地址网段</h2><p>&gt;<br>IPv4地址分为A、B、C、D、E五类，出去特殊作用的D、E两类，剩下的A、B、C三类地址是我们常见的IP地址段。<br>在这三类地址中，绝大多数的IP地址都是公有地址，需要向国际互联网信息中心申请注册。但是在IPv4地址协议中预留了3个IP地址段，作为私有地址，供组织机构内部使用。<br>这三个地址段分别位于A、B、C三类地址内：<br>A类地址：10.0.0.0–10.255.255.255<br>B类地址：172.16.0.0–172.31.255.255<br>C类地址：192.168.0.0–192.168.255.255<br>所以局域网在选取使用私有地址时，一般会按照实际需要容纳的主机数来选择私有地址段。常见的局域网由于容量小，一般选择C类的192.168.0.0作为地址段使用，一些大型企业就需要使用B类甚至A类地址段作为内部网络的地址段。<br>最后需要补充说明的是，由于NAT和子网掩码的存在，实际在使用中，一个C类大小的局域网也可以选择A类的10.0.0.0网段作为自己的IP地址段。<br>子网掩码: </p>
</header>]]></content>
      
        <categories>
            
            <category> Tec </category>
            
            <category> Accumulation </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Network </tag>
            
            <tag> dns </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[JS数组常见操作(todo)]]></title>
      <url>/2017/02/27/front-end/basic/js/array/</url>
      <content type="html"><![CDATA[<h1 id="JS数组常见操作"><a href="#JS数组常见操作" class="headerlink" title="JS数组常见操作"></a>JS数组常见操作</h1><h2 id="数组遍历"><a href="#数组遍历" class="headerlink" title="数组遍历"></a>数组遍历</h2><p>主要有for in 、for of、map、filter、forEach、every</p>
<ul>
<li><p>for(let … of …)和for (let … in …)</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">let</span> arr = [<span class="string">'a'</span>, <span class="string">'b'</span>]</div><div class="line"><span class="keyword">for</span>( <span class="keyword">let</span> i <span class="keyword">of</span> arr) &#123;</div><div class="line">    <span class="built_in">console</span>.log(i) <span class="comment">// 输出a b</span></div><div class="line">&#125;</div><div class="line"><span class="keyword">for</span>( <span class="keyword">let</span> i <span class="keyword">in</span> arr) &#123;</div><div class="line">    <span class="built_in">console</span>.log(i)<span class="comment">// 输出0 1</span></div><div class="line">&#125;</div></pre></td></tr></table></figure>
</li>
<li><p>forEach<br>((item, index) =&gt; {})</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">let</span> arr = [<span class="string">'a'</span>, <span class="string">'b'</span>]</div><div class="line"><span class="keyword">let</span> brr = arr.forEach(<span class="function">(<span class="params">item,index,arr</span>) =&gt;</span> &#123;</div><div class="line">    <span class="built_in">console</span>.log(item,index)</div><div class="line">    arr[<span class="number">0</span>] = <span class="number">1</span><span class="comment">// arr的值被改变</span></div><div class="line">&#125;)</div><div class="line"><span class="built_in">console</span>.log(arr, brr) <span class="comment">// [1, 'b'] undefined，说明无返回值</span></div></pre></td></tr></table></figure>
</li>
<li><p>every<br>((item, index) =&gt; {})<br>return true继续，retrun false终止循环</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">let</span> arr = [<span class="string">'a'</span>, <span class="string">'b'</span>, <span class="string">'c'</span>]</div><div class="line"><span class="keyword">let</span> brr = arr.every(<span class="function">(<span class="params">item,index,arr</span>) =&gt;</span> &#123;</div><div class="line">    <span class="built_in">console</span>.log(item,index, arr) <span class="comment">// a 0 [ 'a', 'b', 'c' ] ，第二次b 1 [ 'a1', 'b', 'c' ]</span></div><div class="line">    arr[index] = item +<span class="string">'1'</span></div><div class="line">    <span class="keyword">if</span>(index === <span class="number">1</span>) &#123;</div><div class="line">        <span class="keyword">return</span> <span class="literal">false</span></div><div class="line">    &#125;</div><div class="line">    <span class="keyword">return</span> <span class="literal">true</span></div><div class="line">&#125;)</div><div class="line"><span class="built_in">console</span>.log(arr, brr) <span class="comment">// [ 'a1', 'b1', 'c' ] false</span></div></pre></td></tr></table></figure>
</li>
<li><p>filter<br>return true则被记录，返回新数组，不影响原数组</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">let</span> arr = [<span class="string">'a'</span>, <span class="string">'b'</span>, <span class="string">'c'</span>]</div><div class="line"><span class="keyword">let</span> brr = arr.filter(<span class="function">(<span class="params">item,index,arr</span>) =&gt;</span> &#123;</div><div class="line">    <span class="built_in">console</span>.log(item,index, arr) </div><div class="line">    <span class="comment">/**</span></div><div class="line"><span class="comment">     * a 0 [ 'a', 'b', 'c' ]</span></div><div class="line"><span class="comment">        b 1 [ 'a1', 'b', 'c' ]</span></div><div class="line"><span class="comment">        c 2 [ 'a1', 'b1', 'c' ]</span></div><div class="line"><span class="comment">     */</span></div><div class="line">    arr[index] = item +<span class="string">'1'</span><span class="comment">// 会影响arr值，不影响brr值</span></div><div class="line">    <span class="keyword">if</span>(index === <span class="number">1</span>) &#123;</div><div class="line">        <span class="keyword">return</span> <span class="literal">false</span></div><div class="line">    &#125;</div><div class="line">    <span class="keyword">return</span> <span class="literal">true</span></div><div class="line">&#125;)</div><div class="line"><span class="built_in">console</span>.log(arr, brr) <span class="comment">//[ 'a1', 'b1', 'c1' ] [ 'a', 'c' ]</span></div></pre></td></tr></table></figure>
</li>
<li><p>map<br>返回由返回值组成的新数组，不影响原数组<br>里面对数组的操作会影响原数组，参数arr是原数组的索引，操作影响后面</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">let</span> arr = [<span class="string">'a'</span>, <span class="string">'b'</span>, <span class="string">'c'</span>]</div><div class="line"><span class="keyword">let</span> brr = arr.map(<span class="function">(<span class="params">item,index,arr</span>) =&gt;</span> &#123;</div><div class="line">    <span class="built_in">console</span>.log(item,index, arr) </div><div class="line">    <span class="comment">/**</span></div><div class="line"><span class="comment">     * a 0 [ 'a', 'b', 'c' ]</span></div><div class="line"><span class="comment">        b 1 [ 'a1', 'b', 'c' ]</span></div><div class="line"><span class="comment">        c 2 [ 'a1', 'b1', 'c' ]</span></div><div class="line"><span class="comment">     */</span></div><div class="line">    arr[index] = item +<span class="string">'1'</span></div><div class="line">    <span class="keyword">return</span> item+index</div><div class="line">&#125;)</div><div class="line"><span class="built_in">console</span>.log(arr, brr) <span class="comment">//[ 'a1', 'b1', 'c1' ] [ true, false, true ]</span></div></pre></td></tr></table></figure>
</li>
<li><p>累加器reduce<br>arr.reduce(function(total, currentValue, currentIndex, arr), initialValue)<br>对数组所有数据执行进行reduce得到一个值<br>reduceRight() （从右到左）将其减少为单个值。</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">let</span> arr = [<span class="string">'a'</span>, <span class="string">'b'</span>, <span class="string">'c'</span>]</div><div class="line"><span class="keyword">let</span> brr = arr.reduce(<span class="function">(<span class="params">previousValue,currentValue,currentIndex, arr</span>) =&gt;</span> &#123;</div><div class="line">    <span class="built_in">console</span>.log(previousValue,currentValue,currentIndex, arr) </div><div class="line">    <span class="comment">/**</span></div><div class="line"><span class="comment">     * 0 'a' 0 [ 'a', 'b', 'c' ]</span></div><div class="line"><span class="comment">        0a b 1 [ 'a1', 'b', 'c' ]</span></div><div class="line"><span class="comment">        0ab c 2 [ 'a1', 'b1', 'c' ]</span></div><div class="line"><span class="comment">     */</span></div><div class="line">    arr[currentIndex] = currentValue +<span class="string">'1'</span></div><div class="line">    <span class="keyword">return</span> previousValue+currentValue</div><div class="line">&#125;, <span class="number">0</span>)</div><div class="line"><span class="built_in">console</span>.log(arr, brr) <span class="comment">// [ 'a1', 'b1', 'c1' ] '0abc'</span></div></pre></td></tr></table></figure>
</li>
</ul>
<h2 id="数组增删改查、截取操作"><a href="#数组增删改查、截取操作" class="headerlink" title="数组增删改查、截取操作"></a>数组增删改查、截取操作</h2><p>###　增<br>有些在改章节</p>
<ul>
<li><p>push</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">arr = [<span class="string">'a'</span>,<span class="string">'b'</span>,<span class="string">'c'</span>]</div><div class="line">brr = arr.push(<span class="string">'d'</span>)</div><div class="line"><span class="built_in">console</span>.log(arr, arr.length, brr)<span class="comment">// [ 'a', 'b', 'c', 'd' ] 4 4</span></div></pre></td></tr></table></figure>
</li>
<li><p>unshift<br>unshift() 方法将一个或多个元素添加到数组的开头，并返回新数组的长度。</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">let</span> arr = [<span class="string">'is'</span>, <span class="string">'a'</span>, <span class="string">'girl'</span>]</div><div class="line"><span class="keyword">let</span> re = arr.unshift(<span class="string">'I'</span>, <span class="string">'think'</span>, <span class="number">7</span>)</div><div class="line"><span class="built_in">console</span>.log(arr) <span class="comment">// [ 'I', 'think', 7, 'is', 'a', 'girl' ]</span></div><div class="line"><span class="built_in">console</span>.log(re) <span class="comment">// 6</span></div></pre></td></tr></table></figure>
</li>
</ul>
<h3 id="删除"><a href="#删除" class="headerlink" title="删除"></a>删除</h3><p>有些在改章节</p>
<ul>
<li><p>pop<br>pop()方法从数组中删除最后一个元素，并返回该元素的值。此方法更改数组的长度。</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">arr = [<span class="string">'a'</span>,<span class="string">'b'</span>,<span class="string">'c'</span>]</div><div class="line">brr = arr.pop()</div><div class="line"><span class="built_in">console</span>.log(arr, arr.length, brr)<span class="comment">// [ 'a', 'b' ] 2 'c'</span></div></pre></td></tr></table></figure>
</li>
<li><p>shift<br>shift() 方法从数组中删除第一个元素，并返回该元素的值。此方法更改数组的长度。</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">let</span> arr = [<span class="string">'my'</span>,<span class="string">'name'</span>,<span class="string">'is'</span>, <span class="string">'anne'</span>]</div><div class="line"><span class="keyword">let</span> re = arr.shift()</div><div class="line"><span class="built_in">console</span>.log(arr) <span class="comment">// [ 'name', 'is', 'anne' ]</span></div><div class="line"><span class="built_in">console</span>.log(re) <span class="comment">// my</span></div></pre></td></tr></table></figure>
</li>
</ul>
<h3 id="改-插入or里面的元素，可增可删"><a href="#改-插入or里面的元素，可增可删" class="headerlink" title="改(插入or里面的元素，可增可删)"></a>改(插入or里面的元素，可增可删)</h3><ul>
<li><p>fill<br>arr.fill(value, start, end)<br>fill 方法是个可变方法, 它会改变调用它的 this 对象本身, 然后返回它, 而并不是返回一个副本.</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">arr = <span class="built_in">Array</span>(<span class="number">7</span>)</div><div class="line"><span class="built_in">console</span>.log(arr)<span class="comment">// [ , , , , , ,  ]</span></div><div class="line">arr.fill(<span class="number">0</span>)</div><div class="line"><span class="built_in">console</span>.log(arr)<span class="comment">// [ 0, 0, 0, 0, 0, 0, 0 ]</span></div><div class="line">arr.fill(<span class="number">1</span>,<span class="number">1</span>)</div><div class="line"><span class="built_in">console</span>.log(arr)<span class="comment">// [ 0, 1, 1, 1, 1, 1, 1 ]</span></div><div class="line">arr.fill(<span class="number">2</span>,<span class="number">2</span>,<span class="number">3</span>)</div><div class="line"><span class="built_in">console</span>.log(arr)<span class="comment">// [ 0, 1, 2, 1, 1, 1, 1 ]</span></div></pre></td></tr></table></figure>
</li>
<li><p>splice<br>splice() 方法通过删除现有元素和/或添加新元素来更改一个数组的内容。<br>参数: (开始元素index(包括), 删除元素个数，要插入的元素1，要插入的元素2….)<br>返回值: 被删除元素组成的数组<br>数组值被改变</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">let</span> arr = [<span class="string">'0'</span>, <span class="string">'1'</span>, <span class="string">'2'</span>, <span class="string">'3'</span>, <span class="string">'4'</span>,<span class="string">'5'</span>]</div><div class="line"><span class="keyword">let</span> brr = arr.splice(<span class="number">1</span>, <span class="number">3</span>, <span class="number">8</span>, <span class="number">9</span>, <span class="string">'10'</span>)</div><div class="line"><span class="built_in">console</span>.log(arr)<span class="comment">// [ '0', 8, 9, '10', '4', '5' ]</span></div><div class="line"><span class="comment">// 返回被删除的值</span></div><div class="line"><span class="built_in">console</span>.log(brr)<span class="comment">// [ '1', '2', '3' ]</span></div></pre></td></tr></table></figure>
</li>
</ul>
<h3 id="查"><a href="#查" class="headerlink" title="查"></a>查</h3><ul>
<li><p>indexOf<br>indexOf()方法返回在数组中可以找到一个给定元素的第一个索引，如果不存在，则返回-1。<br>参数: (带查找元素，搜索起始index(含))</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">let</span> arr = [<span class="string">'a'</span>,<span class="string">'b'</span>,<span class="string">'c'</span>, <span class="string">'d'</span>, <span class="string">'e'</span>]</div><div class="line"><span class="keyword">let</span> r0 = arr.indexOf(<span class="string">'f'</span>)<span class="comment">//-1</span></div><div class="line"><span class="keyword">let</span> r1 = arr.indexOf(<span class="string">'b'</span>)<span class="comment">// 1</span></div><div class="line"><span class="keyword">let</span> r2 = arr.indexOf(<span class="string">'b'</span>, <span class="number">1</span>)<span class="comment">// 1</span></div><div class="line"><span class="keyword">let</span> r3 = arr.indexOf(<span class="string">'b'</span>, <span class="number">2</span>)<span class="comment">// -1</span></div><div class="line"><span class="built_in">console</span>.log(r0, r1, r2, r3)<span class="comment">// -1 1 1 -1</span></div></pre></td></tr></table></figure>
</li>
<li><p>filter<br>前面有介绍。</p>
</li>
<li>find<br>ES6<br>find() 方法返回数组中满足提供的测试函数的第一个元素的值。否则返回 undefined。<br>arr.find((item,index,arr, ) =&gt; {return false/true})</li>
<li>findIndex<br>ES6<br>findIndex()方法返回数组中满足提供的测试函数的第一个元素的索引。否则返回-1。<br>除返回值与find基本同</li>
</ul>
<h3 id="截取"><a href="#截取" class="headerlink" title="截取"></a>截取</h3><ul>
<li><p>slice<br>slice() 方法返回一个从开始到结束（不包括结束）选择的数组的一部分<strong><em>浅拷贝</em></strong>到一个新数组对象。原始数组不会被修改。</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">let</span> arr = [<span class="string">'0'</span>, <span class="string">'1'</span>, <span class="string">'2'</span>, <span class="string">'3'</span>, <span class="string">'4'</span>,<span class="string">'5'</span>]</div><div class="line"><span class="keyword">let</span> brr = arr.slice(<span class="number">2</span>, <span class="number">4</span>)</div><div class="line"><span class="built_in">console</span>.log(arr) <span class="comment">// [ '0', '1', '2', '3', '4', '5' ]</span></div><div class="line"><span class="built_in">console</span>.log(brr) <span class="comment">// [ '2', '3' ]</span></div><div class="line"></div><div class="line"><span class="comment">// 浅拷贝，对象操作会影响原数组</span></div><div class="line"><span class="keyword">let</span> arr = [<span class="string">'0'</span>, <span class="string">'1'</span>, <span class="string">'2'</span>, &#123;<span class="attr">a</span>: <span class="string">'a3'</span>&#125;, <span class="string">'4'</span>,<span class="string">'5'</span>]</div><div class="line"><span class="keyword">let</span> brr = arr.slice(<span class="number">2</span>, <span class="number">4</span>)</div><div class="line">brr[<span class="number">1</span>].a = <span class="string">'b3'</span></div><div class="line"><span class="built_in">console</span>.log(arr) <span class="comment">// [ '0', '1', '2', &#123; a: 'b3' &#125;, '4', '5' ]</span></div><div class="line"><span class="built_in">console</span>.log(brr) <span class="comment">// [ '2', &#123; a: 'b3' &#125; ]</span></div></pre></td></tr></table></figure>
</li>
<li></li>
</ul>
<h2 id="数组排序"><a href="#数组排序" class="headerlink" title="数组排序"></a>数组排序</h2><ul>
<li>sort<br>sort() 方法在适当的位置对数组的元素进行排序，并返回数组。 sort 排序不一定是稳定的。默认排序顺序是根据字符串Unicode码点（0-9，a-z）。<br>参数: 比较函数(a, b) =&gt; {}，可无<br>  比较函数: <blockquote>
<ol>
<li>如果 compareFunction(a, b)小于0,那么 a 会被排列到b之前</li>
</ol>
</blockquote>
</li>
</ul>
<ol>
<li>如果 compareFunction(a, b) 大于0，b会被排列到a之前</li>
<li>如果compareFunction(a, b)等于0, a和b的相对位置不变。备注：ECMAScript 标准并不保证这一行为，而且也不是所有浏览器都会遵守（例如 Mozilla 在 2003 年之前的版本）</li>
</ol>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// a-z</span></div><div class="line"><span class="keyword">let</span> arr = [<span class="string">'my'</span>, <span class="string">'name'</span>, <span class="string">'is'</span>, <span class="string">'anne'</span>]</div><div class="line"><span class="keyword">let</span> re = arr.sort()</div><div class="line"><span class="built_in">console</span>.log(arr) <span class="comment">// [ 'anne', 'is', 'my', 'name' ]</span></div><div class="line"><span class="built_in">console</span>.log(re) <span class="comment">// [ 'anne', 'is', 'my', 'name' ]</span></div><div class="line"><span class="comment">// z-a</span></div><div class="line"><span class="keyword">const</span> compare = <span class="function">(<span class="params">a, b</span>) =&gt;</span> &#123;</div><div class="line">    <span class="keyword">return</span> a&lt;b;</div><div class="line">&#125;</div><div class="line"><span class="keyword">let</span> arr = [<span class="string">'my'</span>,<span class="string">'name'</span>,<span class="string">'is'</span>, <span class="string">'anne'</span>]</div><div class="line"><span class="keyword">let</span> re = arr.sort(compare)</div><div class="line"><span class="built_in">console</span>.log(arr) <span class="comment">// [ 'name', 'my', 'is', 'anne' ]</span></div><div class="line"><span class="built_in">console</span>.log(re) <span class="comment">// [ 'name', 'my', 'is', 'anne' ]</span></div><div class="line"><span class="comment">// 0-9</span></div><div class="line"><span class="keyword">let</span> arr = [<span class="number">4</span>, <span class="number">6</span>, <span class="number">3</span>, <span class="number">5</span>, <span class="number">2</span>]</div><div class="line"><span class="keyword">let</span> re = arr.sort()</div><div class="line"><span class="built_in">console</span>.log(arr) <span class="comment">// [ 2, 3, 4, 5, 6 ]</span></div><div class="line"><span class="built_in">console</span>.log(re) <span class="comment">// [ 2, 3, 4, 5, 6 ]</span></div><div class="line"></div><div class="line"><span class="comment">// 9-0</span></div><div class="line"><span class="keyword">const</span> compare = <span class="function">(<span class="params">a, b</span>) =&gt;</span> &#123;</div><div class="line">    <span class="keyword">return</span> b-a;</div><div class="line">&#125;</div><div class="line"><span class="keyword">let</span> arr = [<span class="number">4</span>, <span class="number">6</span>, <span class="number">3</span>, <span class="number">5</span>, <span class="number">2</span>]</div><div class="line"><span class="keyword">let</span> re = arr.sort(compare)</div><div class="line"><span class="built_in">console</span>.log(arr) <span class="comment">// [ 6, 5, 4, 3, 2 ]</span></div><div class="line"><span class="built_in">console</span>.log(re) <span class="comment">// [ 6, 5, 4, 3, 2 ]</span></div></pre></td></tr></table></figure>
<p>-reverse<br>reverse() 方法将数组中元素的位置颠倒。<br>倒转，也不是排序，返回数组索引，其实是一个对象<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">let</span> arr = [<span class="string">'1'</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="string">'4'</span>]</div><div class="line"><span class="keyword">let</span> re = arr.reverse()</div><div class="line"><span class="built_in">console</span>.log(arr)<span class="comment">// [ '4', 3, 2, '1' ]</span></div><div class="line"><span class="built_in">console</span>.log(re)<span class="comment">// [ '4', 3, 2, '1' ]</span></div></pre></td></tr></table></figure></p>
<h2 id="与字符串相关操作"><a href="#与字符串相关操作" class="headerlink" title="与字符串相关操作"></a>与字符串相关操作</h2><ul>
<li><p>toString</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">let</span> arr = [<span class="string">'1'</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="string">'4'</span>]</div><div class="line"><span class="keyword">let</span> re = arr.toString()</div><div class="line"><span class="built_in">console</span>.log(arr) <span class="comment">// [ '1', 2, 3, '4' ]</span></div><div class="line"><span class="built_in">console</span>.log(re)<span class="comment">// 1,2,3,4</span></div></pre></td></tr></table></figure>
</li>
<li><p>join<br>join() 方法将数组（或一个类数组对象）的所有元素连接到一个字符串中。<br>参数: 连接字符串（默认,）</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">let</span> arr = [<span class="string">'my'</span>,<span class="string">'name'</span>,<span class="string">'is'</span>, <span class="string">'anne'</span>]</div><div class="line"><span class="keyword">let</span> re = arr.join() <span class="comment">// my,name,is,anne</span></div><div class="line"><span class="keyword">let</span> re2 = arr.join(<span class="string">''</span>) <span class="comment">// mynameisanne</span></div><div class="line"><span class="keyword">let</span> re3 = arr.join(<span class="string">' '</span>)<span class="comment">// my name is anne</span></div><div class="line"><span class="built_in">console</span>.log(arr)<span class="comment">// [ 'my', 'name', 'is', 'anne' ]</span></div></pre></td></tr></table></figure>
</li>
<li><p>toLocaleString<br>toLocaleString() 返回一个字符串表示数组中的元素。数组中的元素将使用各自的 toLocaleString(Object、Number、Date)方法转成字符串，这些字符串将使用一个特定语言环境的字符串（例如一个逗号 “,”）隔开。</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> date = <span class="keyword">new</span> <span class="built_in">Date</span>();</div><div class="line"><span class="keyword">let</span> arr = [<span class="string">'1'</span>, <span class="number">23456</span>,  date]</div><div class="line"><span class="built_in">console</span>.log(arr) <span class="comment">// [ '1', 23456, 2017-10-29T15:26:00.535Z ]</span></div><div class="line"><span class="keyword">let</span> re = arr.toString()<span class="comment">// 1,23456,Sun Oct 29 2017 23:26:00 GMT+0800 (中国标准时间)</span></div><div class="line"><span class="keyword">let</span> rel = arr.toLocaleString()<span class="comment">// 1,23,456,2017-10-29 23:26:00</span></div><div class="line"><span class="built_in">console</span>.log(arr) <span class="comment">// [ '1', 23456, 2017-10-29T15:26:00.535Z ]</span></div><div class="line"><span class="built_in">console</span>.log(re)<span class="comment">// 1,23456,Sun Oct 29 2017 23:26:00 GMT+0800 (中国标准时间)</span></div><div class="line"><span class="built_in">console</span>.log(rel)<span class="comment">// 1,23,456,2017-10-29 23:26:00</span></div></pre></td></tr></table></figure>
</li>
</ul>
<h2 id="其他数组操作"><a href="#其他数组操作" class="headerlink" title="其他数组操作"></a>其他数组操作</h2><p>合并数组</p>
<ul>
<li>concat<br>concat() 方法用于合并<strong>两个或多个</strong>数组。此方法不会更改现有数组，而是返回一个新数组。<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">let</span> arr = [<span class="string">'my'</span>,<span class="string">'name'</span>]</div><div class="line"><span class="keyword">let</span> brr = [<span class="string">'is'</span>, <span class="string">'anne'</span>, &#123;<span class="attr">b</span>: <span class="string">'hi'</span>&#125;]</div><div class="line"><span class="keyword">let</span> crr = arr.concat(brr)</div><div class="line">crr[<span class="number">4</span>].b = <span class="string">'hello'</span></div><div class="line"><span class="built_in">console</span>.log(arr)<span class="comment">// 不变</span></div><div class="line"><span class="built_in">console</span>.log(brr) <span class="comment">// 改变了，说明是浅复制[ 'is', 'anne', &#123; b: 'hello' &#125; ]</span></div><div class="line"><span class="built_in">console</span>.log(crr) <span class="comment">// [ 'my', 'name', 'is', 'anne', &#123; b: 'hello' &#125; ]</span></div></pre></td></tr></table></figure></li>
</ul>
]]></content>
      
        <categories>
            
            <category> Front-end </category>
            
            <category> Basic </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Javascript </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[JS、ES6基础知识]]></title>
      <url>/2017/02/27/front-end/basic/js/js/</url>
      <content type="html"><![CDATA[<p>把之前的前端基础知识拆成三部分，方便查阅</p>
<a id="more"></a>
<p>参考<a href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects" target="_blank" rel="external">JavaScript标准库</a></p>
<h2 id="常用判断及运算操作"><a href="#常用判断及运算操作" class="headerlink" title="常用判断及运算操作"></a>常用判断及运算操作</h2><ul>
<li>类型判断<br>typeof 操作值，返回一个其类型的字符串名<br>-NaN是number,null是object</li>
<li>判断是否相等<br>Object.is() 方法确定两个值是否是相同的值。<br>=== 严格相等，+0和-0相等，NaN和NaN不等,字符串判断内容是否相等(‘key’ === ‘key’)，其余与上同<br>== 会先做类型转换后再比较</li>
</ul>
<h2 id="ES6"><a href="#ES6" class="headerlink" title="ES6"></a>ES6</h2><h3 id="箭头函数"><a href="#箭头函数" class="headerlink" title="箭头函数"></a>箭头函数</h3><p>this为被创建时的环境的this<br>() =&gt; {}</p>
<h3 id="Promise异步逻辑"><a href="#Promise异步逻辑" class="headerlink" title="Promise异步逻辑"></a>Promise异步逻辑</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div></pre></td><td class="code"><pre><div class="line">new Promise((resolve) =&gt; &#123;</div><div class="line">    // 异步处理的东西</div><div class="line">    resolve();</div><div class="line">&#125;).then((前面resolve带的值) =&gt; &#123;</div><div class="line">    // ...处理</div><div class="line">&#125;)</div><div class="line">// 若函数返回一个Promise，可直接后接then</div><div class="line">function lala () &#123;</div><div class="line">    return new Promise((resolve, reject) =&gt; &#123;</div><div class="line">    jsonp(url, &#123;</div><div class="line">    param: `$&#123;qs.stringify(data)&#125;&amp;callback`,</div><div class="line">    name: `jsonp_$&#123;new Date().getTime()&#125;`,</div><div class="line">    timeout: 4000,</div><div class="line">    &#125;, (error, result) =&gt; &#123;</div><div class="line">    if (error) &#123;</div><div class="line">        reject(error)</div><div class="line">    &#125;</div><div class="line">    resolve(&#123; statusText: &apos;OK&apos;, status: 200, data: result &#125;)</div><div class="line">    &#125;)</div><div class="line">&#125;)</div><div class="line">&#125;</div><div class="line">lala.then((res) =&gt; &#123;</div><div class="line">    res.data // result</div><div class="line">&#125;)</div></pre></td></tr></table></figure>
<h3 id="Generator生成函数"><a href="#Generator生成函数" class="headerlink" title="Generator生成函数"></a>Generator生成函数</h3><p>yeild<br>* 函数名(){</p>
<p>}</p>
<p>Promise，generator/yield，async/await </p>
]]></content>
      
        <categories>
            
            <category> Front-end </category>
            
            <category> Basic </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Javascript </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[常用正则表达式记录(todo)]]></title>
      <url>/2017/02/27/front-end/basic/js/regexp/</url>
      <content type="html"><![CDATA[<p>知识积累<br><a id="more"></a></p>
<h1 id="正则表达式"><a href="#正则表达式" class="headerlink" title="正则表达式"></a>正则表达式</h1><h2 id="定义与使用"><a href="#定义与使用" class="headerlink" title="定义与使用"></a>定义与使用</h2><h3 id="常用正则"><a href="#常用正则" class="headerlink" title="常用正则"></a>常用正则</h3><p>//获取文件名，不带后缀<br>var file_name=file_path.replace(/(.<em>\/)</em>([^.]+).*/ig,”$2”);</p>
<p>//获取文件后缀<br>1.var FileExt=file_path.replace(/.+./,””);</p>
<p>2.var fileExtension = file_path.substring(file_path.lastIndexOf(‘.’) + 1);</p>
<p>//截取文件后缀<br>var reg = /.\w+$/;<br>var file_name = file_path.replace(reg,’’);</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// IP:  </span></div><div class="line">    <span class="keyword">const</span> ipReg = <span class="string">'((25[0-5]|2[0-4]\\d|((1\\d&#123;2&#125;)|([1-9]?\\d)))\\.)&#123;3&#125;(25[0-5]|2[0-4]\\d|((1\\d&#123;2&#125;)|([1-9]?\\d)))'</span></div><div class="line"><span class="comment">// MAC: </span></div><div class="line">    <span class="keyword">const</span> macReg = <span class="string">'([a-fA-F0-9]&#123;2&#125;:)&#123;5&#125;([a-fA-F0-9]&#123;2&#125;)'</span></div><div class="line"><span class="comment">// email:</span></div><div class="line">    <span class="keyword">const</span> emailReg = <span class="string">'[\\d,a-z]([\\w\\.\\-]+)@([a-z0-9\\-]+).([a-z\\.]+[a-z])'</span></div></pre></td></tr></table></figure>
<p>多行邮箱判断(英文逗号分隔)<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// 邮箱</span></div><div class="line"><span class="comment">// 注：字符串中\也是转义字符，所以\需写成\\</span></div><div class="line"><span class="keyword">const</span> emailReg = <span class="string">'[\\d,a-z]([\\w\\.\\-]+)@([a-z0-9\\-]+).([a-z\\.]+[a-z])'</span></div><div class="line"><span class="keyword">const</span> reg = <span class="keyword">new</span> <span class="built_in">RegExp</span>(<span class="string">`^<span class="subst">$&#123;emailReg&#125;</span>(,(\\n)*<span class="subst">$&#123;emailReg&#125;</span>)*(,)&#123;0,1&#125;(\\n)*$`</span>,<span class="string">'g'</span>)</div><div class="line"></div><div class="line"><span class="comment">// 取输入数据（先去掉多余换行）</span></div><div class="line">    <span class="keyword">let</span> tmp = values.emails.replace(<span class="regexp">/&lt;\/?.+?&gt;/g</span>, <span class="string">''</span>)</div><div class="line">    tmp = tmp.replace(<span class="regexp">/[\r\n]/g</span>, <span class="string">''</span>)</div><div class="line">    <span class="keyword">let</span> emails = tmp.split(<span class="string">','</span>)</div></pre></td></tr></table></figure></p>
]]></content>
      
        <categories>
            
            <category> Front-end </category>
            
            <category> Basic </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Javascript </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[html基础知识]]></title>
      <url>/2017/02/27/front-end/basic/cssAndHtml/html/</url>
      <content type="html"><![CDATA[<p>把之前的前端基础知识拆成三部分，方便查阅<br><a id="more"></a></p>
<h3 id="HTML常用标签"><a href="#HTML常用标签" class="headerlink" title="HTML常用标签"></a>HTML常用标签</h3><p><strong>标签分类：</strong></p>
<blockquote>
<p>块级元素：div p li h1`h6等，独占一行，若未设置高度则充满父元素</p>
<ol>
<li>行内元素：span a strong等，不能直接设置宽高</li>
<li>行内块元素：img input等，可以直接设置宽高</li>
</ol>
</blockquote>
<ol>
<li><p><meta>元数据，自关闭标签，常用属性：</p>
<blockquote>
<p>1.1. charset=”utf-8” /ASCII/ANSI/UNICODE/GBK/GB2312/BIG5<br>1.2. name=”” content=””用于描述页面信息<br>name取值：keyword/description…<br>1.3. http-equiv=””content=””相当于http的文件头作用，它可以向浏览器传回一些有用的信息。<br>http-equiv取值：content-type/refresh/…</p>
</blockquote>
</li>
<li><p>input标签，自关闭,常用属性：(label for=”id”)</p>
<blockquote>
<p>2.1. type=”” text/password/radio/checkbox/file/submit/button/reset/image<br>2.2. maxlengh=”数字”<br>2.3. readonly=”readonly”<br>2.4. disabled=”disable”(非活动状态)<br>2.5. name=””(常与form或checkbox配合使用)<br>2.6. value=””<br>2.7. checked=”checked”</p>
</blockquote>
</li>
<li><p>form表单，用于收集数据</p>
<blockquote>
<p>3.1. action=””处理用户数据信息的页面<br>3.2. method=” “ get(地址栏显式提交)/post(数据后台提交)<br>3.3.</p>
<fieldset><legend>名</legend>内容表单分组控件</fieldset>
</blockquote>
</li>
<li><p>select<br>属性：multiple=”multiple”<br>用法；(select)(optgroup label=””)(option selected=”selected”)(/option)(/optgroup)(/select)</p>
</li>
<li><p>textarea多行文本输入框</p>
</li>
</ol>
<p>6.table</p>
<blockquote>
<p>tr、td、caption、thead、tbody、tfoot<br>常用属性：border/align/width/height/cellspacing/cellpading<br>td属性：colspan=”n”,rowspan=”n”合并n个单元格</p>
</blockquote>
<h3 id="HTML5新标签"><a href="#HTML5新标签" class="headerlink" title="HTML5新标签"></a>HTML5新标签</h3><p>详情可见<a href="http://www.cnblogs.com/yuzhongwusan/archive/2011/11/17/2252208.html" target="_blank" rel="external">Html5新标签解释及用法</a><br>1.(embed src=”” hidden=”true/false”)(/embed)</p>
<ol>
<li>canvas</li>
<li><p><code>&lt;marquee&gt;内容&lt;/marquee&gt;</code>滚动效果 属性:</p>
<blockquote>
<p>3.1. behaviour:alternate/scroll/slide<br>direction:down/up/..<br>width、height、bfcolor</p>
</blockquote>
</li>
<li><p>语义化标签 footer、header、article、aside、nav、summary…</p>
</li>
<li><p>audio、vedio…</p>
</li>
</ol>
]]></content>
      
        <categories>
            
            <category> Front-end </category>
            
            <category> Basic </category>
            
        </categories>
        
        
        <tags>
            
            <tag> HTML </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[JS字符串常见操作(todo)]]></title>
      <url>/2017/02/27/front-end/basic/js/string/</url>
      <content type="html"><![CDATA[<h1 id="字符串常见操作"><a href="#字符串常见操作" class="headerlink" title="字符串常见操作"></a>字符串常见操作</h1><a id="more"></a>]]></content>
      
        <categories>
            
            <category> Front-end </category>
            
            <category> Basic </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Javascript </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[JS对象常见操作(todo)]]></title>
      <url>/2017/02/27/front-end/basic/js/object/</url>
      <content type="html"><![CDATA[<h1 id="对象常用操作"><a href="#对象常用操作" class="headerlink" title="对象常用操作"></a>对象常用操作</h1><a id="more"></a>
<h3 id="对象的遍历"><a href="#对象的遍历" class="headerlink" title="对象的遍历"></a>对象的遍历</h3><p><a href="http://www.jb51.net/article/112064.htm" target="_blank" rel="external">js八种对象遍历的性能分析</a></p>
<ol>
<li><p>for(let … in …)<br>会枚举原型链上的属性key值<br><strong>注</strong>: 对象不能使用for of，会报错</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">let</span> obj = &#123;</div><div class="line">    a: <span class="string">'b'</span>,</div><div class="line">    b: <span class="string">'c'</span>,</div><div class="line">    c: <span class="string">'d'</span></div><div class="line">&#125;</div><div class="line"><span class="keyword">for</span>(<span class="keyword">let</span> i <span class="keyword">in</span> obj) &#123;</div><div class="line">    <span class="built_in">console</span>.log(i)<span class="comment">// a b c</span></div><div class="line">&#125;</div></pre></td></tr></table></figure>
</li>
<li><p>Object.keys(obj)<br>得到属性名数组，之后遍历数组即可，不包括原型链</p>
</li>
<li>Object.getOwnPropertyNames(obj)，同上，包括原型链</li>
</ol>
<ul>
<li>复制<br>Object.assign(target,源1,源2…)，将多个对象复制到一个target中，后面的源会覆盖前面源的同名属性，只拷贝属性值，若为引用则target该属性值引用与源相同</li>
<li>判断是否为空<br>Object.keys(obj)返回的数组长度是否为空</li>
<li>删除某一属性</li>
</ul>
<h2 id="数组与对象的深度复制"><a href="#数组与对象的深度复制" class="headerlink" title="数组与对象的深度复制"></a>数组与对象的深度复制</h2><p>工具库: lodash</p>
]]></content>
      
        <categories>
            
            <category> Front-end </category>
            
            <category> Basic </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Javascript </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[git同步]]></title>
      <url>/2017/02/27/Tec/git/git%20synchronization/</url>
      <content type="html"><![CDATA[<p><a href="http://www.ruanyifeng.com/blog/2014/06/git_remote.html" target="_blank" rel="external">git远程操作详解——阮一峰</a></p>
<h1 id="git同步问题"><a href="#git同步问题" class="headerlink" title="git同步问题"></a>git同步问题</h1><h3 id="代码回滚到某一指定版本"><a href="#代码回滚到某一指定版本" class="headerlink" title="代码回滚到某一指定版本"></a>代码回滚到某一指定版本</h3><ol>
<li>git reflog查看版本代号</li>
<li>git reset –hard 版本号，回滚<a id="more"></a></li>
<li><p>git push,显示everything up-to-date，又做了以下尝试：</p>
<blockquote>
<p>一开始git服务器仓库是完全空的，不包含任何一个分支(branch)，因此刚开始Push时需要指定一个。<br>执行git remote -v后看到自己的remote端名字为origin:<br>$ git remote -v<br>origin <a href="https://code.google.com/p/micolog2" target="_blank" rel="external">https://code.google.com/p/micolog2</a> (fetch)<br>origin <a href="https://code.google.com/p/micolog2" target="_blank" rel="external">https://code.google.com/p/micolog2</a> (push)<br>执行git branch后看到自己当下用的分支是master<br>$ git branch<br>master<br>因此在本地commit后，再执行<br>git push origin master<br>但最终失败</p>
</blockquote>
</li>
</ol>
]]></content>
      
        <categories>
            
            <category> Tec </category>
            
            <category> Git </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Git </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[github域名绑定]]></title>
      <url>/2017/02/27/Tec/Blog/github%20AND%20domain%20name/</url>
      <content type="html"><![CDATA[<h1 id="github域名绑定"><a href="#github域名绑定" class="headerlink" title="github域名绑定"></a>github域名绑定</h1><h2 id="域名相关概念"><a href="#域名相关概念" class="headerlink" title="域名相关概念"></a>域名相关概念</h2><a id="more"></a>
<h3 id="A记录"><a href="#A记录" class="headerlink" title="A记录"></a>A记录</h3><p>是用来指定主机名(或域名)对应的IP地址记录。用户可以将该域名下的网站服务器指向到自己的web server上。同时也可以设置您域名的二级域名。<br><a id="more"></a></p>
<h3 id="CNAME-别名"><a href="#CNAME-别名" class="headerlink" title="CNAME(别名)"></a>CNAME(别名)</h3><p>也被称为规范名字。这种记录允许您将多个名字映射到同一台计算机。通常用于同时提供WWW和MAIL服务的计算机。例如，有一个A记录为host.mydomain.com。 它同时提供WWW和MAIL服务，为了便于用户访问服务。可以为该计算机设置两个别名（CNAME）：WWW和MAIL。 这两个别名的全称就是www.mydomain.com和mail.mydomain.com，将他们都指向host.mydomain.com：</p>
<blockquote>
<p>A<br>host.mydomain.com -&gt; IPAddress<br>CNAME<br>www.mydomain.com -&gt; host.mydomain.com<br>mail.mydomain.com -&gt; host.mydomain.com</p>
</blockquote>
<p>同样的方法可以用于当您拥有多个域名需要指向同一服务器IP，此时您就可以将一个域名做A记录指向服务器IP然后将其他的域名做别名到之前做A记录的域名上，那么当您的服务器IP地址变更时您就可以不必麻烦的一个一个域名更改指向了 只需要更改做A记录的那个域名其他做别名的那些域名的指向也将自动更改到新的IP地址上了。CNAME还广泛用于需要CDN加速的场景下，因为这个时候，域名到IP地址的映射是事先不知道的，需要根据访问者的地理位置来确定镜像服务器的IP地址。</p>
<h3 id="TTL-Time-To-Live生存时间"><a href="#TTL-Time-To-Live生存时间" class="headerlink" title="TTL(Time To Live生存时间)"></a>TTL(Time To Live生存时间)</h3><p>它表示DNS记录在DNS服务器上缓存时间。应用实例：</p>
<blockquote>
<p>假设，有这样一个域名myhost.cnMonkey.com（其实，这就是一条DNS记录，通常表示在abc.com域中有一台名为myhost的主机）对应IP地 址为1.1.1.1，它的TTL为10分钟。这个域名或称这条记录存储在一台名为dns.cnMonkey.com的DNS服务器上。 现在有一个用户键入一下地址（又称URL）：<a href="http://myhost.cnMonkey.com" target="_blank" rel="external">http://myhost.cnMonkey.com</a> 这时会发生什么呢？</p>
<blockquote>
<p>该访问者指定的DNS服务器（或是他的ISP,互联网服务商, 动态分配给他的)8.8.8.8就会试图为他解释myhost.cnMonkey.com，当然8.8.8.8这台DNS服务器由于没有包含 myhost.cnMonkey.com这条信息，因此无法立即解析，但是通过全球DNS的递归查询后，最终定位到dns.cnMonkey.com这台DNS服务器， dns.cnMonkey.com这台DNS服务器将myhost.cnMonkey.com对应的IP地址1.1.1.1告诉8.8.8.8这台DNS服务器，然有再由 8.8.8.8告诉用户结果。8.8.8.8为了以后加快对myhost.cnMonkey.com这条记录的解析，就将刚才的1.1.1.1结果保留一段时间，这 就是TTL时间，在这段时间内如果用户又有对myhost.cnMonkey.com这条记录的解析请求，它就直接告诉用户1.1.1.1，当TTL到期则又会重复 上面的过程。</p>
</blockquote>
</blockquote>
<h3 id="域名分级"><a href="#域名分级" class="headerlink" title="域名分级"></a>域名分级</h3><p>子域名是个相对的概念，是相对父域名来说的。域名有很多级，中间用点分开。例如中国国家顶级域名CN，所有以 CN 结尾的域名便都是它的子域。例如：www.zzy.cn 便是 zzy.cn 的子域，而 zzy.cn 是 cn 的子域。<br>“二级域名”：目前有很多用户认为“二级域名”是自己所注册域名的下一级域名，实际上这里所谓的“二级域名”并非真正的“二级”，而应该称为“次级”(相对次级)</p>
<h3 id="绑定域名到GitHub-Page"><a href="#绑定域名到GitHub-Page" class="headerlink" title="绑定域名到GitHub-Page"></a>绑定域名到GitHub-Page</h3><ol>
<li>购买域名</li>
<li>域名解析<blockquote>
<p>添加如下解析：<br>@          A             192.30.252.153<br>@          A             192.30.252.154<br>www      CNAME    username.github.io.</p>
</blockquote>
</li>
<li>source文件夹添加CNAME文件：<blockquote>
<p>example.com</p>
</blockquote>
</li>
</ol>
<blockquote>
<ol>
<li>A记录：域名直接映射IP，但是这个IP换成了192.30.252.153或192.30.252.154。</li>
<li>如果域名提供商支持ALIAS或ANAME，将域名指向username.github.io，这样可以在域名解析的时候得到一个动态的IP，这个IP是一台离你最近的镜像主机</li>
<li>CNMAE：如果你希望使用二级域名访问，将一个二级域名配置成CNAME，指向username.github.io，这样可以在域名解析的时候得到一个动态的IP，这个IP是一台离你最近的镜像主机<br>其中2、3两种方式能够享受CDN加速，因为域名不是直接与IP地址映射的，github就有机会帮用户选择最近的镜像主机提供服务。<br>我的解析结果如下图所示，供参考：<br><img src="http://ww2.sinaimg.cn/mw690/c5202edfjw1f8l4vbz55qj20ur0bbtc6.jpg" alt="dns"><br>3 在hexo的<strong>source根目录</strong>中添加CNAME文件，内容为自己的域名地址<pre><code>注意CNAME是文件，不是文本文档，可通过git bash的touch CNAME命令添加
</code></pre><img src="http://ww4.sinaimg.cn/mw690/c5202edfjw1f8l4vbc2gdj20cx060wez.jpg" alt="CNAME"></li>
</ol>
</blockquote>
<p>再等上几分钟，就可以用域名访问自己的github博客啦</p>
<h2 id="遇到的问题"><a href="#遇到的问题" class="headerlink" title="遇到的问题"></a>遇到的问题</h2><p>在绑定域名之后，我在本地hexo deploy一直出错，git bash提示：</p>
<blockquote>
<p>Please make sure you have the correct access rights and the repository exists.</p>
</blockquote>
<p>因为这个问题，我做了以下尝试：<br>方法1.重置SSH key，可成功连接到github<br>结果：仍旧报错<br>方法2.删除github内容，重建仓库，使用git将public文件夹上传到github</p>
<blockquote>
<p>过程中发现github和用户可以通过https和ssh两种方式传递信息，ssh可以不用输入用户名和密码，https则需要</p>
</blockquote>
<p><strong>git同步步骤</strong></p>
<blockquote>
<ol>
<li>在某文件夹中，鼠标右键，选择git init here，然后将需上传文件都放到此处</li>
<li>add，输入仓库名和仓库地址(https)</li>
<li><p>先git pull 仓库名 分支名，然后git push<br><strong>注意：push的文件过大会报错</strong></p>
<blockquote>
<p>Error: fatal: The remote end hung up unexpectedly</p>
</blockquote>
</li>
</ol>
</blockquote>
<p>执行下面命令扩大缓存</p>
<blockquote>
<blockquote>
<p>git config http.postBuffer 524288000</p>
</blockquote>
</blockquote>
<ol>
<li>success后就可以查看啦</li>
</ol>
<p>方法3.<br>重建hexo文件夹，按init,new,g,(deploy前先安装hexo：<code>npm install hexo-deployer-git --save</code>),d</p>
<blockquote>
<p>deploy由于文件里有主题，需扩大git上传最大值</p>
<blockquote>
<p>git config http.postBuffer 524288000</p>
</blockquote>
</blockquote>
<p>若上传很慢还报错，请翻墙后重试（血泪的教训啊）</p>
]]></content>
      
        <categories>
            
            <category> Tec </category>
            
            <category> Blog </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Github </tag>
            
            <tag> Network </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[hexo nexT主题配置与修改]]></title>
      <url>/2017/02/27/Tec/Blog/hexo-nexT%20theme%20configuration%20and%20modification/</url>
      <content type="html"><![CDATA[<h3 id="修改主题配色"><a href="#修改主题配色" class="headerlink" title="修改主题配色"></a>修改主题配色</h3><p>可通过修改css中的_variables颜色变量来修改颜色，或者直接在css中的main.styl中重写覆盖以前的css文件(地址：themes\next-mine\source\css_variables)</p>
<h3 id="添加搜索功能"><a href="#添加搜索功能" class="headerlink" title="添加搜索功能"></a>添加搜索功能</h3><h4 id="方法一-添加algolia搜索"><a href="#方法一-添加algolia搜索" class="headerlink" title="方法一 添加algolia搜索"></a>方法一 添加algolia搜索</h4><p>具体请参阅<a href="http://www.cnblogs.com/doublezcc/p/6140788.html" target="_blank" rel="external">hexo+next博客添加搜索</a><br>注意：若未安装algolia，请先执行npm install hexo-algolia –save<br>输入appID等信息时都没有引号<br><a id="more"></a><br>添加完搜索功能后github网页就404了，忧伤…<br>尝试1· 网上让添加nojekyll文件禁用vendors，无效</p>
<p>最终发现被自己摆了一道，deploy了之后CNAME文件被自动删除了，无法和域名对应起来自然就报错了…<br>当我们在本地使用hexo deploy命令再一次部署博客时，会发现博客网页的css样式丢失或是404错误，这是因为本地的博客工程里面还没有CNAME，当我们重新部署后，远程的博客工程会和本地保持同步，将CNAME文件删除，所以我们要在本地添加CNAME文件：<br>这里我们需要注意的是：CNAME文件添加的目录是在根目录下的source文件夹，完成添加后重新部署，博客网站又会恢复正常。</p>
<p>tips:<br>webstorm可以使用双击shift进行全局搜索，配合chrome的审查功能可以快速定位元素的样式设置位置。</p>
<h4 id="方法2-使用自带搜索"><a href="#方法2-使用自带搜索" class="headerlink" title="方法2 使用自带搜索"></a>方法2 使用自带搜索</h4><p>具体可参阅<a href="http://www.ezlippi.com/blog/2017/02/hexo-search.html" target="_blank" rel="external">Hexo博客添加站内搜索</a><br>注：配置好后记得到next的配置文档中打开local search。<br>上面文档还包含添加rss和站点地图插件的方法</p>
<h4 id="添加分类"><a href="#添加分类" class="headerlink" title="添加分类"></a>添加分类</h4><p><a href="https://github.com/iissnan/hexo-theme-next/wiki/%E5%88%9B%E5%BB%BA%E5%88%86%E7%B1%BB%E9%A1%B5%E9%9D%A2" target="_blank" rel="external">hexo创建分类页面</a><br>使用时在博客上面加入categories: [分类1，分类2]即可<br>注：这是hexo的官方帮助文档，有问题都可在上面找找答案</p>
<h4 id="添加不蒜子统计"><a href="#添加不蒜子统计" class="headerlink" title="添加不蒜子统计"></a>添加不蒜子统计</h4><p>其实貌似只用next中打开此项就可以了，上传到github的统计计数基本准确。<br>下面是尝试用leanCloud服务器来做的，没太懂…<br><a href="http://www.jeyzhang.com/hexo-next-add-post-views.html#" target="_blank" rel="external">hexo添加统计</a><br>注意：上面的参考我并没有做出来，(添加语言里post字段一直报错)结合帮助文档一起看吧:<br><a href="http://theme-next.iissnan.com/third-party-services.html#analytics-busuanzi" target="_blank" rel="external"> 第三方服务集成</a></p>
<h4 id="百度谷歌收录"><a href="#百度谷歌收录" class="headerlink" title="百度谷歌收录"></a>百度谷歌收录</h4><ol>
<li>在<a href="http://zhanzhang.baidu.com/dashboard/index" target="_blank" rel="external">百度站长平台</a>添加站点</li>
<li><p>一步步按提示操作，选择HTML标签验证,记录百度提供的需加载信息，大概如下：</p>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"baidu-site-verification"</span> <span class="attr">content</span>=<span class="string">"你的key"</span> /&gt;</span></div></pre></td></tr></table></figure>
</li>
<li><p>在next主题配置文件中输入：</p>
<figure class="highlight yml"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="attr">baidu-site-verification:</span> <span class="string">你的key</span></div></pre></td></tr></table></figure>
</li>
<li><p>deploy完成验证即可</p>
</li>
</ol>
]]></content>
      
        <categories>
            
            <category> Tec </category>
            
            <category> Blog </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Hexo </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[hexo建站过程]]></title>
      <url>/2017/02/27/Tec/Blog/Hexo-blog%20building/</url>
      <content type="html"><![CDATA[<h1 id="用hexo搭建博客全过程"><a href="#用hexo搭建博客全过程" class="headerlink" title="用hexo搭建博客全过程"></a>用hexo搭建博客全过程</h1><blockquote>
<p>注：本文主要参考以下页面加上自己的经历整理而成：</p>
<ol>
<li><a href="http://www.jianshu.com/p/44a1be815400" target="_blank" rel="external">手把手教你用Hexo在GitHub上搭建个人博客</a></li>
<li><a href="http://www.cnblogs.com/zhcncn/p/4097881.html" target="_blank" rel="external">Hexo搭建Github静态博客 - 金石开 - 博客园</a><a id="more"></a>
</li>
</ol>
</blockquote>
<h2 id="1-环境准备"><a href="#1-环境准备" class="headerlink" title="1 环境准备"></a>1 环境准备</h2><ul>
<li><p>node.js npm和git安装，</p>
<blockquote>
<p>npm是随同nodejs一起安装的包管理工具，能解决nodejs代码部署上的许多问题（下载、上传程序or第三方包），这里通过npm安装hexo</p>
</blockquote>
</li>
<li><p>hexo安装<br>打开命令行工具，执行：<br><code>$npm install -g hexo</code></p>
</li>
</ul>
<p>若一直没有反应，可根据<a href="http://www.jianshu.com/p/cce30447fc35" target="_blank" rel="external">npm 安装 hexo 卡住问题解决</a>解决问题</p>
<h2 id="2-hexo使用"><a href="#2-hexo使用" class="headerlink" title="2 hexo使用"></a>2 hexo使用</h2><ul>
<li>建立hexo文件夹</li>
<li>在hexo目录下打开git bash，执行<br><code>hexo init</code></li>
<li>第一次启用需多执行<br><code>npm install</code></li>
<li><p>此时执行下列命令，便可以看大初始博客内容啦：<br><code>hexo sever</code></p>
<h2 id="3-文章编写"><a href="#3-文章编写" class="headerlink" title="3 文章编写"></a>3 文章编写</h2></li>
<li><p>在hexo目录下，执行：<br><code>hexo new &quot;title&quot;</code></p>
</li>
<li>之后可以在source/_posts/目录下的md文档进行编写</li>
<li><p>编写完后执行下列命令,会自动生成相应文章<br><code>hexo generate</code></p>
<blockquote>
<p>若出现错误，可先执行<br><code>hexo clean</code></p>
</blockquote>
</li>
</ul>
<p>Tips：</p>
<ul>
<li>more折叠文章，加入<br><code>&lt;!-- more --&gt;</code></li>
<li><p>tags配置正确写法：</p>
<blockquote>
<p>tags:[hexo,123]</p>
</blockquote>
</li>
</ul>
<h2 id="4-个性化设置"><a href="#4-个性化设置" class="headerlink" title="4 个性化设置"></a>4 个性化设置</h2><p>对自己的hexo博客进行个性化配置，主要从_config.yml入手。建议先备份该文件，再进行修改的尝试。</p>
<p>在hexo目录下找到_config.yml文件。使用文本编辑器打开，所有的配置选项都在这里，可以查阅文档了解每个配置项的意思，如title代表你博客的名称，author是你的名字，subtitle是副标题等，这些配置项会反应在博客的界面上，不同的主题（Theme，后文会提到）中，这些字段的表现形式是不一样的。<br>我们主要关心三个部分：</p>
<ul>
<li>基本信息，如 title、subtitle、description、author等。基本信息的修改依照主题的不同会有不同的表现方式，按照自己选择的主题来尝试并观察变化即可。</li>
<li>主题 theme。</li>
<li>部署 deploy ，后文会已发布到Github为例说明。deploy章节的修改见4.3章节。</li>
</ul>
<h3 id="4-1基本信息"><a href="#4-1基本信息" class="headerlink" title="4.1基本信息"></a>4.1基本信息</h3><p>可自行按需修改，注意：</p>
<blockquote>
<p>每一个值的冒号后面都有一个半角空格！</p>
</blockquote>
<h3 id="4-2主题"><a href="#4-2主题" class="headerlink" title="4.2主题"></a>4.2主题</h3><h4 id="4-2-1下载主题"><a href="#4-2-1下载主题" class="headerlink" title="4.2.1下载主题"></a>4.2.1下载主题</h4><ul>
<li><p>可参考知乎文章</p>
<blockquote>
<p><a href="http://www.zhihu.com/question/24422335" target="_blank" rel="external">有哪些好看的hexo主题</a></p>
</blockquote>
</li>
<li><p>主题下载方式<br>在hexo目录下，git命令行中输入：<br><code>git clone 主题地址 本地存储地址(themes/name)</code><br>也可直接在themes目录下clone，不用指定存储位置，自动存</p>
<h4 id="配置主题"><a href="#配置主题" class="headerlink" title="配置主题"></a>配置主题</h4><blockquote>
<p>在_config.yml中进行配置</p>
</blockquote>
</li>
</ul>
<h4 id="4-2-2使用主题"><a href="#4-2-2使用主题" class="headerlink" title="4.2.2使用主题"></a>4.2.2使用主题</h4><p>在_config.yml中修改其theme字段为</p>
<blockquote>
<h2 id="Themes-http-hexo-io-themes"><a href="#Themes-http-hexo-io-themes" class="headerlink" title="Themes: http://hexo.io/themes/"></a>Themes: <a href="http://hexo.io/themes/" target="_blank" rel="external">http://hexo.io/themes/</a></h2><p>theme: yilia</p>
</blockquote>
<p><strong>注意：冒号后有个半角空格</strong><br>配置完毕后，依次执行以下命令：</p>
<blockquote>
<p>hexo clean<br>hexo generate<br>hexo server</p>
</blockquote>
<h2 id="5-连接到github"><a href="#5-连接到github" class="headerlink" title="5 连接到github"></a>5 连接到github</h2><h3 id="5-1前期准备"><a href="#5-1前期准备" class="headerlink" title="5.1前期准备"></a>5.1前期准备</h3><p>1.github注册，创建一个仓库，命名为:用户名.github.io<br>2.description选填，选public,点击create repository<br>3.现在你就可以通过<a href="http://name.github.io访问你的页面了（空页面可能会报错）" target="_blank" rel="external">http://name.github.io访问你的页面了（空页面可能会报错）</a><br><strong>注意：若需要和github通过SSH进行安全通信，请参考：</strong></p>
<blockquote>
<p><a href="http://blog.csdn.net/binyao02123202/article/details/20130891" target="_blank" rel="external">github设置添加SSH</a></p>
</blockquote>
<h3 id="5-2配置deploy"><a href="#5-2配置deploy" class="headerlink" title="5.2配置deploy"></a>5.2配置deploy</h3><p>打开hexo的_config.yml文件，找到deployment章节,将type改为git，repository改为你的GitHubPages地址。这个地址应该长这样：</p>
<blockquote>
<p>git@github.com:[你的GitHub用户名]/[你的GitHub用户名].github.io.git</p>
</blockquote>
<p>branch用来指向分支，如果没有特定的分支配置，可以使用默认的master。<br>最终我的deployment部分如下，供参考</p>
<blockquote>
<h1 id="Deployment"><a href="#Deployment" class="headerlink" title="Deployment"></a>Deployment</h1><h2 id="Docs-http-hexo-io-docs-deployment-html"><a href="#Docs-http-hexo-io-docs-deployment-html" class="headerlink" title="Docs: http://hexo.io/docs/deployment.html"></a>Docs: <a href="http://hexo.io/docs/deployment.html" target="_blank" rel="external">http://hexo.io/docs/deployment.html</a></h2><p>deploy:<br>type: git<br>repository: git@github.com:vonxq/vonxq.github.io.git<br>branch: master<br><strong>注意：第一次deploy前需执行：</strong><br><code>npm install hexo-deployer-git --save</code><br>最后执行如下命令将博客发布到自己的github首页上<br><code>hexo deploy</code><br>之后可自行查看首页内容</p>
</blockquote>
<p>deploy成功网页却404解决办法：</p>
<blockquote>
<p><a href="http://awhisper.github.io/2016/11/21/GitPage-Next%E7%9A%84CSS-JS%E9%94%99%E8%AF%AF/?" target="_blank" rel="external">GitPage部署Hexo NexT主题的CSS/JS错误</a><br>注意：</p>
<h2 id="6-日常维护"><a href="#6-日常维护" class="headerlink" title="6 日常维护"></a>6 日常维护</h2><ol>
<li>当部署成功后，我们日常只需要：</li>
<li>新建文章(new)</li>
<li>找到生成的.md然后编辑并保存</li>
<li>生成博客(generate)</li>
<li>部署(deploy)<br>就可以完成新文章的发布。</li>
</ol>
</blockquote>
<p>日常使用命令整理如下：</p>
<blockquote>
<p>hexo new “文章标题名称” //新建文章<br>hexo clean //清理（非必须），在遇到问题时可尝试先clean再generate<br>hexo generate //将文章生成为博客的一部分<br>hexo g //同上，generate的简写<br>hexo server //本地预览（非必须）<br>hexo deploy //推送到GitHub<br>hexo d //同上，deploy的简写</p>
</blockquote>
<h2 id="tips"><a href="#tips" class="headerlink" title="tips"></a>tips</h2><h3 id="字数、阅读时间统计"><a href="#字数、阅读时间统计" class="headerlink" title="字数、阅读时间统计"></a>字数、阅读时间统计</h3><ol>
<li><p>安装插件</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">npm install hexo-wordcount@2 --save</div><div class="line">(Node 版本 7.6.0 之前,安装 2.x 版本)</div></pre></td></tr></table></figure>
</li>
<li><p>开启统计</p>
<blockquote>
<p>post_wordcount:<br>item_text: true<br>wordcount: true<br>min2read: true<br>separated_meta: true</p>
</blockquote>
</li>
</ol>
<h3 id="使用hexo模板scaffold"><a href="#使用hexo模板scaffold" class="headerlink" title="使用hexo模板scaffold"></a>使用hexo模板scaffold</h3><p>hexo根目录下scaffold文件夹下可自定义模板，之后再hexo new时会被调用<br>post.md为普通文章模板</p>
<h3 id="hexo博客评论功能"><a href="#hexo博客评论功能" class="headerlink" title="hexo博客评论功能"></a>hexo博客评论功能</h3><p><a href="https://imsun.net/posts/gitment-introduction/" target="_blank" rel="external">Gitment：使用 GitHub Issues 搭建评论系统</a></p>
]]></content>
      
        <categories>
            
            <category> Tec </category>
            
            <category> Blog </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Hexo </tag>
            
            <tag> GitHub </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[markdown基础]]></title>
      <url>/2017/02/14/Tec/Blog/markdown%20basic%20knowledge/</url>
      <content type="html"><![CDATA[<p>本文内容转载自<a href="http://www.jianshu.com/p/1e402922ee32/" target="_blank" rel="external">Markdown——入门指南</a>，略有删改。<br>更多语法可参考<a href="http://www.appinn.com/markdown/" target="_blank" rel="external">Markdown 语法说明 (简体中文版)</a></p>
<h1 id="标题"><a href="#标题" class="headerlink" title="标题"></a>标题</h1><p>#号后面添加空格，后面的文字便会具有标题的格式。#号个数代表标题级数，越多越小。</p>
<h1 id="列表"><a href="#列表" class="headerlink" title="列表"></a>列表</h1><h2 id="无序列表"><a href="#无序列表" class="headerlink" title="无序列表"></a>无序列表</h2><p>*或-或+后面加一个空格可构成无序列表，效果如下：</p>
<blockquote>
<ul>
<li>林俊杰</li>
</ul>
<ul>
<li>明道</li>
</ul>
<ul>
<li>张继科</li>
</ul>
</blockquote>
<h2 id="有序列表"><a href="#有序列表" class="headerlink" title="有序列表"></a>有序列表</h2><p>用1.2.3.后面加空格即可，如下:</p>
<ol>
<li>林俊杰</li>
<li>张继科</li>
<li>明道<h1 id="引用"><a href="#引用" class="headerlink" title="引用"></a>引用</h1>用>之后加引用内容即可，如下<blockquote>
<p>我是引用内容</p>
</blockquote>
</li>
</ol>
<h1 id="图片与链接"><a href="#图片与链接" class="headerlink" title="图片与链接"></a>图片与链接</h1><p>图片为：![链接名](链接地址)<br>链接为：[链接名](链接地址)<br>例子如下：<br>图片：<br><img src="http://img4.imgtn.bdimg.com/it/u=1344213028,140587812&amp;fm=11&amp;gp=0.jpg" alt="玫瑰花"><br>链接：<br><a href="https://www.baidu.com" target="_blank" rel="external">百度</a></p>
<h2 id="当页跳转"><a href="#当页跳转" class="headerlink" title="当页跳转"></a>当页跳转</h2><blockquote>
<ol>
<li>先定义一个锚(id)<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">&lt;span id=<span class="string">"jump"</span>&gt;Hello World&lt;<span class="regexp">/span&gt;</span></div></pre></td></tr></table></figure>
</li>
</ol>
</blockquote>
<ol>
<li>然后使用markdown的语法<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">[XXXX](#jump)</div></pre></td></tr></table></figure>
</li>
</ol>
<h1 id="粗体与斜体"><a href="#粗体与斜体" class="headerlink" title="粗体与斜体"></a>粗体与斜体</h1><p>Markdown 的粗体和斜体也非常简单，用两个 <em> 包含一段文本就是粗体的语法，用一个 </em> 包含一段文本就是斜体的语法，不用空格隔开。<br>如下：<br><strong>我是粗体</strong><br><em>我是斜体</em></p>
<h1 id="表格"><a href="#表格" class="headerlink" title="表格"></a>表格</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">| 默认左对齐     | 居中          | 右对齐 |</div><div class="line">| ------------- |:-------------:| -----:|</div><div class="line">| col 3 is      | right-aligned | $1600 |</div><div class="line">| col 2 is      | centered      |   $12 |</div><div class="line">| zebra stripes | are neat      |    $1 |</div></pre></td></tr></table></figure>
<p>生成效果：(Table前最好换行，不然可能不显示)</p>
<table>
<thead>
<tr>
<th>默认左对齐</th>
<th style="text-align:center">居中</th>
<th style="text-align:right">右对齐</th>
</tr>
</thead>
<tbody>
<tr>
<td>col 3 is</td>
<td style="text-align:center">right-aligned</td>
<td style="text-align:right">$1600</td>
</tr>
<tr>
<td>col 2 is</td>
<td style="text-align:center">centered</td>
<td style="text-align:right">$12</td>
</tr>
<tr>
<td>zebra stripes</td>
<td style="text-align:center">are neat</td>
<td style="text-align:right">$1</td>
</tr>
</tbody>
</table>
<h1 id="代码框"><a href="#代码框" class="headerlink" title="代码框"></a>代码框</h1><p>行内代码(inline code)：`\<code\>`,效果：<code>&lt;code&gt;</code></code\></p>
<p>块代码(block code)：代码每一行的前面都加4个空格或一个tab，效果：<br>    code1<br>    code2</p>
<p>Fenced Code Block：第一行和最后一行都是3个 “ ` “，中间的行是代码，如下</p>
<p>```<br>\<code\><br>```<br>效果：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">&lt;code&gt; </div><div class="line">haha</div></pre></td></tr></table></figure></code\></p>
]]></content>
      
        <categories>
            
            <category> Tec </category>
            
            <category> Blog </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Markdown </tag>
            
        </tags>
        
    </entry>
    
  
  
</search>
